@using System.Web.UI.WebControls
@using DevExpress.Web.Mvc
@using DevExpress.Web

@model PMS.Models.ViewModel.BillofQuantitiesVM
@{
    ViewBag.Title = "Bill of Quantities";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@*<link href="~/assests/css/SearchPopup.css" rel="stylesheet" />open it when run in live*@
<script src="~/Scripts/SearchPopup.js"></script>
<link href="~/assests/css/custom/SearchPopup.css" rel="stylesheet" />
<link href="~/assests/css/custom/PMSStyles.css" rel="stylesheet" />
<script src="~/assests/js/PMS/TaxDetailsItemlevel.js?v1.0.0004"></script>



@Html.Hidden("hdnProductID")

<input type="hidden" value="@Url.Action("Billofquantitieslist", "BillofQuantities" )" id="hdnBOQListPage" />
<input type="hidden" value="@Model.DetailsID" id="hdnDetailsID" />

<input type="hidden" value="@Model.Approve" id="hdnAprove" />

@*<input type="hidden" value="@Model.BOQType" id="hdnBOQTYPE" />*@
<input type="hidden" value="@Model.WarehouseID" id="hdnProductWarehouseID" />
<input type="hidden" value="@Model.RevisionNo" id="hdnRevisionNo" />

<input type="hidden" value="@Model.Proposal_ID" id="hdnProposal_ID" />
<input type="hidden" value="@Model.Quotation_ID" id="hdnQuotation_ID" />

<input type="hidden" value="@Model.BOQ_SCHEMAID" id="hdnBOQ_SCHEMAID" />

<input type="hidden" value="@Model.ProjectID" id="hdnProjectID" />
<input type="hidden" value="@Model.Proj_Code" id="hdnProjectCode" />
<input type="hidden" value="@Model.Approve" id="hdnApprove" />
<input type="hidden" id="hdnApproveReject" />
<input type="hidden" id="hdnTagModule" />

<input type="hidden" id="hdnProdAddlDescSl" />
<input type="hidden" id="hdnResAddlDescSl" />

<input type="hidden" value="@Model.ApprovRevSettings" id="hdnApproveRevSettings" />

<div class="panel-heading clearfix">
    <div class="panel-title clearfix pull-left" id="myDiv">
        <h3 class="pull-left">
            <label>Bill of Quantities</label>
        </h3>

    </div>

    <div id="ApprovalCross" class="crossBtn"><a href="@Url.Action("Billofquantitieslist", "BillofQuantities" )"><i class="fa fa-times"></i></a></div>
</div>

<input type="hidden" value="@Model.FinishedItem" id="hdnFinishedItem" />
<input type="hidden" value="0" id="hdnSchemaId" />
<div class="">
    <div class="boxBorder">
        <div class="styledBox">
            <div class="row">
                <div class="col-md-2">
                    <label>Numbering Scheme <span style="color:red">*</span></label>
                    <div class="relative">
                        <select id="ddlSchema" class="form-control" onchange="Scheme_ValueChange()"></select>
                        <span id="EddlSchema" class="customerno pullleftClass fa fa-exclamation-circle iconRed " style="color: red; position: absolute; display: none" title="Mandatory"></span>
                    </div>
                </div>

                <div class=" col-sm-2">
                    <label>BOQ No. <span style="color:red">*</span></label>
                    <div class="relative">
                        @Html.TextBoxFor(m => m.BOQNo, new { @class = "form-control", @disabled = "disabled" })
                        <span id="EBOQNo" class="customerno pullleftClass fa fa-exclamation-circle iconRed " style="color: red; position: absolute; display: none" title="Mandatory"></span>
                    </div>

                </div>
                <div class=" col-sm-2">
                    <label>BOQ Date <span style="color:red">*</span></label>
                    <div class="relative">
                        @Html.DevExpress().DateEdit(
                        settings =>
                        {
                            settings.Name = "BOQDate_dt";
                            settings.Properties.DisplayFormatString = "dd-MM-yyyy";
                            settings.Properties.EditFormatString = "dd-MM-yyyy";
                            settings.Width = Unit.Percentage(100);
                            settings.Properties.ClientSideEvents.DateChanged = "datevalidateTo";
                            settings.Date = Convert.ToDateTime(Model.BOQDate);

                        }
                        ).GetHtml()
                        <span id="EBOQDate_dt" class="customerno pullleftClass fa fa-exclamation-circle iconRed " style="color: red; position: absolute; display: none" title="Mandatory"></span>
                    </div>
                </div>
                <div class=" col-sm-2 hide" id="divRevNo">
                    <label>Revision No. <span style="color:red" id="redREV">*</span></label>
                    <div class="relative">
                        @Html.TextBoxFor(m => m.RevisionNo, new { @class = "form-control" })
                        <span id="ERevisionNo" class="customerno pullleftClass fa fa-exclamation-circle iconRed " style="color: red; position: absolute; display: none" title="Mandatory"></span>
                    </div>
                </div>

                <div class=" col-sm-2 hide" id="divRevDate">
                    <label>Revision Date <span style="color:red" id="redREVDate">*</span></label>
                    <div class="relative">
                        @Html.DevExpress().DateEdit(
                        settings =>
                        {
                            settings.Name = "RevisionDate_dt";
                            settings.Properties.DisplayFormatString = "dd-MM-yyyy";
                            settings.Properties.EditFormatString = "dd-MM-yyyy";
                            settings.Width = Unit.Percentage(100);
                            settings.Properties.ClientSideEvents.DateChanged = "datevalidateTo";
                            settings.Date = Convert.ToDateTime(Model.RevisionDate);
                            settings.Properties.MinDate = Convert.ToDateTime(Model.strREVDate);

                        }).GetHtml()
                        <span id="ERevisionDate_dt" class="customerno pullleftClass fa fa-exclamation-circle iconRed " style="color: red; position: absolute; display: none" title="Mandatory"></span>
                    </div>
                </div>


                <div class=" col-sm-2">
                    <label>Customer <span style="color:red">*</span></label>
                    <div class="relative">
                        @Html.DevExpress().ButtonEdit(
                        settings =>
                        {
                            settings.Name = "CustomerTxt";
                            settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                            settings.Text = Model.Customer;
                            settings.ReadOnly = true;
                            settings.Properties.Buttons.Add("...");
                            settings.Properties.ClientSideEvents.ButtonClick = "function(s,e){CustomerButnClick(s,e);}";
                            settings.Properties.ClientSideEvents.KeyDown = "function(s,e){Customer_KeyDown(s,e);}";

                        }).GetHtml()

                        <input type="hidden" id="txtContact_hidden">
                        <input type="hidden" id="CustomerId" value="@Model.Customer_ID">
                        <span id="EddlBankBranch" class="customerno pullleftClass fa fa-exclamation-circle iconRed " style="color: red; position: absolute; display: none" title="Mandatory"></span>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class=" col-sm-2">
                    <label class="mtop10">Unit <span style="color:red">*</span></label>
                    <div class="relative">
                        @Html.DropDownListFor(x => x.Unit, new SelectList(Model.UnitList, "BranchID", "BankBranchName"), new { @id = "ddlBankBranch", @class = "form-control", @disabled = "disabled" })@*, @onchange = "PopulateWareHouseData();"*@
                        <span id="EddlBankBranch" class="customerno pullleftClass fa fa-exclamation-circle iconRed " style="color: red; position: absolute; display: none" title="Mandatory"></span>
                    </div>
                </div>
                <div class=" col-sm-2">
                    <label class="mtop10">Estimate </label>
                    <div class="relative" id="divEstimate">
                        @Html.Action("GetEstimateCode", "BillofQuantities", new { customer_id = ViewBag.Customer_id, Branchs = ViewBag.Unit, ESTIMATE = ViewBag.Estimateid })

                    </div>
                </div>

                <div class=" col-sm-2">
                    <label class="mtop10">Proposal / Quotation </label>
                    <div class="relative">
                        @*@Html.DevExpress().ButtonEdit(
                            settings =>
                            {
                                settings.Name = "btnProposal";
                                settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                                settings.Text = Model.Proposal;
                                settings.ReadOnly = true;
                                settings.Properties.Buttons.Add("...");
                                settings.Properties.ClientSideEvents.ButtonClick = "function(s,e){btnProposalList_Click(s,e);}";
                                settings.Properties.ClientSideEvents.KeyDown = "function(s,e){btnProposal_KeyDown(s,e);}";

                            }).GetHtml()*@

                        @Html.Action("GetProposalCode", "BillofQuantities", new { customer_id = ViewBag.Customer_id, Branchs = ViewBag.Unit, ESTIMATE = ViewBag.Estimateid, Proposal = ViewBag.Proposal_ID })

                    </div>
                </div>
                <div class=" col-sm-2 hidden">
                    <label class="mtop10">Quotation </label>
                    <div class="relative">
                        @Html.DevExpress().ButtonEdit(
                        settings =>
                        {
                            settings.Name = "btnQuotation";
                            settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                            settings.Text = Model.Quotation;
                            settings.ReadOnly = true;
                            settings.Properties.Buttons.Add("...");
                            settings.Properties.ClientSideEvents.ButtonClick = "function(s,e){btnQuotationList_Click(s,e);}";
                            settings.Properties.ClientSideEvents.KeyDown = "function(s,e){btnQuotation_KeyDown(s,e);}";

                        }).GetHtml()

                    </div>
                </div>
                <div class=" col-sm-2" id="divProj">
                    <label class="mtop10">Project Code </label>
                    <div class="relative">
                        @Html.Action("GetProjectCode", "BillofQuantities", new { Project_ID = ViewBag.ProjectID, customer_id = ViewBag.Customer_id, Branchs = ViewBag.Unit, TagProject_ID = ViewBag.ProjectTagID, Hierarchy = @ViewBag.Hierarchy })

                    </div>
                </div>

                <div class=" col-sm-2">
                    <label class="mtop10">Order </label>
                    <div class="relative">
                        @Html.Action("GetContractCode", "BillofQuantities", new { customer_id = ViewBag.Customer_id, Contract = ViewBag.ContractNo, Branchs = ViewBag.Unit, ProjectID = ViewBag.ProjectID })

                    </div>
                </div>

            </div>
            <div class="row">
                <div class=" col-sm-4" id="divHierarchy">
                    <label class="mtop10">Hierarchy</label>
                    <div class="relative">
                        @Html.DropDownListFor(x => x.Hierarchy, new SelectList(Model.Hierarchy_List, "Hierarchy_id", "Hierarchy_Name"), new { @id = "ddlHierarchy", @class = "form-control", @disabled = "disabled" })
                    </div>
                </div>
                <div class=" col-sm-2">
                    <label class="mtop10">Amounts are</label>
                    <div class="relative">
                        <select id="ddl_AmountAre" class="form-control disabled" onchange="Scheme_ValueChange()"></select>
                    </div>
                </div>
            </div>

            <div class="row">

                <div class=" col-sm-6">
                    <label class="mtop10">Remarks </label>
                    <div class="relative">
                        <textarea rows="1" class="form-control" onblur="Remarkstab()" maxlength="500" id="txt_HeadRemarks">@Model.HeadRemarks</textarea>
                    </div>
                </div>
                <div class="col-sm-3 hidden" id="divApproveRemarks">
                    <label class="mtop10">Approve/Reject Remarks <span style="color:red">*</span> </label>
                    <div class="relative">
                        <textarea rows="1" class="form-control" maxlength="500" id="txt_ApproveRemarks">@Model.ApproveRemarks</textarea>
                    </div>
                    <div class="clearfix"></div>

                </div>
                <div class="col-sm-3 hidden" id="divApproveButton">
                    @*style="padding-top: 15px;"*@
                    <label class="mtop10 text-danger" id="lblApproveName">@Model.APPROVE_NAME&nbsp;</label>
                    <div class="relative">
                        <div class="btn btn-success" id="btnApprove" onclick="BOQApprove('Approve');"><span>Approve</span></div>
                        <div class="btn btn-danger " id="btnReject" onclick="BOQApprove('Reject');"><span>Reject</span></div>
                    </div>
                </div>
            </div>
        </div>
        <br />

        <div class="row">
            <div class="col-md-12">

                <div id="refreshgrid">
                    <div class="makeFullscreen ">
                        <span class="fullScreenTitle">BOQ</span>
                        <span class="makeFullscreen-icon half hovered " data-instance="gridBOQProductEntryList" title="Maximize Grid" id="expandgridBOQProductEntryList">
                            <i class="fa fa-expand"></i>
                        </span>
                        @{
                            Html.RenderAction("GetBOQProductEntryList", "BillofQuantities");
                        }
                    </div>
                </div>
                @*@{

                    Html.Partial("~/Views/Estimate/Estimate/_EstimateProductEntryGrid.cshtml");
                    //Html.RenderPartial("_EstimateProductEntryGrid");
                    }*@
                <div class="clearfix footrGrider">

                    <div class="ttAMt pull-left">
                        <table>
                            <tr>
                                <td><label>Total Amount</label></td>
                                <td><input type="text" class="form-control text-right" id="txtGridProductEntryTotalAmount" style="width: 132px;" placeholder="0.00" disabled /></td>
                            </tr>
                        </table>
                    </div>
                </div>
            </div>


        </div>

        @* Rev 1.1 New grid like POS module *@
        <div class="row relative" id="refreshgrid2">
            <div class="col-md-12 relative">
                <h4>
                    Resources <i class="fa fa-reply backwords"></i>
                    <span id="closeResource" class="pull-right"><i class="fa fa-close"></i></span>
                    <span id="slideResource" class="pull-right"><i class="fa fa-chevron-up"></i><i class="fa fa-chevron-down"></i></span>
                </h4>

            </div>

            <div class="col-md-12 mTop10">
                <div id="slideDiv">
                    <div>
                        <div class="makeFullscreen ">
                            <span class="fullScreenTitle">Resources</span>
                            <span class="makeFullscreen-icon half hovered " data-instance="gridBOQResourcesList" title="Maximize Grid" id="expandgridBOQResourcesList">
                                <i class="fa fa-expand"></i>
                            </span>
                            @{
                                Html.RenderAction("GetBOQResources", "BillofQuantities");
                            }
                        </div>
                    </div>
                    <div class="clearfix footrGrider">

                        <div class="ttAMt tw">
                            <table>
                                <tr>
                                    <td><label>Total Amount</label></td>
                                    <td><input type="text" class="form-control text-right" id="txtGridResourcesTotalAmount" style=" width: 132px;" placeholder="0.00" disabled /></td>
                                </tr>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="">
            <div class="clearfix">
                <div class="inline-block addResourceBtn mRight5" id="showResources"><div class="addEdcircleBtn"><i class="fa fa-plus"></i></div><span>Add <span><u>R</u></span>esources</span></div>
                <div class="inline-block addResourceBtn themeColor mRight5" id="btnSaveandNew" onclick="BOQSave('New');"><div class="addEdcircleBtn" id=""><i class="fa fa-floppy-o"></i></div><span>Save and <span><u>N</u></span>ew</span></div>
                <div class="inline-block addResourceBtn themeColor " id="btnSaveandExit" onclick="BOQSave('Exit');"><div class="addEdcircleBtn" id=""><i class="fa fa-reply"></i></div><span>Save and <span><u>E</u></span>xit</span></div>



                <div class="inline-block pull-right">

                    @*<div class="inline-block mTop5">
                            <label class="stLbl ">Actual Additional Cost</label>
                            <div>
                                <input type="text" value="@Model.ActualAdditionalCost" placeholder="0.00" id="txtActualAdditionalCost" maxlength="12" class="form-control decimalCheck" onchange="ChkMoneyDigitCount(this);" onkeypress="return validateFloatKeyPress(this,event);" />
                            </div>
                        </div>*@
                </div>
            </div>
            <div class="">
            </div>
        </div>

    </div>
</div>
<!-- Product List -->
<div class="modal fade" id="ProductlistModel" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" onclick="SetFocusQty();">&times;</button>
                <h4 class="modal-title">Select Product</h4>
            </div>
            <div class="modal-body">
                <input type="text" onkeydown="ProductListkeydown(event)" id="txtProductName" autofocus width="100%" placeholder="Search By Product Name or Short Name" />
                <div id="ProductTable">
                    <table border='1' width="100%" class="dynamicPopupTbl">
                        <tbody>
                            <tr class="HeaderStyle">
                                <th class="hide">id</th>
                                <th>Product Code</th>
                                <th>Product Name</th>
                                <th>Inventory</th>
                                <th>HSN/SAC</th>
                                <th>Class</th>
                                <th>Brand</th>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal" onclick="SetFocusQty();">Close</button>
            </div>
        </div>
    </div>
</div>
<!-- Product List-->
<!-- Grid Product List -->
<div class="modal fade" id="GridProductlistModel" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Select Product</h4>
            </div>
            <div class="modal-body">
                <input type="text" onkeydown="GridProductListkeydown(event)" id="txtGridProductName" autofocus width="100%" placeholder="Search By Product Name or Short Name" />
                <div id="GridProductTable">
                    <table border='1' width="100%" class="dynamicPopupTbl">
                        <tr class="HeaderStyle">
                            <th class="hide">id</th>
                            <th>Product Code</th>
                            <th>Product Name</th>
                            <th>Inventory</th>
                            <th>HSN/SAC</th>
                            <th>Class</th>
                            <th>Brand</th>
                        </tr>
                    </table>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal" onclick="SetFocusDesc()">Close</button>
            </div>
        </div>
    </div>
</div>
<!-- Grid Product List-->
<!-- Grid Warehouse List -->
<div class="modal fade pmsModal w30" id="GridWarehouselistModel" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" onclick="SetWarehouseAfterProduct()">&times;</button>
                <h4 class="modal-title">Select Warehouse</h4>
            </div>
            <div class="modal-body">
                <div id="slcWarehouse">
                    <select id="ddlWarehouselist" class="form-control"></select>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-success btn-radius" id="setWarehousegrid" onclick="SetWarehouseInGrid()">Ok</button>
            </div>
        </div>
    </div>
</div>
<!-- Grid Product List-->
<!-- Grid Estimate List -->
<div class="modal fade" id="GridEstimatelistModel" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Select Estimate</h4>
            </div>
            <div class="modal-body">
                <input type="text" onkeydown="GridEstimateListkeydown(event)" id="txtEstimateName" autofocus width="100%" placeholder="Search By Estimate Name" />
                <div id="GridEstimateTable">
                    <table border='1' width="100%" class="dynamicPopupTbl">
                        <tr class="HeaderStyle">
                            <th class="hide">id</th>
                            <th>Estimate No.</th>
                            <th>Estimate Date</th>
                            <th>Revision No.</th>
                            <th>Revision Date</th>
                        </tr>
                    </table>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-success btn-radius" data-dismiss="modal" onclick="SetEstimateFocusGrid()">Close</button>
            </div>
        </div>
    </div>
</div>
<!-- Grid Estimate List-->
<!-- Proposal List -->
<div class="modal fade" id="ProposallistModel" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" onclick="SetFocusQty();">&times;</button>
                <h4 class="modal-title">Select Proposal</h4>
            </div>
            <div class="modal-body">
                <input type="text" onkeydown="ProposalListkeydown(event)" id="txtProposalName" autofocus width="100%" placeholder="Search By Proposal No." />
                <div id="ProposalTable">
                    <table border='1' width="100%" class="dynamicPopupTbl">
                        <tbody>
                            <tr class="HeaderStyle">
                                <th class="hide">id</th>
                                <th>Proposal NO</th>
                                <th>Proposal Date</th>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal" onclick="SetFocusQty();">Close</button>
            </div>
        </div>
    </div>
</div>
<!-- Proposal List-->
<!-- Quotation List -->
<div class="modal fade" id="QuotationlistModel" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" onclick="SetFocusQty();">&times;</button>
                <h4 class="modal-title">Select Quotation</h4>
            </div>
            <div class="modal-body">
                <input type="text" onkeydown="QuotationListkeydown(event)" id="txtQuotationName" autofocus width="100%" placeholder="Search By Quotation No." />
                <div id="QuotationTable">
                    <table border='1' width="100%" class="dynamicPopupTbl">
                        <tbody>
                            <tr class="HeaderStyle">
                                <th class="hide">id</th>
                                <th>Quotation NO</th>
                                <th>Quotation Date</th>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal" onclick="SetFocusQty();">Close</button>
            </div>
        </div>
    </div>
</div>
<!-- Quotation List-->
<!--Customer List-->
<div class="modal fade" id="CustModel" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Customer Search</h4>
            </div>
            <div class="modal-body">
                <input type="text" onkeydown="Customerkeydown(event)" id="txtCustSearch" autofocus width="100%" placeholder="Search By Customer Name or Unique Id" />
                <div id="CustomerTable">
                    <table border='1' width="100%" class="dynamicPopupTbl">
                        <tr class="HeaderStyle">
                            <th class="hide">id</th>
                            <th>Name</th>
                            <th>Unique Id</th>
                            <th>Address</th>
                        </tr>
                    </table>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>
<!--Customer List-->
<!-- Grid Tax Type List -->
<div class="modal fade pmsModal w30" id="GridTaxTypelistModel" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" onclick="SetTaxTypeAfterProduct()">&times;</button>
                <h4 class="modal-title">Select Tax Type</h4>
            </div>
            <div class="modal-body">
                <div id="slcWarehouse">
                    <select id="ddlTaxTypelist" class="form-control">
                        <option value="1">SGST + CGST / UTGST</option>
                        <option value="2">IGST</option>
                        <option value="3">Others</option>
                    </select>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-success btn-radius" id="setTaxTypeid" onclick="SetTaxTypeInGrid()">Ok</button>
            </div>
        </div>
    </div>
</div>
<!-- Grid Tax Type List-->
<!-- Grid Resource Tax Type List -->
<div class="modal fade pmsModal w30" id="RescTaxTypelistModel" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" onclick="SetRescTaxTypeAfterProduct()">&times;</button>
                <h4 class="modal-title">Select Tax Type</h4>
            </div>
            <div class="modal-body">
                <div id="slcWarehouse">
                    <select id="ddlRescTaxTypelist" class="form-control">
                        <option value="1">SGST + CGST / UTGST</option>
                        <option value="2">IGST</option>
                        <option value="3">Others</option>
                    </select>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-success btn-radius" id="setRescTaxTypeid" onclick="SetRescTaxTypeInGrid()">Ok</button>
            </div>
        </div>
    </div>
</div>
<!-- Grid Resource Tax Type List-->
<!-- Grid Additional Description -->
<div class="modal fade pmsModal w30" id="GridAddlDescModel" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" onclick="SetAddlDescClose()">&times;</button>
                <h4 class="modal-title">Additional Description</h4>
            </div>
            <div class="modal-body">
                <div id="slcWarehouse">
                    <textarea rows="5" placeholder="Additional Description" class="form-control" maxlength="5000" id="txt_AddlDesc"></textarea>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-success btn-radius" id="setTaxTypeid" onclick="SetProdAddlDescGrid()">Ok</button>
            </div>
        </div>
    </div>
</div>
<!-- Grid Additional Description-->
<!-- Grid Resource Additional Description -->
<div class="modal fade pmsModal w30" id="GridResAddlDescModel" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" onclick="SetResAddlDescClose()">&times;</button>
                <h4 class="modal-title">Additional Description</h4>
            </div>
            <div class="modal-body">
                <div id="slcWarehouse">
                    <textarea rows="5" placeholder="Additional Description" class="form-control" maxlength="5000" id="txt_ResAddlDesc"></textarea>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-success btn-radius" id="setTaxTypeid" onclick="SetResAddlDescGrid()">Ok</button>
            </div>
        </div>
    </div>
</div>
<!-- Grid Resource Additional Description-->

<script>
    $(document).ready(function () {
        //LoadingPanel.Show();
        ProjectLookupValChange()
        var hdnDetailsID = $('#hdnDetailsID').val();
        if (hdnDetailsID == "") {
            $('#ddlSchema').focus();
        }
        setTimeout(function () {
            LoadingPanel.Hide();
        }, 1500);
    });

    function ChangeState(value) {
        // TagProductGrid.PerformCallback('SelectAndDeSelectProducts' + '~' + value);
        if (value == 'SelectAll') {
            TagProductGrid.SelectAllRowsOnPage();
        }
        else if (value == 'UnSelectAll') {
            TagProductGrid.UnselectAllRowsOnPage();
        }
    }



</script>

@Html.DevExpress().LoadingPanel(
    settings =>
    {
        settings.Name = "LoadingPanel";
        settings.Modal = true;
        settings.ContainerElementID = "dvStep3";
    }
).GetHtml()

@Html.DevExpress().PopupControl(
    settings =>
    {
        settings.Name = "PMScrPopUp";
        settings.Width = 800;
        settings.Height = 400;
        //settings.ScrollBars.v
        settings.AllowDragging = true;
        settings.CloseAction = CloseAction.CloseButton;
        settings.CloseOnEscape = true;
        settings.HeaderText = "Employees Target Setting";
        settings.Modal = true;
        settings.AutoUpdatePosition = true;
        settings.Top = 50;
        settings.PopupHorizontalAlign = PopupHorizontalAlign.WindowCenter;
        settings.PopupVerticalAlign = PopupVerticalAlign.Above;
        settings.SetContent(() =>
        { });

        //  settings.ClientSideEvents.CloseUp = "function(s, e){ ASPxClientEdit.ClearEditorsInContainer(null, '', true); }";
    }).GetHtml()
