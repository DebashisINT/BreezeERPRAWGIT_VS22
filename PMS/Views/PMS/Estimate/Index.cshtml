@using System.Web.UI.WebControls
@using DevExpress.Web.Mvc
@using DevExpress.Web

@model PMS.Models.ViewModel.EstimateViewModel
@{
    ViewBag.Title = "Estimate & Costing";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@*<link href="~/assests/css/SearchPopup.css" rel="stylesheet" />open it when run in live*@
@*<script src="~/Scripts/SearchPopup.js"></script>*@
<link href="https://cdn.datatables.net/1.10.19/css/jquery.dataTables.min.css" rel="stylesheet" />
<script src="https://cdn.datatables.net/1.10.19/js/jquery.dataTables.min.js"></script>
<script src="https://cdn.datatables.net/fixedcolumns/3.3.0/js/dataTables.fixedColumns.min.js"></script>
<script src="~/Scripts/SearchPopupDatatable.js"></script>
<link href="~/assests/css/custom/SearchPopup.css" rel="stylesheet" />
<link href="~/assests/css/custom/PMSStyles.css" rel="stylesheet" />
<script src="~/assests/js/PMS/TaxDetailsItemlevel.js?v1.0.0005"></script>

@*<script src="~/Views/PMS/Estimate/Estimate.js"></script>*@
<link href="~/Views/PMS/Estimate/Estimate.css" rel="stylesheet" />
@*<script src="~/Views/PMS/Estimate/Estimate.js"></script>*@
<script src="~/assests/js/PMS/Estimate.js?v1.0.0010"></script>
<script>
    function datevalidateTo() {

        if (EstimateDate_dt.GetDate()) {
            if (RevisionDate_dt.GetDate() <= EstimateDate_dt.GetDate()) {
                if ($('#hdnDetailsID').val() != "") {
                    RevisionDate_dt.SetValue(EstimateDate_dt.GetDate());
                    RevisionDate_dt.SetMinDate(EstimateDate_dt.GetDate());
                }
            }
        }
    }

    function ProjectStartCallback(s, e) {
        //debugger;
        e.customArgs["Customer_ID"] = $("#CustomerId").val();
        e.customArgs["Quotation_ID"] = $("#hdnProposal_ID").val();
        e.customArgs["Project_ID"] = '@ViewBag.ProjectID';
        // e.customArgs["Proj_Code"] = ProjectGridLookup.GetSelectedKeyFieldValues();
        if ('@ViewBag.Unit' != "") {
            e.customArgs["Unit"] = '@ViewBag.Unit';
        }
        else {
            e.customArgs["Unit"] = $("#ddlBankBranch").val();
        }
    }

    function ProjectGotfocus(s, e) {
        var ProjectId = (ProjectGridLookup.GetGridView().GetRowKey(ProjectGridLookup.GetGridView().GetFocusedRowIndex()));
        $("#hdnProjectgotfocusId").val(ProjectId);
    }

    function CloseGridLookup() {
        ContractGridLookup.ConfirmCurrentSelection();
        ContractGridLookup.HideDropDown();
    }

    function ContractStartCallback(s, e) {
        //debugger;
        e.customArgs["Customer_ID"] = $("#CustomerId").val();
        e.customArgs["ContractNo"] = '@ViewBag.ContractNo';
        if ('@ViewBag.Unit' != "") {
            e.customArgs["Unit"] = '@ViewBag.Unit';
        }
        else {
            e.customArgs["Unit"] = $("#ddlBankBranch").val();
        }
        e.customArgs["ProjectID"] = ProjectGridLookup.GetSelectedKeyFieldValues();
    }

    var ContractID = [];
    function ContractSelectionChanged(s, e) {
        ContractGridLookup.gridView.GetSelectedFieldValues("Details_ID", GetContractSelectedFieldValuesCallback);
    }

    function ProjectLookupValChange() {
        ProjectGridLookup.GetGridView().Refresh();
        //  ProjectGridLookup.GetGridView().Refresh();
    }

    function ProjectSelectionChanged(s, e) {
        //  debugger;
        // ProjectGridLookup.gridView.GetSelectedFieldValues("Proj_Id", GetProjectSelectedFieldValuesCallback);
        // ProjectGridLookup.gridView.GetSelectedFieldValues("Hierarchy_ID", GetProjectSelectedFieldValuesCallback);
        //var ProductName = ProjectGridLookup.gridView.batchEditApi.GetCellValue(e.visibleIndex, 'Hierarchy_ID');
        //alert(ProductName);
        //debugger;

        var ProjectId = (ProjectGridLookup.GetGridView().GetRowKey(ProjectGridLookup.GetGridView().GetFocusedRowIndex()));
        if (ProjectId != $("#hdnProjectgotfocusId").val()) {
            $("#hdnQuotation_ID").val("");
            $('#hdnProposal_ID').val("");
            btnProposal.SetText("");
            ContractGridLookup.Clear();
            Proposallist($("#txtProposalName").val());
        }


        var projId = ProjectGridLookup.GetValue();
        $.ajax({
            type: "POST",
            url: "@Url.Action("getHierarchyID", "Estimate")",
            data: { ProjID: projId },
            async: false,
            success: function (response) {
                if (response != null) {
                    //jAlert(response.Message);
                    $('#ddlHierarchy').val(response.Message);
                }
            }
        });
    }

    function ProjectLostFocus(s, e) {
        var ProjectId = (ProjectGridLookup.GetGridView().GetRowKey(ProjectGridLookup.GetGridView().GetFocusedRowIndex()));
        if (ProjectId != $("#hdnProjectgotfocusId").val()) {
            $("#hdnQuotation_ID").val("");
            $('#hdnProposal_ID').val("");
            btnProposal.SetText("");
            ContractGridLookup.Clear();
        }
    }

    function ContractLookupValChange() {
        ContractGridLookup.GetGridView().Refresh();
        //ContractGridLookup.GetGridView().Refresh();
    }

    function PopulateNumberingSchemeData() {
        var type = "";// $('#slcEstimatetype option:selected').val();
        $.ajax({
            type: "POST",
            url: "@Url.Action("getNumberingSchemeRecord", "Estimate")",
            //url: "../Estimate/getNumberingSchemeRecord",
            data: { type: type },
            success: function (response) {
                var html = "";
                var hdnEstimate_SCHEMAID = $('#hdnEstimate_SCHEMAID').val();
                for (var i = 0; i < response.length; i++) {
                    if (hdnEstimate_SCHEMAID != '') {
                        html = html + "<option value='" + response[i].SchemaID + "' selected>" + response[i].SchemaName + "</option>";
                    }
                    else {
                        html = html + "<option value='" + response[i].SchemaID + "'>" + response[i].SchemaName + "</option>";
                    }

                }
                $('#ddlSchema').html(html);
                $('#ddlSchema').val('@Model.Estimate_SCHEMAID');

                //$("#ddlSchema > option").each(function () {
                //    var str = this.value;
                //    var n = str.startsWith("1056");
                //    alert(this.value);
                //});
            }
        });
    }

    function PopulateAmountForData() {
        var type = "";// $('#slcEstimatetype option:selected').val();
        $.ajax({
            type: "POST",
            url: "@Url.Action("getAmountForRecord", "Estimate")",
            //url: "../Estimate/getAmountForRecord",
            data: { type: type },
            success: function (response) {
                var html = "";
                var hdnEstimate_SCHEMAID = $('#hdnEstimate_SCHEMAID').val();
                for (var i = 0; i < response.length; i++) {

                    html = html + "<option value='" + response[i].taxGrp_Id + "'>" + response[i].taxGrp_Description + "</option>";
                }
                $('#ddl_AmountAre').html(html);
                $('#ddl_AmountAre').val('@Model.TaxID');
            }
        });


    }
</script>

<script>
    $(document).ready(function () {
        // LoadingPanel.Show();
        //debugger;

        $("body").bind("keydown", function (event) {
            if ('@ViewBag.View' != "View") {
                if (hdnApprove != "Approve") {
                    if (event.keyCode == 88 && event.altKey == true) {
                        EstimateSave('Exit');
                    }

                    //if (event.keyCode == 83 && event.altKey == true) {
                    //    EstimateSave('New');
                    //}

                }
            }
            if (event.keyCode == 82 && event.altKey == true) {
                $('#showResources').click();
            }
        });

        //var hdnEstimateTYPE = $('#hdnEstimateTYPE').val();
        var hdnDetailsID = $('#hdnDetailsID').val();
        if (hdnDetailsID > 0) {
            //$('#slcEstimatetype option:selected').val(hdnEstimateTYPE);
            $('#EstimateNo').attr("disabled", "disabled");
            $('#ddlSchema').attr("disabled", "disabled");
            //$('#slcEstimatetype').attr("disabled", "disabled");

            //$('#EstimateDate_dt').attr("disabled", "disabled");
            //btnFinishedItem.SetButtonVisible(0, '');
            //$('#FinishedQty').attr("disabled", "disabled");
            $('#ddlBankBranch').attr("disabled", "disabled");
            //$('#ddlWarehouse').attr("disabled", "disabled");
            EstimateDate_dt.SetEnabled(false);
            //RevisionDate_dt.SetEnabled(false);

            //var EstimateResourcesTotal = $('#EstimateResourcesTotalAm').val();
            //if (EstimateResourcesTotal != "" && EstimateResourcesTotal != undefined) {
            //    $('#txtGridResourcesTotalAmount').val(parseFloat(EstimateResourcesTotal).toFixed(2));
            //}
            EstimateDate_dt.SetDate(new Date('@ViewBag.EstDate'));
            RevisionDate_dt.SetDate(new Date('@ViewBag.RevDate'));
            //RevisionDate_dt.SetMinDate(new Date('@ViewBag.RevDate'));


            // ctxtRevisionDate.SetMinDate(new Date(cPLQuoteDate.GetDate().toDateString()))

            var EstimateProductsTotal = $('#hdnEstimateEntryProductsTotalAm').val();
            if (EstimateProductsTotal != "" && EstimateProductsTotal != undefined) {
                $('#txtGridProductEntryTotalAmount').val(parseFloat(EstimateProductsTotal).toFixed(2));
            }
            //$('#ddlSchema').val($('#hdnEstimate_SCHEMAID').val());
            var hdnEstimateResourcesTotalAm = $('#hdnEstimateResourcesTotalAm').val();
            if (hdnEstimateResourcesTotalAm != "" && hdnEstimateResourcesTotalAm != undefined) {
                $('#txtGridResourcesTotalAmount').val(parseFloat(hdnEstimateResourcesTotalAm).toFixed(2));
            }

            var cntNo = '@ViewBag.ContractNo';

            ContractID = cntNo.split(',');

            $("#ddl_AmountAre").prop('disabled', 'disabled');

            //$('#btnSaveandNew').hide();

            // debugger;
            //ProjectGridLookup.gridView.Refresh()
            //ProjectGridLookup.gridView.Refresh()
            //var projCode = $('#hdnProjectCode').val();
            //ProjectGridLookup.SetValue(projCode);
            //ProjectGridLookup.SetText(projCode);
            // $('#ddl_AmountAre').val('@Model.TaxID');
if ($('#hdnRevisionRequiredEveryAfterApproval').val() == "No") {
            $('#RevisionNo').removeAttr("disabled");

}
else{
$('#RevisionNo').attr("disabled", "disabled");
            	RevisionDate_dt.SetEnabled(false);
}
            setTimeout(function () { var noofrow = gridEstimateResourcesList.GetVisibleRowsOnPage(); if (noofrow > 1) { $('#showResources').click(); } }, 800);

        }
        else {
            //$("#EstimateNo").removeAttr("disabled");
            $("#ddlSchema").removeAttr("disabled");
            //$("#slcEstimatetype").removeAttr("disabled");
            $('#FinishedQty').removeAttr("disabled");
            $('#RevisionNo').removeAttr("disabled");
            //$('#ddlBankBranch').removeAttr("disabled");
            //$('#ddlWarehouse').removeAttr("disabled");
            EstimateDate_dt.SetEnabled(true);
            RevisionDate_dt.SetEnabled(true);
            //$('#btnSaveandNew').show();
            RevisionDate_dt.SetDate(null);
            $('#hdnEstimate_SCHEMAID').val('');
            $("#ddl_AmountAre").removeAttr("disabled");
            gridEstimateProductEntryList.batchEditApi.EndEdit();
            gridEstimateProductEntryList.batchEditApi.StartEdit(globalrowindex, PrdProdNameIndex);
            gridEstimateProductEntryList.CancelEdit();
            setTimeout(function () {
                $("#ddlSchema").focus();
            }, 600);

        }

        if ('@ViewBag.Hierarchy' == "1") {
            $('#divHierarchy').removeClass('hidden');
        }
        else {
            $('#divHierarchy').addClass('hidden');
        }

        var hdnApprove = $('#hdnAprove').val();

        if (hdnApprove == "Approve") {
            //$('#btnSaveandNew').hide();
            $('#btnSaveandExit').hide();
            $('#btnApprove').show();
            $('#btnReject').show();
            $('#divApproveButton').removeClass('hidden');
            $('#divApproveRemarks').removeClass('hidden');
            if ($('#hdnRevisionRequiredEveryAfterApproval').val() == "No") {
                $('#RevisionNo').attr("disabled", "disabled");
                RevisionDate_dt.SetEnabled(false);
            }
            else {
  		if ($('#hdnisFirstApprove').val() == "Yes" && hdnApprove == "Approve") {
                $('#RevisionNo').removeAttr("disabled", "disabled");
                RevisionDate_dt.SetEnabled(true);
		}
		else{
		$('#RevisionNo').attr("disabled", "disabled");
            	RevisionDate_dt.SetEnabled(false);
		}
            }
            var rejct = '@ViewBag.ApproveStus';
            if (rejct == '1') {
                $('#btnApprove').hide();
                $('#btnReject').hide();
            }
            else if (rejct == '2') {
                $('#btnReject').hide();
            }
            setTimeout(function () {
                $('#txt_ApproveRemarks').focus();
            }, 1000);
        }
        else {
            //$('#btnSaveandNew').show();
            $('#btnSaveandExit').show();
            $('#btnApprove').hide();
            $('#btnReject').hide();
            $('#divApproveRemarks').addClass('hidden');
            // $('#RevisionNo').removeClass("hidden");
            // RevisionDate_dt.SetEnabled(false);
            $("#lblApproveName").addClass('hidden');
            $('#divApproveButton').addClass('hidden');
        }

        if ('@ViewBag.ApproveStusEdit' != "1" && '@ViewBag.ApproveStusEdit' != "") {

            //$('#RevisionNo').attr("disabled", "disabled");
            //RevisionDate_dt.SetEnabled(false);
            if ($('#hdnRevisionRequiredEveryAfterApproval').val() == "No") {
                $('#RevisionNo').attr("disabled", "disabled");
                RevisionDate_dt.SetEnabled(false);
            }
            else {
                if ($('#hdnisFirstApprove').val() == "Yes" && hdnApprove == "Approve") {
                    $('#RevisionNo').removeAttr("disabled", "disabled");
                    RevisionDate_dt.SetEnabled(true);
                }
              else{
		$('#RevisionNo').attr("disabled", "disabled");
            	RevisionDate_dt.SetEnabled(false);
		}
            }
            //$('#btnSaveandNew').hide();
        }

        if ('@ViewBag.ProjectShow' == "Yes") {
            $("#divProj").removeClass("hidden");
        }
        else {
            $("#divProj").addClass("hidden");
        }

        if ('@ViewBag.View' == "View") {
            //$('#btnSaveandNew').hide();
            $('#btnSaveandExit').hide();
            $('#btnApprove').hide();
            $('#btnReject').hide();
            $('#divApproveRemarks').removeClass('hidden');
            $("#lblApproveName").removeClass('hidden');
            $('#divApproveButton').removeClass('hidden');

            setTimeout(function () {
                var noofrow = gridEstimateResourcesList.GetVisibleRowsOnPage();
                if (noofrow > 1) {
                    $('#showResources').removeClass('hidden');
                }
                else {
                    $('#showResources').addClass('hidden');
                }
            }, 800);
        }

        $('#GridWarehouselistModel').on('shown.bs.modal', function () {
            //$('#ddlWarehouselist').focus();
        })
        // LoadingPanel.Hide();



        if ($('#hdnApproveRevSettings').val() == "Yes") {
            $("#divRevDate").removeClass('hide');
            $("#divRevNo").removeClass('hide');
        }
        else {
            $("#divRevDate").addClass('hide');
            $("#divRevNo").addClass('hide');
        }


    });

    function Proposallist(SearchKey) {
        finishedproductlist = 1;
        var OtherDetails = {}
        OtherDetails.SearchKey = SearchKey;
        OtherDetails.CustomerId = $("#CustomerId").val();
        OtherDetails.BranchId = $('#ddlBankBranch').val();
        //OtherDetails.BranchId = $('#ddlBankBranch').val();
        var HeaderCaption = [];
        // HeaderCaption.push("Product ID");
        HeaderCaption.push("Proposal No.");
        HeaderCaption.push("Proposal Date");
        var ProjectId = (ProjectGridLookup.GetGridView().GetRowKey(ProjectGridLookup.GetGridView().GetFocusedRowIndex()));
        //callonServerScroll("../Models/PMS_WebServiceList.asmx/GetProposalList", OtherDetails, "ProposalTable", HeaderCaption, "ProposalIndex", "SetProposal");
        if ('@ViewBag.ProjectShow' == "Yes" && ProjectId != null && ProjectId != "") {
            OtherDetails.ProjectId = ProjectId;
            callonServer("../Models/PMS_WebServiceList.asmx/GetProposalListWithProject", OtherDetails, "ProposalTable", HeaderCaption, "ProposalIndex", "SetProposal");
        }
        else {
            callonServer("../Models/PMS_WebServiceList.asmx/GetProposalList", OtherDetails, "ProposalTable", HeaderCaption, "ProposalIndex", "SetProposal");
        }
    }


    function btnAdd_ProductClick() {
        var TaxTypeid = $('#ddlTaxTypelistProduct').val();
        var TaxTypetxt = $('#ddlTaxTypelistProduct option:selected').text();
        var ProductQty = cProductQty.GetText();
        if (TaxTypetxt == "Select") {
            TaxTypetxt = "";
            TaxTypeid = 0;
        }





        var Warehouselistid = $('#ddlProductWarehouselist').val();
        var Warehouselisttxt = $('#ddlProductWarehouselist option:selected').text();
        if (Warehouselisttxt == "Select") {
            Warehouselisttxt = "";
            Warehouselistid = 0;
        }

        if (btnProduct.GetValue() == null) {
            jAlert("Please select Product");
            return;
        }
        else {
            if ('@ViewBag.EntryType' == 'EDIT') {
                if (parseFloat(ProductQty) < parseFloat($("#BalQty").val())) {
                    jAlert("Quantity can not be less than tagged quantity.");
                    cProductQty.SetText($("#BalQty").val());
                    return;
                }
                else {
                    cProductQty.GetText(ProductQty);
                }
            }
            else {
                cProductQty.GetText(ProductQty);
            }

            var data = {
                ProductName: btnProduct.GetValue(),
                ProductId: $("#hdnProdProductID").val(),
                ProductDescription: $("#txtProductdescription").val(),
                ProductQty: cProductQty.GetText(),
                ProductUOM: $("#txt_ProdUOM").val(),
                Warehouse: Warehouselisttxt,
                ProductsWarehouseID: Warehouselistid,
                Price: cProductPrice.GetText(),
                Amount: cProductAmount.GetText(),
                Remarks: $("#txt_AddlRemarks").val(),
                UpdateEdit: "1",
                Tag_Details_ID: "0",
                Tag_Production_ID: "0",
                Charges: cProductCharges.GetText(),
                Discount: cProductDiscount.GetText(),
                NetAmount: cProductNetAmount.GetText(),
                BudgetedPrice: cProductBudgetedPrice.GetText(),
                TaxTypeID: TaxTypeid,
                TaxType: TaxTypetxt,
                ProdHSN: $("#hdnProdHSN").val(),
                AddlDesc: $("#txt_AddlDescProd").val(),
                Guids: $("#GuiIDS").val(),
                Sellable: btnSellable.GetValue(),
                SellableID: $("#hdnSellableProductID").val(),
                ProductDetailsID: $("#ProductDetailsID").val(),
                BalQty: $("#BalQty").val()

            }
            $.ajax({
                type: "POST",
                url: "@Url.Action("AddProduct", "Estimate")",
                //url: "../Estimate/AddProduct",
                data: "{prod:" + JSON.stringify(data) + "}",
                async: true,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (response) {
                    if (response != null) {
                        gridEstimateProductEntryList.Refresh();
                        gridEstimateProductEntryList.Refresh();

                        btnProduct.SetValue(''),
                        $("#hdnProdProductID").val(''),
                        $("#txtProductdescription").val(''),
                        cProductQty.SetText("0.00"),
                        $("#txt_ProdUOM").val(''),
                        $("#ddlProductWarehouselist").val('select'),
                        cProductPrice.SetText('0.00'),
                        cProductAmount.SetText('0.00'),
                        $("#txt_AddlRemarks").val(''),
                        cProductCharges.SetText('0.00'),
                        cProductDiscount.SetText('0.00'),
                        cProductNetAmount.SetText('0.00'),
                        cProductBudgetedPrice.SetText('0.00'),
                        $("#ddlTaxTypelistProduct").val(''),
                        $("#hdnProdHSN").val(''),
                        $("#txt_AddlDescProd").val(''),
                        $("#GuiIDS").val(''),
                        btnSellable.SetText(''),
                        $("#hdnSellableProductID").val('');
                        $("#BalQty").val(0);
                        $("#ProductDetailsID").val(0);

                    }
                }
            });
        }
    }


    function btnResAdd_ProductClick() {

        var TaxTypeid = $('#ddlTaxTypelistResource').val();
        var TaxTypetxt = $('#ddlTaxTypelistResource option:selected').text();
        var ResProductQty = cResProductQty.GetText();
        if (TaxTypetxt == "Select") {
            TaxTypetxt = "";
            TaxTypeid = 0;
        }

        if (btnResProduct.GetValue() == null) {
            jAlert("Please select Resource");
            return;
        }
        else {

            if ('@ViewBag.EntryType' == 'EDIT') {
                if (parseFloat(ResProductQty) < parseFloat($("#ResBalQty").val())) {
                    jAlert("Quantity can not be less than tagged quantity.");
                    cProductQty.SetText($("#ResBalQty").val());
                    return;
                }
                else {
                    cProductQty.GetText(ResProductQty);
                }
            }
            else {
                cProductQty.GetText(ResProductQty);
            }


            var data = {
                ProductName: btnResProduct.GetValue(),
                ProductId: $("#hdnResProductID").val(),
                ProductDescription: $("#txtResProductdescription").val(),
                ProductQty: cResProductQty.GetText(),
                ProductUOM: $("#txt_ResProdUOM").val(),
                //ProductsWarehouseID:
                Price: cResProductPrice.GetText(),
                Amount: cResProductAmount.GetText(),
                Remarks: $("#txt_ResAddlRemarks").val(),
                UpdateEdit: "1",
                ResourceCharges: cResProductCharges.GetText(),
                Discount: cResProductDiscount.GetText(),
                NetAmount: cResProductNetAmount.GetText(),
                BudgetedPrice: cResProductBudgetedPrice.GetText(),
                TaxTypeID: TaxTypeid,
                TaxType: TaxTypetxt,
                ProdHSN: $("#hdnResHSN").val(),
                AddlDesc: $("#txt_ResAddlDescProd").val(),
                Guids: $("#ResGuiIDS").val(),
                Sellable: btnResSellable.GetValue(),
                SellableID: $("#hdnResSellableProductID").val(),
                ProductDetailsID: $("#ResProductDetailsID").val(),
                BalQty: $("#ResBalQty").val()

            }
            $.ajax({
                type: "POST",
                url: "@Url.Action("AddResources", "Estimate")",
                //url: "../Estimate/AddResources",
                data: "{prod:" + JSON.stringify(data) + "}",
                async: true,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (response) {
                    if (response != null) {
                        gridEstimateResourcesList.Refresh();
                        gridEstimateResourcesList.Refresh();

                        btnResProduct.SetValue(''),
                        $("#hdnResProductID").val(''),
                        $("#txtResProductdescription").val(''),
                        cResProductQty.SetText("0.00"),
                        $("#txt_ResProdUOM").val(''),
                        cResProductPrice.SetText('0.00'),
                        cResProductAmount.SetText('0.00'),
                        $("#txt_ResAddlRemarks").val(''),
                        cResProductCharges.SetText('0.00'),
                        cResProductDiscount.SetText('0.00'),
                        cResProductNetAmount.SetText('0.00'),
                        cResProductBudgetedPrice.SetText('0.00'),
                        $("#ddlTaxTypelistResource").val(''),
                        $("#hdnResHSN").val(''),
                        $("#txt_ResAddlDescProd").val(''),
                        $("#ResGuiIDS").val('');
                        btnResSellable.SetText();
                        $("#hdnResSellableProductID").val('');
                        $("#ResProductDetailsID").val(0);
                        $("#ResBalQty").val(0);
                    }
                }
            });
        }
    }


    function EstimateSave(mode) {
        //debugger;
        LoadingPanel.Show();
        savemode = mode;
        hasmsg = 0;
        var Estimateno = $('#EstimateNo').val();
        var EstimateDate = GetServerDateFormat(EstimateDate_dt.GetValue());
        var RevisionNo = $('#RevisionNo').val();
        var RevisionDate = GetServerDateFormat(RevisionDate_dt.GetValue());
        //var Unit = $('#ddlBankBranch option:selected').val();
        var Unit = $('#ddlBankBranch').val();
        //var WarehouseID = $('#ddlWarehouse option:selected').val();
        var SchemaID = $('#hdnSchemaId').val();
        var hdnApprove = $('#hdnApprove').val();
        var ActualAdditionalCost = $('#txtActualAdditionalCost').val();
        if (ActualAdditionalCost == '') {
            ActualAdditionalCost = parseFloat(0).toFixed(2);
            $('#txtActualAdditionalCost').val(ActualAdditionalCost);
        }
        var EstimateEdit = '@ViewBag.ApproveStusEdit';

        var hdnRevisionNo = $('#hdnRevisionNo').val();
        var hdnDetailsID = $('#hdnDetailsID').val();
        var ProjectMandatoryInEntry = '@ViewBag.ProjectMandatoryInEntry';
        var ProjectSelectInEntryModule = '@ViewBag.ProjectShow';

        var oneproduct = "";
        var visiablerow = gridEstimateProductEntryList.GetVisibleRowsOnPage();
        if (visiablerow > 0) {
            for (var i = 100; i > -500; i--) {
                if (gridEstimateProductEntryList.GetRow(i)) {

                    if (oneproduct == "" || oneproduct == null) {
                        oneproduct = gridEstimateProductEntryList.batchEditApi.GetCellValue(i, 'ProductName');
                    }
                }
            }
        }
        if (hdnDetailsID == "") {
            RevisionNo = " ";
            RevisionDate = GetServerDateFormat(new Date);
        }

        var CustomerId = $('#CustomerId').val();
        if (CustomerId == "" || CustomerId == null) {
            jAlert("Please select customer.");
            LoadingPanel.Hide();
            return false;
        }
        if (ProjectMandatoryInEntry == "Yes" && ProjectSelectInEntryModule == "Yes" && ProjectGridLookup.GetSelectedKeyFieldValues() == "") {
            jAlert("Please Select Project.");
            LoadingPanel.Hide();
            return false;
        }

        else {
            // if (oneproduct != "" && oneproduct != null) {
            if (visiablerow != null && visiablerow > 0) {
                if ($('#hdnApproveRevSettings').val() == "Yes" && $('#hdnRevisionRequiredEveryAfterApproval').val() == "No") {
                    if (hdnDetailsID > 0 && hdnRevisionNo == RevisionNo && hdnApprove != 'Approve' && EstimateEdit == '1') {
                        jAlert("Please enter new revision number to save.");
                        LoadingPanel.Hide();
                        return false;
                    }
                    else {
                        if (Estimateno != '' && EstimateDate != '' && RevisionNo != '' && RevisionDate != '' && Unit != '' && ActualAdditionalCost != '') {

                            if (hdnDetailsID > 0 && RevisionNo != "" && hdnApprove != 'Approve' && EstimateEdit == '1') {

                                $.ajax({
                                    type: "POST",
                                    url: "@Url.Action("ProcessWithRevisionNumber", "Estimate")",
                                    //url: "../Estimate/ProcessWithRevisionNumber",
                                    data: { detailsid: hdnDetailsID, RevisionNo: RevisionNo },
                                    success: function (response) {

                                        if (response) {

                                            //// SuffleRows();
                                            //SuffleRowsGrid2();
                                            ////  if (gridEstimateResourcesList.batchEditApi.HasChanges()) {
                                            //gridEstimateResourcesList.UpdateEdit();
                                            //// }
                                            //// gridEstimateProductEntryList.UpdateEdit();
                                            ////  gridEstimateProductEntryList.UpdateEdit();

                                            //setTimeout(function () {
                                            //    // OnResourcesEndCallback();
                                            //}, 1500);
                                            var hdnApproveRevSettings = $('#hdnApproveRevSettings').val();
                                            var strEstimateno = $('#EstimateNo').val();
                                            var EstimateDate = GetServerDateFormat(EstimateDate_dt.GetValue());
                                            var RevisionNo = $('#RevisionNo').val();
                                            var RevisionDate = GetServerDateFormat(RevisionDate_dt.GetValue());
                                            var Unit = $('#ddlBankBranch option:selected').val();
                                            var SchemaID = $('#hdnSchemaId').val();
                                            var ActualAdditionalCost = $('#txtActualAdditionalCost').val();
                                            var hdnDetailsID = $('#hdnDetailsID').val();
                                            var Proposal_ID = $('#hdnProposal_ID').val();
                                            var Quotation_ID = $('#hdnQuotation_ID').val();
                                            var HeadRemarks = $('#txt_HeadRemarks').val();
                                            var CustomerId = $('#CustomerId').val();
                                            var taxId = $('#ddl_AmountAre').val();
                                            var ApproveRemarks = $("#txt_ApproveRemarks").val();
                                            if (hdnDetailsID > 0) {
                                                DetailsID = hdnDetailsID;
                                            }

                                            if (hdnDetailsID == "") {
                                                RevisionDate = GetServerDateFormat(new Date);
                                            }
                                            var apprvRejt = "0";
                                            var approveedval = '@ViewBag.ApproveStusEdit';
                                            var EditAction = "";
                                            if ($('#hdnApprove').val() != "") {
                                                EditAction = $('#hdnApprove').val();
                                                apprvRejt = approveedval;
                                            }
                                            else {
                                                if (approveedval == "1" || approveedval == "" || approveedval == "0") {
                                                    EditAction = "";
                                                    apprvRejt = "0";
                                                }
                                                else {
                                                    EditAction = "Approve";
                                                    apprvRejt = approveedval;
                                                }
                                            }

                                            if ($("#hdnApproveReject").val() == "Approve") {
                                                apprvRejt = "1";
                                            }
                                            else if ($("#hdnApproveReject").val() == "Reject") {
                                                apprvRejt = "2";
                                            }
                                            var data = {
                                                strEstimateNo: strEstimateno,
                                                EstimateDate: EstimateDate,
                                                RevisionNo: RevisionNo,
                                                RevisionDate: RevisionDate,
                                                Unit: Unit,
                                                Estimate_SCHEMAID: SchemaID,
                                                ActualAdditionalCost: ActualAdditionalCost,
                                                ProductionID: ProductionID,
                                                DetailsID: DetailsID,
                                                Proposal_ID: Proposal_ID,
                                                Quotation_ID: Quotation_ID,
                                                HeadRemarks: HeadRemarks,
                                                Customer_ID: CustomerId,
                                                ContractNo: ContractID,
                                                ProjectIDs: ProjectGridLookup.GetSelectedKeyFieldValues(),
                                                TaxID: taxId,
                                                ApproveRemarks: ApproveRemarks,
                                                ApprvRejct: apprvRejt,
                                                Approve: EditAction,
                                                ApprovRevSettings: hdnApproveRevSettings
                                            }
                                            $.ajax({
                                                type: "POST",
                                                url: "@Url.Action("SaveEstimate", "Estimate")",
                                                //url: "../Estimate/SaveEstimate",
                                                data: "{Details:" + JSON.stringify(data) + "}",
                                                async: true,
                                                contentType: "application/json; charset=utf-8",
                                                dataType: "json",
                                                success: function (response) {
                                                    if (response != null) {
                                                        var Message = response.split('~')[4];
                                                        var DetailsID = response.split('~')[1];
                                                        var ProductionID = response.split('~')[2];
                                                        var GEstimateNo = response.split('~')[3];
                                                        var Sucess = response.split('~')[0];
                                                        if (Message == "duplicate" && DetailsID == 0 && ProductionID == 0) {
                                                            savemode = "";
                                                            if (Message == "duplicate") {
                                                                jAlert('This Estimate no already present!');
                                                                return false;
                                                                LoadingPanel.Hide();
                                                            }
                                                            else {
                                                                jAlert('Please try again later.');
                                                                return false;
                                                                LoadingPanel.Hide();
                                                            }
                                                            Message = "";

                                                        }
                                                        else {
                                                            if (DetailsID > 0 && ProductionID > 0 && GEstimateNo != "") {

                                                                $('#EstimateNo').val('');
                                                                var EstimateDate = GetServerDateFormat(EstimateDate_dt.GetValue());
                                                                $('#RevisionNo').val('');
                                                                $('#ddlBankBranch').val($("#ddlBankBranch option:first").val());
                                                                $('#hdnSchemaId').val('');
                                                                $('#txtActualAdditionalCost').val(parseFloat(0).toFixed(4));
                                                                $('#txtGridProductEntryTotalAmount').val(parseFloat(0).toFixed(2));
                                                                $('#txtGridResourcesTotalAmount').val(parseFloat(0).toFixed(2));


                                                                $('#ddlSchema').val($("#ddlSchema option:first").val());
                                                                $('#EstimateNo').val('');
                                                                $('#EEstimateNo').hide();
                                                                $('#EEstimateDate_dt').hide();
                                                                $('#EFinishedQty').hide();
                                                                $('#EFinishedQty').hide();
                                                                $('#ERevisionNo').hide();
                                                                $('#ERevisionDate_dt').hide();
                                                                $('#EddlBankBranch').hide();
                                                                $('#FinishedUom').val('');
                                                                $('#hdnDetailsID').val(0);

                                                                $('#hdnProposal_ID').val('');
                                                                $('#hdnQuotation_ID').val('');
                                                                $('#txt_HeadRemarks').val('');
                                                                $('#btnQuotation').val('');
                                                                $('#btnProposal').val('');
                                                                $("#txt_ApproveRemarks").val('');
                                                                Scheme_ValueChange();



                                                                ProductionID = 0;
                                                                DetailsID = 0;
                                                                var msg = $("#hdnApproveReject").val();
                                                                if (msg == "Approve") {
                                                                    jAlert('Estimate Number : ' + GEstimateNo + ' approve successfully.', 'Alert!', function (r) {
                                                                        if (r) {
                                                                            if (savemode == "Exit") {
                                                                                setTimeout(function () {
                                                                                    var url = $('#hdnEstimateListPage').val();
                                                                                    window.location.href = url;
                                                                                }, 500);
                                                                            }
                                                                        }

                                                                    });
                                                                }
                                                                else if (msg == "Reject") {
                                                                    jAlert('Estimate Number : ' + GEstimateNo + ' reject successfully.', 'Alert!', function (r) {
                                                                        if (r) {
                                                                            if (savemode == "Exit") {
                                                                                setTimeout(function () {
                                                                                    var url = $('#hdnEstimateListPage').val();
                                                                                    window.location.href = url;
                                                                                }, 500);
                                                                            }
                                                                        }
                                                                    });
                                                                }
                                                                else {
                                                                    jAlert('Estimate Number : ' + GEstimateNo + ' saved successfully.', 'Alert!', function (r) {
                                                                        if (r) {
                                                                            if (savemode == "Exit") {
                                                                                setTimeout(function () {
                                                                                    var url = $('#hdnEstimateListPage').val();
                                                                                    window.location.href = url;
                                                                                }, 500);
                                                                            }
                                                                            else if (savemode == "New") {
                                                                                var url = "/Estimate/Index?ActionType=ADD";
                                                                                window.location.href = url;
                                                                            }
                                                                        }
                                                                    });
                                                                }
                                                                LoadingPanel.Hide();
                                                                // jAlert('Estimate Number : ' + GEstimateNo + ' Successfully saved.');


                                                            }
                                                            else {
                                                                ProductionID = 0;
                                                                DetailsID = 0;
                                                                savemode = "";
                                                                jAlert('Please try again later.');
                                                                LoadingPanel.Hide();
                                                                return false;

                                                            }
                                                            Message = "";
                                                        }

                                                    }
                                                }
                                            });

                                        }
                                        else {
                                            jAlert("Please enter new revision number to save.");
                                            LoadingPanel.Hide();
                                            return false;
                                        }
                                    }
                                });

                            }
                            else {

                                //// SuffleRows();
                                //SuffleRowsGrid2();
                                ////if (gridEstimateResourcesList.batchEditApi.HasChanges()) {
                                //gridEstimateResourcesList.UpdateEdit();
                                ////}
                                ////gridEstimateProductEntryList.UpdateEdit();
                                //// gridEstimateProductEntryList.UpdateEdit();

                                //setTimeout(function () {
                                //    // OnResourcesEndCallback();
                                //}, 1500);


                                var hdnApproveRevSettings = $('#hdnApproveRevSettings').val();

                                var strEstimateno = $('#EstimateNo').val();
                                var EstimateDate = GetServerDateFormat(EstimateDate_dt.GetValue());
                                var RevisionNo = $('#RevisionNo').val();
                                var RevisionDate = GetServerDateFormat(RevisionDate_dt.GetValue());
                                var Unit = $('#ddlBankBranch option:selected').val();
                                var SchemaID = $('#hdnSchemaId').val();
                                var ActualAdditionalCost = $('#txtActualAdditionalCost').val();
                                var hdnDetailsID = $('#hdnDetailsID').val();
                                var Proposal_ID = $('#hdnProposal_ID').val();
                                var Quotation_ID = $('#hdnQuotation_ID').val();
                                var HeadRemarks = $('#txt_HeadRemarks').val();
                                var CustomerId = $('#CustomerId').val();
                                var taxId = $('#ddl_AmountAre').val();
                                var ApproveRemarks = $("#txt_ApproveRemarks").val();
                                if (hdnDetailsID > 0) {
                                    DetailsID = hdnDetailsID;
                                }

                                if (hdnDetailsID == "") {
                                    RevisionDate = GetServerDateFormat(new Date);
                                }
                                var apprvRejt = "0";
                                var approveedval = '@ViewBag.ApproveStusEdit';
                                var EditAction = "";
                                if ($('#hdnApprove').val() != "") {
                                    EditAction = $('#hdnApprove').val();
                                    apprvRejt = approveedval;
                                }
                                else {
                                    if (approveedval == "1" || approveedval == "" || approveedval == "0") {
                                        EditAction = "";
                                        apprvRejt = "0";
                                    }
                                    else {
                                        EditAction = "Approve";
                                        apprvRejt = approveedval;
                                    }
                                }

                                if ($("#hdnApproveReject").val() == "Approve") {
                                    apprvRejt = "1";
                                }
                                else if ($("#hdnApproveReject").val() == "Reject") {
                                    apprvRejt = "2";
                                }
                                var data = {
                                    strEstimateNo: strEstimateno,
                                    EstimateDate: EstimateDate,
                                    RevisionNo: RevisionNo,
                                    RevisionDate: RevisionDate,
                                    Unit: Unit,
                                    Estimate_SCHEMAID: SchemaID,
                                    ActualAdditionalCost: ActualAdditionalCost,
                                    ProductionID: ProductionID,
                                    DetailsID: DetailsID,
                                    Proposal_ID: Proposal_ID,
                                    Quotation_ID: Quotation_ID,
                                    HeadRemarks: HeadRemarks,
                                    Customer_ID: CustomerId,
                                    ContractNo: ContractID,
                                    ProjectIDs: ProjectGridLookup.GetSelectedKeyFieldValues(),
                                    TaxID: taxId,
                                    ApproveRemarks: ApproveRemarks,
                                    ApprvRejct: apprvRejt,
                                    Approve: EditAction,
                                    ApprovRevSettings: hdnApproveRevSettings
                                }
                                $.ajax({
                                    type: "POST",
                                    url: "@Url.Action("SaveEstimate", "Estimate")",
                                    //url: "../Estimate/SaveEstimate",
                                    data: "{Details:" + JSON.stringify(data) + "}",
                                    async: true,
                                    contentType: "application/json; charset=utf-8",
                                    dataType: "json",
                                    success: function (response) {
                                        if (response != null) {
                                            var Message = response.split('~')[4];
                                            var DetailsID = response.split('~')[1];
                                            var ProductionID = response.split('~')[2];
                                            var GEstimateNo = response.split('~')[3];
                                            var Sucess = response.split('~')[0];
                                            if (Message == "duplicate" && DetailsID == 0 && ProductionID == 0) {
                                                savemode = "";
                                                if (Message == "duplicate") {
                                                    jAlert('This Estimate no already present!');
                                                    return false;
                                                    LoadingPanel.Hide();
                                                }
                                                else {
                                                    jAlert('Please try again later.');
                                                    return false;
                                                    LoadingPanel.Hide();
                                                }
                                                Message = "";

                                            }
                                            else {
                                                if (DetailsID > 0 && ProductionID > 0 && GEstimateNo != "") {
                                                    ProductionID = 0;
                                                    DetailsID = 0;
                                                    var msg = $("#hdnApproveReject").val();
                                                    if (msg == "Approve") {
                                                        jAlert('Estimate Number : ' + GEstimateNo + ' approve successfully.', 'Alert!', function (r) {
                                                            if (r) {
                                                                if (savemode == "Exit") {
                                                                    setTimeout(function () {
                                                                        var url = $('#hdnEstimateListPage').val();
                                                                        window.location.href = url;
                                                                    }, 500);
                                                                }
                                                            }

                                                        });
                                                    }
                                                    else if (msg == "Reject") {
                                                        jAlert('Estimate Number : ' + GEstimateNo + ' reject successfully.', 'Alert!', function (r) {
                                                            if (r) {
                                                                if (savemode == "Exit") {
                                                                    setTimeout(function () {
                                                                        var url = $('#hdnEstimateListPage').val();
                                                                        window.location.href = url;
                                                                    }, 500);
                                                                }
                                                            }
                                                        });
                                                    }
                                                    else {
                                                        jAlert('Estimate Number : ' + GEstimateNo + ' saved successfully.', 'Alert!', function (r) {
                                                            if (r) {
                                                                if (savemode == "Exit") {
                                                                    setTimeout(function () {
                                                                        var url = $('#hdnEstimateListPage').val();
                                                                        window.location.href = url;
                                                                    }, 500);
                                                                }
                                                                else if (savemode == "New") {
                                                                    var url = "/Estimate/Index?ActionType=ADD";
                                                                    window.location.href = url;
                                                                }
                                                            }
                                                        });
                                                    }
                                                    LoadingPanel.Hide();
                                                    // jAlert('Estimate Number : ' + GEstimateNo + ' Successfully saved.');


                                                }
                                                else {
                                                    ProductionID = 0;
                                                    DetailsID = 0;
                                                    savemode = "";
                                                    jAlert('Please try again later.');
                                                    LoadingPanel.Hide();
                                                    return false;

                                                }
                                                Message = "";
                                            }

                                        }
                                    }
                                });
                            }
                        }
                        else {
                            savemode = "";
                            if (Estimateno == '') {
                                $('#EEstimateNo').show();
                            }
                            else {
                                $('#EEstimateNo').hide();
                            }
                            if (EstimateDate == '') {
                                $('#EEstimateDate_dt').show();
                            }
                            else {
                                $('#EEstimateDate_dt').hide();
                            }
                            if (RevisionNo == '') {
                                $('#ERevisionNo').show();
                            }
                            else {
                                $('#ERevisionNo').hide();
                            }
                            if (RevisionDate == '') {
                                $('#ERevisionDate_dt').show();
                            }
                            else {
                                $('#ERevisionDate_dt').hide();
                            }
                            if (Unit == '') {
                                $('#EddlBankBranch').show();
                            }
                            else {
                                $('#EddlBankBranch').hide();
                            }

                            $("html, body").animate({ scrollTop: 0 }, 600);
                            LoadingPanel.Hide();
                            return false;
                        }
                    }
                }
                else if ($('#hdnApproveRevSettings').val() == "Yes" && $('#hdnRevisionRequiredEveryAfterApproval').val() == "Yes") {
                    if (hdnDetailsID > 0 && hdnRevisionNo == RevisionNo && hdnApprove == 'Approve' && $("#hdnisFirstApprove").val() == 'Yes') {
                        jAlert("Please enter new revision number to save.");
                        LoadingPanel.Hide();
                        return false;
                    }
                    else {
                        if (Estimateno != '' && EstimateDate != '' && RevisionNo != '' && RevisionDate != '' && Unit != '' && ActualAdditionalCost != '') {

                            if (hdnDetailsID > 0 && RevisionNo != "" && hdnApprove == 'Approve' && $("#hdnisFirstApprove").val() == 'Yes') {

                                $.ajax({
                                    type: "POST",
                                    url: "@Url.Action("ProcessWithRevisionNumber", "Estimate")",
                                    //url: "../Estimate/ProcessWithRevisionNumber",
                                    data: { detailsid: hdnDetailsID, RevisionNo: RevisionNo },
                                    success: function (response) {

                                        if (response) {

                                            var hdnApproveRevSettings = $('#hdnApproveRevSettings').val();
                                            var strEstimateno = $('#EstimateNo').val();
                                            var EstimateDate = GetServerDateFormat(EstimateDate_dt.GetValue());
                                            var RevisionNo = $('#RevisionNo').val();
                                            var RevisionDate = GetServerDateFormat(RevisionDate_dt.GetValue());
                                            var Unit = $('#ddlBankBranch option:selected').val();
                                            var SchemaID = $('#hdnSchemaId').val();
                                            var ActualAdditionalCost = $('#txtActualAdditionalCost').val();
                                            var hdnDetailsID = $('#hdnDetailsID').val();
                                            var Proposal_ID = $('#hdnProposal_ID').val();
                                            var Quotation_ID = $('#hdnQuotation_ID').val();
                                            var HeadRemarks = $('#txt_HeadRemarks').val();
                                            var CustomerId = $('#CustomerId').val();
                                            var taxId = $('#ddl_AmountAre').val();
                                            var ApproveRemarks = $("#txt_ApproveRemarks").val();
                                            if (hdnDetailsID > 0) {
                                                DetailsID = hdnDetailsID;
                                            }

                                            if (hdnDetailsID == "") {
                                                RevisionDate = GetServerDateFormat(new Date);
                                            }
                                            var apprvRejt = "0";
                                            var approveedval = '@ViewBag.ApproveStusEdit';
                                            var EditAction = "";
                                            if ($('#hdnApprove').val() != "") {
                                                EditAction = $('#hdnApprove').val();
                                                apprvRejt = approveedval;
                                            }
                                            else {
                                                if (approveedval == "1" || approveedval == "" || approveedval == "0") {
                                                    EditAction = "";
                                                    apprvRejt = "0";
                                                }
                                                else {
                                                    EditAction = "Approve";
                                                    apprvRejt = approveedval;
                                                }
                                            }

                                            if ($("#hdnApproveReject").val() == "Approve") {
                                                apprvRejt = "1";
                                            }
                                            else if ($("#hdnApproveReject").val() == "Reject") {
                                                apprvRejt = "2";
                                            }
                                            var data = {
                                                strEstimateNo: strEstimateno,
                                                EstimateDate: EstimateDate,
                                                RevisionNo: RevisionNo,
                                                RevisionDate: RevisionDate,
                                                Unit: Unit,
                                                Estimate_SCHEMAID: SchemaID,
                                                ActualAdditionalCost: ActualAdditionalCost,
                                                ProductionID: ProductionID,
                                                DetailsID: DetailsID,
                                                Proposal_ID: Proposal_ID,
                                                Quotation_ID: Quotation_ID,
                                                HeadRemarks: HeadRemarks,
                                                Customer_ID: CustomerId,
                                                ContractNo: ContractID,
                                                ProjectIDs: ProjectGridLookup.GetSelectedKeyFieldValues(),
                                                TaxID: taxId,
                                                ApproveRemarks: ApproveRemarks,
                                                ApprvRejct: apprvRejt,
                                                Approve: EditAction,
                                                ApprovRevSettings: hdnApproveRevSettings
                                            }
                                            $.ajax({
                                                type: "POST",
                                                url: "@Url.Action("SaveEstimate", "Estimate")",
                                                //url: "../Estimate/SaveEstimate",
                                                data: "{Details:" + JSON.stringify(data) + "}",
                                                async: true,
                                                contentType: "application/json; charset=utf-8",
                                                dataType: "json",
                                                success: function (response) {
                                                    if (response != null) {
                                                        var Message = response.split('~')[4];
                                                        var DetailsID = response.split('~')[1];
                                                        var ProductionID = response.split('~')[2];
                                                        var GEstimateNo = response.split('~')[3];
                                                        var Sucess = response.split('~')[0];
                                                        if (Message == "duplicate" && DetailsID == 0 && ProductionID == 0) {
                                                            savemode = "";
                                                            if (Message == "duplicate") {
                                                                jAlert('This Estimate no already present!');
                                                                return false;
                                                                LoadingPanel.Hide();
                                                            }
                                                            else {
                                                                jAlert('Please try again later.');
                                                                return false;
                                                                LoadingPanel.Hide();
                                                            }
                                                            Message = "";

                                                        }
                                                        else {
                                                            if (DetailsID > 0 && ProductionID > 0 && GEstimateNo != "") {

                                                                $('#EstimateNo').val('');
                                                                var EstimateDate = GetServerDateFormat(EstimateDate_dt.GetValue());
                                                                $('#RevisionNo').val('');
                                                                $('#ddlBankBranch').val($("#ddlBankBranch option:first").val());
                                                                $('#hdnSchemaId').val('');
                                                                $('#txtActualAdditionalCost').val(parseFloat(0).toFixed(4));
                                                                $('#txtGridProductEntryTotalAmount').val(parseFloat(0).toFixed(2));
                                                                $('#txtGridResourcesTotalAmount').val(parseFloat(0).toFixed(2));


                                                                $('#ddlSchema').val($("#ddlSchema option:first").val());
                                                                $('#EstimateNo').val('');
                                                                $('#EEstimateNo').hide();
                                                                $('#EEstimateDate_dt').hide();
                                                                $('#EFinishedQty').hide();
                                                                $('#EFinishedQty').hide();
                                                                $('#ERevisionNo').hide();
                                                                $('#ERevisionDate_dt').hide();
                                                                $('#EddlBankBranch').hide();
                                                                $('#FinishedUom').val('');
                                                                $('#hdnDetailsID').val(0);

                                                                $('#hdnProposal_ID').val('');
                                                                $('#hdnQuotation_ID').val('');
                                                                $('#txt_HeadRemarks').val('');
                                                                $('#btnQuotation').val('');
                                                                $('#btnProposal').val('');
                                                                $("#txt_ApproveRemarks").val('');
                                                                Scheme_ValueChange();



                                                                ProductionID = 0;
                                                                DetailsID = 0;
                                                                var msg = $("#hdnApproveReject").val();
                                                                if (msg == "Approve") {
                                                                    jAlert('Estimate Number : ' + GEstimateNo + ' approve successfully.', 'Alert!', function (r) {
                                                                        if (r) {
                                                                            if (savemode == "Exit") {
                                                                                setTimeout(function () {
                                                                                    var url = $('#hdnEstimateListPage').val();
                                                                                    window.location.href = url;
                                                                                }, 500);
                                                                            }
                                                                        }

                                                                    });
                                                                }
                                                                else if (msg == "Reject") {
                                                                    jAlert('Estimate Number : ' + GEstimateNo + ' reject successfully.', 'Alert!', function (r) {
                                                                        if (r) {
                                                                            if (savemode == "Exit") {
                                                                                setTimeout(function () {
                                                                                    var url = $('#hdnEstimateListPage').val();
                                                                                    window.location.href = url;
                                                                                }, 500);
                                                                            }
                                                                        }
                                                                    });
                                                                }
                                                                else {
                                                                    jAlert('Estimate Number : ' + GEstimateNo + ' saved successfully.', 'Alert!', function (r) {
                                                                        if (r) {
                                                                            if (savemode == "Exit") {
                                                                                setTimeout(function () {
                                                                                    var url = $('#hdnEstimateListPage').val();
                                                                                    window.location.href = url;
                                                                                }, 500);
                                                                            }
                                                                            else if (savemode == "New") {
                                                                                var url = "/Estimate/Index?ActionType=ADD";
                                                                                window.location.href = url;
                                                                            }
                                                                        }
                                                                    });
                                                                }
                                                                LoadingPanel.Hide();
                                                                // jAlert('Estimate Number : ' + GEstimateNo + ' Successfully saved.');


                                                            }
                                                            else {
                                                                ProductionID = 0;
                                                                DetailsID = 0;
                                                                savemode = "";
                                                                jAlert('Please try again later.');
                                                                LoadingPanel.Hide();
                                                                return false;

                                                            }
                                                            Message = "";
                                                        }

                                                    }
                                                }
                                            });

                                        }
                                        else {
                                            jAlert("Please enter new revision number to save.");
                                            LoadingPanel.Hide();
                                            return false;
                                        }
                                    }
                                });

                            }
                            else {

                                var hdnApproveRevSettings = $('#hdnApproveRevSettings').val();

                                var strEstimateno = $('#EstimateNo').val();
                                var EstimateDate = GetServerDateFormat(EstimateDate_dt.GetValue());
                                var RevisionNo = $('#RevisionNo').val();
                                var RevisionDate = GetServerDateFormat(RevisionDate_dt.GetValue());
                                var Unit = $('#ddlBankBranch option:selected').val();
                                var SchemaID = $('#hdnSchemaId').val();
                                var ActualAdditionalCost = $('#txtActualAdditionalCost').val();
                                var hdnDetailsID = $('#hdnDetailsID').val();
                                var Proposal_ID = $('#hdnProposal_ID').val();
                                var Quotation_ID = $('#hdnQuotation_ID').val();
                                var HeadRemarks = $('#txt_HeadRemarks').val();
                                var CustomerId = $('#CustomerId').val();
                                var taxId = $('#ddl_AmountAre').val();
                                var ApproveRemarks = $("#txt_ApproveRemarks").val();
                                if (hdnDetailsID > 0) {
                                    DetailsID = hdnDetailsID;
                                }

                                if (hdnDetailsID == "") {
                                    RevisionDate = GetServerDateFormat(new Date);
                                }
                                var apprvRejt = "0";
                                var approveedval = '@ViewBag.ApproveStusEdit';
                                var EditAction = "";
                                if ($('#hdnApprove').val() != "") {
                                    EditAction = $('#hdnApprove').val();
                                    apprvRejt = approveedval;
                                }
                                else {
                                    if (approveedval == "1" || approveedval == "" || approveedval == "0") {
                                        EditAction = "";
                                        apprvRejt = "0";
                                    }
                                    else {
                                        EditAction = "Approve";
                                        apprvRejt = approveedval;
                                    }
                                }

                                if ($("#hdnApproveReject").val() == "Approve") {
                                    apprvRejt = "1";
                                }
                                else if ($("#hdnApproveReject").val() == "Reject") {
                                    apprvRejt = "2";
                                }
                                var data = {
                                    strEstimateNo: strEstimateno,
                                    EstimateDate: EstimateDate,
                                    RevisionNo: RevisionNo,
                                    RevisionDate: RevisionDate,
                                    Unit: Unit,
                                    Estimate_SCHEMAID: SchemaID,
                                    ActualAdditionalCost: ActualAdditionalCost,
                                    ProductionID: ProductionID,
                                    DetailsID: DetailsID,
                                    Proposal_ID: Proposal_ID,
                                    Quotation_ID: Quotation_ID,
                                    HeadRemarks: HeadRemarks,
                                    Customer_ID: CustomerId,
                                    ContractNo: ContractID,
                                    ProjectIDs: ProjectGridLookup.GetSelectedKeyFieldValues(),
                                    TaxID: taxId,
                                    ApproveRemarks: ApproveRemarks,
                                    ApprvRejct: apprvRejt,
                                    Approve: EditAction,
                                    ApprovRevSettings: hdnApproveRevSettings
                                }
                                $.ajax({
                                    type: "POST",
                                    url: "@Url.Action("SaveEstimate", "Estimate")",
                                    //url: "../Estimate/SaveEstimate",
                                    data: "{Details:" + JSON.stringify(data) + "}",
                                    async: true,
                                    contentType: "application/json; charset=utf-8",
                                    dataType: "json",
                                    success: function (response) {
                                        if (response != null) {
                                            var Message = response.split('~')[4];
                                            var DetailsID = response.split('~')[1];
                                            var ProductionID = response.split('~')[2];
                                            var GEstimateNo = response.split('~')[3];
                                            var Sucess = response.split('~')[0];
                                            if (Message == "duplicate" && DetailsID == 0 && ProductionID == 0) {
                                                savemode = "";
                                                if (Message == "duplicate") {
                                                    jAlert('This Estimate no already present!');
                                                    return false;
                                                    LoadingPanel.Hide();
                                                }
                                                else {
                                                    jAlert('Please try again later.');
                                                    return false;
                                                    LoadingPanel.Hide();
                                                }
                                                Message = "";

                                            }
                                            else {
                                                if (DetailsID > 0 && ProductionID > 0 && GEstimateNo != "") {
                                                    ProductionID = 0;
                                                    DetailsID = 0;
                                                    var msg = $("#hdnApproveReject").val();
                                                    if (msg == "Approve") {
                                                        jAlert('Estimate Number : ' + GEstimateNo + ' approve successfully.', 'Alert!', function (r) {
                                                            if (r) {
                                                                if (savemode == "Exit") {
                                                                    setTimeout(function () {
                                                                        var url = $('#hdnEstimateListPage').val();
                                                                        window.location.href = url;
                                                                    }, 500);
                                                                }
                                                            }

                                                        });
                                                    }
                                                    else if (msg == "Reject") {
                                                        jAlert('Estimate Number : ' + GEstimateNo + ' reject successfully.', 'Alert!', function (r) {
                                                            if (r) {
                                                                if (savemode == "Exit") {
                                                                    setTimeout(function () {
                                                                        var url = $('#hdnEstimateListPage').val();
                                                                        window.location.href = url;
                                                                    }, 500);
                                                                }
                                                            }
                                                        });
                                                    }
                                                    else {
                                                        jAlert('Estimate Number : ' + GEstimateNo + ' saved successfully.', 'Alert!', function (r) {
                                                            if (r) {
                                                                if (savemode == "Exit") {
                                                                    setTimeout(function () {
                                                                        var url = $('#hdnEstimateListPage').val();
                                                                        window.location.href = url;
                                                                    }, 500);
                                                                }
                                                                else if (savemode == "New") {
                                                                    var url = "/Estimate/Index?ActionType=ADD";
                                                                    window.location.href = url;
                                                                }
                                                            }
                                                        });
                                                    }
                                                    LoadingPanel.Hide();
                                                    // jAlert('Estimate Number : ' + GEstimateNo + ' Successfully saved.');


                                                }
                                                else {
                                                    ProductionID = 0;
                                                    DetailsID = 0;
                                                    savemode = "";
                                                    jAlert('Please try again later.');
                                                    LoadingPanel.Hide();
                                                    return false;

                                                }
                                                Message = "";
                                            }

                                        }
                                    }
                                });
                            }
                        }
                        else {
                            savemode = "";
                            if (Estimateno == '') {
                                $('#EEstimateNo').show();
                            }
                            else {
                                $('#EEstimateNo').hide();
                            }
                            if (EstimateDate == '') {
                                $('#EEstimateDate_dt').show();
                            }
                            else {
                                $('#EEstimateDate_dt').hide();
                            }
                            if (RevisionNo == '') {
                                $('#ERevisionNo').show();
                            }
                            else {
                                $('#ERevisionNo').hide();
                            }
                            if (RevisionDate == '') {
                                $('#ERevisionDate_dt').show();
                            }
                            else {
                                $('#ERevisionDate_dt').hide();
                            }
                            if (Unit == '') {
                                $('#EddlBankBranch').show();
                            }
                            else {
                                $('#EddlBankBranch').hide();
                            }

                            $("html, body").animate({ scrollTop: 0 }, 600);
                            LoadingPanel.Hide();
                            return false;
                        }
                    }
                }
                else {
                    var hdnApproveRevSettings = $('#hdnApproveRevSettings').val();
                    var strEstimateno = $('#EstimateNo').val();
                    var EstimateDate = GetServerDateFormat(EstimateDate_dt.GetValue());
                    var RevisionNo = $('#RevisionNo').val();
                    var RevisionDate = GetServerDateFormat(RevisionDate_dt.GetValue());
                    var Unit = $('#ddlBankBranch option:selected').val();
                    var SchemaID = $('#hdnSchemaId').val();
                    var ActualAdditionalCost = $('#txtActualAdditionalCost').val();
                    var hdnDetailsID = $('#hdnDetailsID').val();
                    var Proposal_ID = $('#hdnProposal_ID').val();
                    var Quotation_ID = $('#hdnQuotation_ID').val();
                    var HeadRemarks = $('#txt_HeadRemarks').val();
                    var CustomerId = $('#CustomerId').val();
                    var taxId = $('#ddl_AmountAre').val();
                    var ApproveRemarks = $("#txt_ApproveRemarks").val();
                    if (hdnDetailsID > 0) {
                        DetailsID = hdnDetailsID;
                    }

                    if (hdnDetailsID == "") {
                        RevisionDate = GetServerDateFormat(new Date);
                    }
                    var apprvRejt = "0";
                    var approveedval = '@ViewBag.ApproveStusEdit';
                    var EditAction = "";
                    if ($('#hdnApprove').val() != "") {
                        EditAction = $('#hdnApprove').val();
                        apprvRejt = approveedval;
                    }
                    else {
                        if (approveedval == "1" || approveedval == "" || approveedval == "0") {
                            EditAction = "";
                            apprvRejt = "0";
                        }
                        else {
                            EditAction = "Approve";
                            apprvRejt = approveedval;
                        }
                    }

                    if ($("#hdnApproveReject").val() == "Approve") {
                        apprvRejt = "1";
                    }
                    else if ($("#hdnApproveReject").val() == "Reject") {
                        apprvRejt = "2";
                    }
                    var data = {
                        strEstimateNo: strEstimateno,
                        EstimateDate: EstimateDate,
                        RevisionNo: RevisionNo,
                        RevisionDate: RevisionDate,
                        Unit: Unit,
                        Estimate_SCHEMAID: SchemaID,
                        ActualAdditionalCost: ActualAdditionalCost,
                        ProductionID: ProductionID,
                        DetailsID: DetailsID,
                        Proposal_ID: Proposal_ID,
                        Quotation_ID: Quotation_ID,
                        HeadRemarks: HeadRemarks,
                        Customer_ID: CustomerId,
                        ContractNo: ContractID,
                        ProjectIDs: ProjectGridLookup.GetSelectedKeyFieldValues(),
                        TaxID: taxId,
                        ApproveRemarks: ApproveRemarks,
                        ApprvRejct: apprvRejt,
                        Approve: EditAction,
                        ApprovRevSettings: hdnApproveRevSettings
                    }
                    $.ajax({
                        type: "POST",
                        url: "@Url.Action("SaveEstimate", "Estimate")",
                        //url: "../Estimate/SaveEstimate",
                        data: "{Details:" + JSON.stringify(data) + "}",
                        async: true,
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        success: function (response) {
                            if (response != null) {
                                var Message = response.split('~')[4];
                                var DetailsID = response.split('~')[1];
                                var ProductionID = response.split('~')[2];
                                var GEstimateNo = response.split('~')[3];
                                var Sucess = response.split('~')[0];
                                if (Message == "duplicate" && DetailsID == 0 && ProductionID == 0) {
                                    savemode = "";
                                    if (Message == "duplicate") {
                                        jAlert('This Estimate no already present!');
                                        return false;
                                        LoadingPanel.Hide();
                                    }
                                    else {
                                        jAlert('Please try again later.');
                                        return false;
                                        LoadingPanel.Hide();
                                    }
                                    Message = "";

                                }
                                else {
                                    if (DetailsID > 0 && ProductionID > 0 && GEstimateNo != "") {

                                        $('#EstimateNo').val('');
                                        var EstimateDate = GetServerDateFormat(EstimateDate_dt.GetValue());
                                        $('#RevisionNo').val('');
                                        $('#ddlBankBranch').val($("#ddlBankBranch option:first").val());
                                        $('#hdnSchemaId').val('');
                                        $('#txtActualAdditionalCost').val(parseFloat(0).toFixed(4));
                                        $('#txtGridProductEntryTotalAmount').val(parseFloat(0).toFixed(2));
                                        $('#txtGridResourcesTotalAmount').val(parseFloat(0).toFixed(2));


                                        $('#ddlSchema').val($("#ddlSchema option:first").val());
                                        $('#EstimateNo').val('');
                                        $('#EEstimateNo').hide();
                                        $('#EEstimateDate_dt').hide();
                                        $('#EFinishedQty').hide();
                                        $('#EFinishedQty').hide();
                                        $('#ERevisionNo').hide();
                                        $('#ERevisionDate_dt').hide();
                                        $('#EddlBankBranch').hide();
                                        $('#FinishedUom').val('');
                                        $('#hdnDetailsID').val(0);

                                        $('#hdnProposal_ID').val('');
                                        $('#hdnQuotation_ID').val('');
                                        $('#txt_HeadRemarks').val('');
                                        $('#btnQuotation').val('');
                                        $('#btnProposal').val('');
                                        $("#txt_ApproveRemarks").val('');
                                        Scheme_ValueChange();



                                        ProductionID = 0;
                                        DetailsID = 0;
                                        var msg = $("#hdnApproveReject").val();
                                        if (msg == "Approve") {
                                            jAlert('Estimate Number : ' + GEstimateNo + ' approve successfully.', 'Alert!', function (r) {
                                                if (r) {
                                                    if (savemode == "Exit") {
                                                        setTimeout(function () {
                                                            var url = $('#hdnEstimateListPage').val();
                                                            window.location.href = url;
                                                        }, 500);
                                                    }
                                                }

                                            });
                                        }
                                        else if (msg == "Reject") {
                                            jAlert('Estimate Number : ' + GEstimateNo + ' reject successfully.', 'Alert!', function (r) {
                                                if (r) {
                                                    if (savemode == "Exit") {
                                                        setTimeout(function () {
                                                            var url = $('#hdnEstimateListPage').val();
                                                            window.location.href = url;
                                                        }, 500);
                                                    }
                                                }
                                            });
                                        }
                                        else {
                                            jAlert('Estimate Number : ' + GEstimateNo + ' saved successfully.', 'Alert!', function (r) {
                                                if (r) {
                                                    if (savemode == "Exit") {
                                                        setTimeout(function () {
                                                            var url = $('#hdnEstimateListPage').val();
                                                            window.location.href = url;
                                                        }, 500);
                                                    }
                                                    else if (savemode == "New") {
                                                        var url = "/Estimate/Index?ActionType=ADD";
                                                        window.location.href = url;
                                                    }
                                                }
                                            });
                                        }
                                        LoadingPanel.Hide();
                                        // jAlert('Estimate Number : ' + GEstimateNo + ' Successfully saved.');


                                    }
                                    else {
                                        ProductionID = 0;
                                        DetailsID = 0;
                                        savemode = "";
                                        jAlert('Please try again later.');
                                        LoadingPanel.Hide();
                                        return false;

                                    }
                                    Message = "";
                                }

                            }
                        }
                    });
                }
            }
            else {
                $("html, body").animate({ scrollTop: 0 }, 600);
                savemode = "";
                if (Estimateno == '') {
                    $('#EEstimateNo').show();
                }
                else {
                    $('#EEstimateNo').hide();
                }
                if (EstimateDate == '') {
                    $('#EEstimateDate_dt').show();
                }
                else {
                    $('#EEstimateDate_dt').hide();
                }
                if (RevisionNo == '') {
                    $('#ERevisionNo').show();
                }
                else {
                    $('#ERevisionNo').hide();
                }
                if (RevisionDate == '') {
                    $('#ERevisionDate_dt').show();
                }
                else {
                    $('#ERevisionDate_dt').hide();
                }
                if (Unit == '') {
                    $('#EddlBankBranch').show();
                }
                else {
                    $('#EddlBankBranch').hide();
                }

                jAlert('Cannot Save. You must enter atleast one Product to save this entry.');
                LoadingPanel.Hide();
                return false;

            }
        }
    }


    function OnResourcesStartCallback(s, e) {
        //debugger;
        var strEstimateno = $('#EstimateNo').val();
        var EstimateDate = GetServerDateFormat(EstimateDate_dt.GetValue());
        //var EstimateDate = $('#EstimateDate_dt').val();
        //var EstimateType = $('#slcEstimatetype option:selected').val();
        var RevisionNo = $('#RevisionNo').val();
        var RevisionDate = GetServerDateFormat(RevisionDate_dt.GetValue());
        //var RevisionDate = $('#RevisionDate_dt').val();
        var Unit = $('#ddlBankBranch option:selected').val();
        //var WarehouseID = $('#ddlWarehouse option:selected').val();
        var SchemaID = $('#hdnSchemaId').val();
        var ActualAdditionalCost = $('#txtActualAdditionalCost').val();

        var Proposal_ID = $('#hdnProposal_ID').val();
        var Quotation_ID = $('#hdnQuotation_ID').val();
        var HeadRemarks = $('#txt_HeadRemarks').val();

        var hdnDetailsID = $('#hdnDetailsID').val();
        if (hdnDetailsID > 0) {
            DetailsID = hdnDetailsID;
        }
        if (hdnDetailsID == "") {

            RevisionDate = GetServerDateFormat(new Date);
        }
        var taxId = $('#ddl_AmountAre').val();
        var CustomerId = $('#CustomerId').val();
        var ApproveRemarks = $("#txt_ApproveRemarks").val();

        var apprvRejt = "0";
        var approveedval = '@ViewBag.ApproveStusEdit';
        var EditAction = "";
        if ($('#hdnApprove').val() != "") {
            EditAction = $('#hdnApprove').val();
            apprvRejt = approveedval;
        }
        else {
            if (approveedval == "1" || approveedval == "") {
                EditAction = "";
                apprvRejt = "0";
            }
            else {
                EditAction = "Approve";
                apprvRejt = approveedval;
            }
        }



        if ($("#hdnApproveReject").val() == "Approve") {
            apprvRejt = "1";
        }
        else if ($("#hdnApproveReject").val() == "Reject") {
            apprvRejt = "2";
        }

        if (e != undefined) {
            e.customArgs["strEstimateNo"] = strEstimateno;
            e.customArgs["EstimateDate"] = EstimateDate;
            //e.customArgs["FinishedItem"] = FinishedItem;
            //e.customArgs["FinishedQty"] = FinishedQty;

            //e.customArgs["FinishedUom"] = FinishedUom;
            //e.customArgs["EstimateType"] = EstimateType;
            e.customArgs["RevisionNo"] = RevisionNo; //EmployeesCounterTargetList

            e.customArgs["RevisionDate"] = RevisionDate;
            e.customArgs["Unit"] = Unit;
            // e.customArgs["WarehouseID"] = WarehouseID;
            e.customArgs["Estimate_SCHEMAID"] = SchemaID;
            e.customArgs["ActualAdditionalCost"] = ActualAdditionalCost;

            e.customArgs["ProductionID"] = ProductionID;
            e.customArgs["DetailsID"] = DetailsID;

            e.customArgs["Proposal_ID"] = Proposal_ID;
            e.customArgs["Quotation_ID"] = Quotation_ID;
            e.customArgs["HeadRemarks"] = HeadRemarks;

            e.customArgs["ContractNo"] = ContractID;//ContractGridLookup.GetSelectedKeyFieldValues();
            e.customArgs["ProjectID"] = ProjectGridLookup.GetSelectedKeyFieldValues();
            e.customArgs["TaxID"] = projectCode;
            e.customArgs["ContractNo"] = ContractID;
            e.customArgs["ApproveRemarks"] = ApproveRemarks;
            e.customArgs["ApprvRejct"] = apprvRejt;
            e.customArgs["Approve"] = EditAction;
        }


    }

    function OnStartCallback(s, e) {
        //debugger;
        var strEstimateno = $('#EstimateNo').val();
        var EstimateDate = GetServerDateFormat(EstimateDate_dt.GetValue());
        //var EstimateType = $('#slcEstimatetype option:selected').val();
        var RevisionNo = $('#RevisionNo').val();
        var RevisionDate = GetServerDateFormat(RevisionDate_dt.GetValue());
        //var RevisionDate = $('#RevisionDate_dt').val();
        var Unit = $('#ddlBankBranch option:selected').val();
        //var WarehouseID = $('#ddlWarehouse option:selected').val();
        var SchemaID = $('#hdnSchemaId').val();
        var ActualAdditionalCost = $('#txtActualAdditionalCost').val();

        var hdnDetailsID = $('#hdnDetailsID').val();

        var Proposal_ID = $('#hdnProposal_ID').val();
        var Quotation_ID = $('#hdnQuotation_ID').val();
        var HeadRemarks = $('#txt_HeadRemarks').val();

        var CustomerId = $('#CustomerId').val();
        var taxId = $('#ddl_AmountAre').val();

        var ApproveRemarks = $("#txt_ApproveRemarks").val();

        if (hdnDetailsID > 0) {
            DetailsID = hdnDetailsID;
        }

        if (hdnDetailsID == "") {

            RevisionDate = GetServerDateFormat(new Date);
        }
        var apprvRejt = "0";
        var approveedval = '@ViewBag.ApproveStusEdit';
        var EditAction = "";
        if ($('#hdnApprove').val() != "") {
            EditAction = $('#hdnApprove').val();
            apprvRejt = approveedval;
        }
        else {
            if (approveedval == "1" || approveedval == "") {
                EditAction = "";
                apprvRejt = "0";
            }
            else {
                EditAction = "Approve";
                apprvRejt = approveedval;
            }
        }

        if ($("#hdnApproveReject").val() == "Approve") {
            apprvRejt = "1";
        }
        else if ($("#hdnApproveReject").val() == "Reject") {
            apprvRejt = "2";
        }

        if (e != undefined) {
            e.customArgs["strEstimateNo"] = strEstimateno;
            e.customArgs["EstimateDate"] = EstimateDate;
            //e.customArgs["FinishedItem"] = FinishedItem;
            //e.customArgs["FinishedQty"] = FinishedQty;

            //e.customArgs["FinishedUom"] = FinishedUom;
            // e.customArgs["EstimateType"] = EstimateType;
            e.customArgs["RevisionNo"] = RevisionNo; //EmployeesCounterTargetList

            e.customArgs["RevisionDate"] = RevisionDate;
            e.customArgs["Unit"] = Unit;
            // e.customArgs["WarehouseID"] = WarehouseID;
            e.customArgs["Estimate_SCHEMAID"] = SchemaID;
            e.customArgs["ActualAdditionalCost"] = ActualAdditionalCost;

            e.customArgs["ProductionID"] = ProductionID;
            e.customArgs["DetailsID"] = DetailsID;

            e.customArgs["Proposal_ID"] = Proposal_ID;
            e.customArgs["Quotation_ID"] = Quotation_ID;
            e.customArgs["HeadRemarks"] = HeadRemarks;
            e.customArgs["Customer_ID"] = CustomerId;

            e.customArgs["ContractNo"] = ContractID;//ContractGridLookup.GetSelectedKeyFieldValues();
            e.customArgs["ProjectID"] = ProjectGridLookup.GetSelectedKeyFieldValues();
            e.customArgs["TaxID"] = taxId;
            e.customArgs["ApproveRemarks"] = ApproveRemarks;
            e.customArgs["ApprvRejct"] = apprvRejt;
            e.customArgs["Approve"] = EditAction;
        }
    }


    $(function () {
        $('#refreshgrid2').hide();
        $(".decimalCheck").on("keypress keyup blur", function (event) {
            //this.value = this.value.replace(/[^0-9\.]/g,'');
            $(this).val($(this).val().replace(/[^0-9\.]/g, ''));
            if ((event.which != 46 || $(this).val().indexOf('.') != -1) && (event.which < 48 || event.which > 57)) {
                event.preventDefault();
            }
        });

        $('#showResources').click(function () {
            $('#refreshgrid2').show();
            //gridEstimateResourcesList.batchEditApi.StartEdit(globalrowindex2, ResProductNameIndex);
            setTimeout(function () {
                gridEstimateResourcesList.Refresh();
                gridEstimateResourcesList.Refresh();
            }, 100);

            $(this).hide();
        });

        $('#closeResource').click(function () {
            jConfirm('Are you sure to close? Clicking on "Yes" will clear the data from grid.', 'Alert!', function (r) {
                if (r) {
                    $('#refreshgrid2').hide();
                    $('#showResources').show();
                    for (var i = 500; i > -500; i--) {
                        if (gridEstimateResourcesList.GetRow(i)) {
                            gridEstimateResourcesList.DeleteRow(i);
                        }
                    }
                    $("#txtGridResourcesTotalAmount").val('0.00');
                    //AddNewRowGridResources();
                }
            });
        });

        var hdnDetailsID = $('#hdnDetailsID').val();
        if (hdnDetailsID == "") {
            $('#redREV').hide();
            $('#redREVDate').hide();
            $('#RevisionNo').attr("disabled", "disabled");
            RevisionDate_dt.SetEnabled(false);
        }
    });
</script>
@Html.Hidden("hdnProductID")

<input type="hidden" value="@Url.Action("Estimatelist", "Estimate" )" id="hdnEstimateListPage" />
<input type="hidden" value="@Model.DetailsID" id="hdnDetailsID" />

<input type="hidden" value="@Model.Approve" id="hdnAprove" />

@*<input type="hidden" value="@Model.EstimateType" id="hdnEstimateTYPE" />*@
<input type="hidden" value="@Model.WarehouseID" id="hdnProductWarehouseID" />
<input type="hidden" value="@Model.RevisionNo" id="hdnRevisionNo" />

<input type="hidden" value="@Model.Proposal_ID" id="hdnProposal_ID" />
<input type="hidden" value="@Model.Quotation_ID" id="hdnQuotation_ID" />

<input type="hidden" value="@Model.Estimate_SCHEMAID" id="hdnEstimate_SCHEMAID" />

<input type="hidden" value="@Model.ProjectID" id="hdnProjectID" />
<input type="hidden" value="@Model.Proj_Code" id="hdnProjectCode" />
<input type="hidden" value="@Model.Approve" id="hdnApprove" />

<input type="hidden" id="hdnRevisionRequiredEveryAfterApproval" value="@Model.RevisionRequiredEveryAfterApproval" />
<input type="hidden" value="@Model.isFirstApprove" id="hdnisFirstApprove" />

<input type="hidden" id="hdnApproveReject" />

<input type="hidden" id="hdnProdAddlDescSl" />
<input type="hidden" id="hdnResAddlDescSl" />
<input type="hidden" id="hdnProjectgotfocusId" />

<input type="hidden" value="@Model.ApprovRevSettings" id="hdnApproveRevSettings" />

<div class="panel-heading clearfix">
    <div class="panel-title clearfix pull-left" id="myDiv">
        <h3 class="pull-left">
            <label>Estimate & Costing</label>
        </h3>

    </div>

    <div id="ApprovalCross" class="crossBtn"><a href="@Url.Action("Estimatelist", "Estimate" )"><i class="fa fa-times"></i></a></div>
</div>

<input type="hidden" value="@Model.FinishedItem" id="hdnFinishedItem" />
<input type="hidden" value="0" id="hdnSchemaId" />
<div class="">
    <div class="boxBorder">
        <div class="styledBox">
            <div class="row">
                <div class="col-md-2">
                    <label>Numbering Scheme <span style="color:red">*</span></label>
                    <div class="relative">
                        <select id="ddlSchema" class="form-control" onchange="Scheme_ValueChange()"></select>
                        <span id="EddlSchema" class="customerno pullleftClass fa fa-exclamation-circle iconRed " style="color: red; position: absolute; display: none" title="Mandatory"></span>
                    </div>
                </div>

                <div class=" col-sm-2">
                    <label>Estimate No. <span style="color:red">*</span></label>
                    <div class="relative">
                        @Html.TextBoxFor(m => m.EstimateNo, new { @class = "form-control", @disabled = "disabled" })
                        <span id="EEstimateNo" class="customerno pullleftClass fa fa-exclamation-circle iconRed " style="color: red; position: absolute; display: none" title="Mandatory"></span>
                    </div>

                </div>
                <div class=" col-sm-2">
                    <label>Estimate Date <span style="color:red">*</span></label>
                    <div class="relative">
                        @Html.DevExpress().DateEdit(
                        settings =>
                        {
                            settings.Name = "EstimateDate_dt";
                            settings.Properties.DisplayFormatString = "dd-MM-yyyy";
                            settings.Properties.EditFormatString = "dd-MM-yyyy";
                            settings.Width = Unit.Percentage(100);
                            settings.Properties.ClientSideEvents.DateChanged = "datevalidateTo";
                            settings.Date = Convert.ToDateTime(Model.EstimateDate);
                            //if (Model.EstimateDate !=null)
                            //settings.Properties.MinDate = Convert.ToDateTime(Model.EstimateDate);
                        }
                        ).GetHtml()
                        <span id="EEstimateDate_dt" class="customerno pullleftClass fa fa-exclamation-circle iconRed " style="color: red; position: absolute; display: none" title="Mandatory"></span>
                    </div>
                </div>
                <div class=" col-sm-2 hide" id="divRevNo">
                    <label>Revision No. <span style="color:red" id="redREV">*</span></label>
                    <div class="relative">
                        @Html.TextBoxFor(m => m.RevisionNo, new { @class = "form-control" })
                        <span id="ERevisionNo" class="customerno pullleftClass fa fa-exclamation-circle iconRed " style="color: red; position: absolute; display: none" title="Mandatory"></span>
                    </div>
                </div>

                <div class=" col-sm-2 hide" id="divRevDate">
                    <label>Revision Date <span style="color:red" id="redREVDate">*</span></label>
                    <div class="relative">
                        @Html.DevExpress().DateEdit(
                        settings =>
                        {
                            settings.Name = "RevisionDate_dt";
                            settings.Properties.DisplayFormatString = "dd-MM-yyyy";
                            settings.Properties.EditFormatString = "dd-MM-yyyy";
                            settings.Width = Unit.Percentage(100);
                            settings.Properties.ClientSideEvents.DateChanged = "datevalidateTo";
                            settings.Date = Convert.ToDateTime(Model.RevisionDate);
                            settings.Properties.MinDate = Convert.ToDateTime(Model.strREVDate);

                        }).GetHtml()
                        <span id="ERevisionDate_dt" class="customerno pullleftClass fa fa-exclamation-circle iconRed " style="color: red; position: absolute; display: none" title="Mandatory"></span>
                    </div>
                </div>


                <div class=" col-sm-2">
                    <label>Customer <span style="color:red">*</span></label>
                    <div class="relative">
                        @Html.DevExpress().ButtonEdit(
                        settings =>
                        {
                            settings.Name = "CustomerTxt";
                            settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                            settings.Text = Model.Customer;
                            settings.ReadOnly = true;
                            settings.Properties.Buttons.Add("...");
                            settings.Properties.ClientSideEvents.ButtonClick = "function(s,e){CustomerButnClick(s,e);}";
                            settings.Properties.ClientSideEvents.KeyDown = "function(s,e){Customer_KeyDown(s,e);}";

                        }).GetHtml()

                        <input type="hidden" id="txtContact_hidden">
                        <input type="hidden" id="CustomerId" value="@Model.Customer_ID">
                        <span id="EddlBankBranch" class="customerno pullleftClass fa fa-exclamation-circle iconRed " style="color: red; position: absolute; display: none" title="Mandatory"></span>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class=" col-sm-2">
                    <label class="mtop10">Unit <span style="color:red">*</span></label>
                    <div class="relative">
                        @Html.DropDownListFor(x => x.Unit, new SelectList(Model.UnitList, "BranchID", "BankBranchName"), new { @id = "ddlBankBranch", @class = "form-control", @disabled = "disabled" })@*, @onchange = "PopulateWareHouseData();"*@
                        <span id="EddlBankBranch" class="customerno pullleftClass fa fa-exclamation-circle iconRed " style="color: red; position: absolute; display: none" title="Mandatory"></span>
                    </div>
                </div>


                <div class=" col-sm-2" id="divProj">
                    <label class="mtop10">Project Code </label>
                    <div class="relative">
                        @Html.Action("GetProjectCode", "Estimate", new { Project_ID = ViewBag.ProjectID, customer_id = ViewBag.Customer_id, Branchs = ViewBag.Unit, Hierarchy = @ViewBag.Hierarchy, Quotation_ID = @Model.Proposal_ID })

                    </div>
                </div>

                <div class=" col-sm-2">
                    <label class="mtop10">Proposal/Quotation </label>
                    <div class="relative">
                        @Html.DevExpress().ButtonEdit(
                        settings =>
                        {
                            settings.Name = "btnProposal";
                            settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                            settings.Text = Model.Proposal;
                            settings.ReadOnly = true;
                            settings.Properties.Buttons.Add("...");
                            settings.Properties.ClientSideEvents.ButtonClick = "function(s,e){btnProposalList_Click(s,e);}";
                            settings.Properties.ClientSideEvents.KeyDown = "function(s,e){btnProposal_KeyDown(s,e);}";

                        }).GetHtml()

                    </div>
                </div>



                <div class=" col-sm-2 hidden">
                    <label class="mtop10">Quotation </label>
                    <div class="relative">
                        @Html.DevExpress().ButtonEdit(
                        settings =>
                        {
                            settings.Name = "btnQuotation";
                            settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                            settings.Text = Model.Quotation;
                            settings.ReadOnly = true;
                            settings.Properties.Buttons.Add("...");
                            settings.Properties.ClientSideEvents.ButtonClick = "function(s,e){btnQuotationList_Click(s,e);}";
                            settings.Properties.ClientSideEvents.KeyDown = "function(s,e){btnQuotation_KeyDown(s,e);}";

                        }).GetHtml()
                        @*<input type="hidden" id="QuoteId" value="@Model.Quotation_ID">*@
                    </div>
                </div>


                <div class=" col-sm-2">
                    <label class="mtop10">Order </label>
                    <div class="relative">
                        @Html.Action("GetContractCode", "Estimate", new { customer_id = ViewBag.Customer_id, Contract = ViewBag.ContractNo, Branchs = ViewBag.Unit, ProjectID = ViewBag.ProjectID })

                    </div>
                </div>

                <div class=" col-sm-4" id="divHierarchy">
                    <label class="mtop10">Hierarchy</label>
                    <div class="relative">
                        @Html.DropDownListFor(x => x.Hierarchy, new SelectList(Model.Hierarchy_List, "Hierarchy_id", "Hierarchy_Name"), new { @id = "ddlHierarchy", @class = "form-control", @disabled = "disabled" })
                    </div>
                </div>

            </div>

            <div class="row">
                <div class=" col-sm-2">
                    <label class="mtop10">Amounts are</label>
                    <div class="relative">
                        <select id="ddl_AmountAre" class="form-control disabled" onchange="Scheme_ValueChange()"></select>
                    </div>
                </div>
                <div class=" col-sm-4">
                    <label class="mtop10">Remarks </label>
                    <div class="relative">
                        <textarea rows="2" class="form-control" onblur="Remarkstab()" maxlength="500" id="txt_HeadRemarks">@Model.HeadRemarks</textarea>
                    </div>
                </div>
                <div class="col-sm-3 hidden" id="divApproveRemarks">
                    <label class="mtop10">Approve/Reject Remarks <span style="color:red">*</span> </label>
                    <div class="relative">
                        <textarea rows="2" class="form-control" maxlength="500" id="txt_ApproveRemarks">@Model.ApproveRemarks</textarea>
                    </div>
                    <div class="clearfix"></div>

                </div>
                <div class="col-sm-3 hidden" id="divApproveButton">
                    @*style="padding-top: 15px;"*@
                    <label class="mtop10 text-danger" id="lblApproveName">@Model.APPROVE_NAME&nbsp;</label>
                    <div class="relative">
                        <div class="btn btn-success" id="btnApprove" onclick="EstimateApprove('Approve');"><span>Approve</span></div>
                        <div class="btn btn-danger " id="btnReject" onclick="EstimateApprove('Reject');"><span>Reject</span></div>
                    </div>
                </div>
            </div>


        </div>
        <div class="clear"></div>
        <br />
        <div class="styledBox">
            <div class="row">
                @*<hr />*@
                <div class=" col-sm-2">
                    <label class="mtop10">Product <span class="red">*</span></label>
                    <div class="relative">
                        @Html.DevExpress().ButtonEdit(
                        settings =>
                        {
                            settings.Name = "btnProduct";
                            settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                            settings.Text = Model.Proposal;
                            settings.ReadOnly = true;
                            settings.Properties.Buttons.Add("...");
                            settings.Properties.ClientSideEvents.ButtonClick = "function(s,e){OpenProductList(s,e);}";
                            settings.Properties.ClientSideEvents.KeyDown = "function(s,e){ProductKeyDown(s,e);}";

                        }).GetHtml()
                        <input type="hidden" id="hdnProdHSN" />
                        <input type="hidden" id="hdnProdProductID" />
                        <input type="hidden" id="GuiIDS" />

                    </div>
                </div>
                <div class=" col-sm-3">
                    <label class="mtop10">Description </label>
                    <div class="relative">
                        <input type="text" id="txtProductdescription" class="form-control" disabled />
                    </div>

                </div>
                <div class="col-sm-3">
                    <label class="mtop10">Addl. Desc.</label>
                    <div class="relative">
                        <textarea rows="2" class="form-control" maxlength="500" id="txt_AddlDescProd" style="resize:none"></textarea>
                    </div>
                </div>
                <div class="col-sm-2">
                    <label class="mtop10">Qty.</label>
                    <div class="relative">
                        @*<input type="text" class="form-control" maxlength="500" id="txt_ProdQty" />*@
                        @Html.DevExpress().TextBoxFor(m => m.ProductQty,
                        settings =>
                        {
                            settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                            settings.Properties.ClientInstanceName = "cProductQty";
                            settings.Properties.MaskSettings.Mask = "<0..999999999>.<00..99>";
                            ////settings.Properties.MaskSettings.IncludeLiterals = false;
                            ////settings.Properties.MaskSettings.IncludeLiterals = MaskIncludeLiteralsMode.DecimalSymbol;
                            settings.ControlStyle.CssClass = "DEvInput";
                            settings.Properties.ClientSideEvents.LostFocus = "function(s,e){EstimateGridSetAmountQty(s,e);}";
                        }).GetHtml()
                    </div>
                </div>
                <div class="col-sm-1">
                    <label class="mtop10">UOM</label>
                    <div class="relative">
                        <input type="text" class="form-control" maxlength="500" id="txt_ProdUOM" disabled />
                    </div>
                </div>
                <div class="col-sm-1">
                    <label class="mtop10">Warehouse</label>
                    <div class="relative">
                        @*<input type="text" class="form-control" maxlength="500" id="txt_ProdWarehouse" />*@
                        <select id="ddlProductWarehouselist" class="form-control">
                            <option value='select'>Select</option>
                        </select>
                    </div>
                </div>

            </div>
            <div class="row">
                <div class="col-sm-2">
                    <label class="mtop10">Price</label>
                    <div class="relative">
                        @*<input type="text" class="form-control" maxlength="500" id="txt_ProdPrice" />*@
                        @Html.DevExpress().TextBoxFor(m => m.ProductPrice,
                        settings =>
                        {
                            settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                            settings.Properties.ClientInstanceName = "cProductPrice";
                            settings.Properties.MaskSettings.Mask = "<0..999999999>.<00..99>";
                            ////settings.Properties.MaskSettings.IncludeLiterals = false;
                            ////settings.Properties.MaskSettings.IncludeLiterals = MaskIncludeLiteralsMode.DecimalSymbol;
                            settings.ControlStyle.CssClass = "DEvInput";
                            settings.Properties.ClientSideEvents.LostFocus = "function(s,e){EstimateGridSetAmount(s,e);}";
                        }).GetHtml()
                    </div>
                </div>
                <div class="col-sm-1">
                    <label class="mtop10">Discount(%)</label>
                    <div class="relative">
                        @*<input type="text" class="form-control" maxlength="500" id="txt_ProdDiscount" />*@
                        @Html.DevExpress().TextBoxFor(m => m.ProductDiscount,
                        settings =>
                        {
                            settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                            settings.Properties.ClientInstanceName = "cProductDiscount";
                            settings.Properties.MaskSettings.Mask = "<0..999999999>.<00..99>";
                            ////settings.Properties.MaskSettings.IncludeLiterals = false;
                            ////settings.Properties.MaskSettings.IncludeLiterals = MaskIncludeLiteralsMode.DecimalSymbol;
                            settings.ControlStyle.CssClass = "DEvInput";
                            settings.Properties.ClientSideEvents.LostFocus = "function(s,e){EstimateGridSetDiscount(s,e);}";
                        }).GetHtml()
                    </div>
                </div>
                <div class="col-sm-2">
                    <label class="mtop10">Amount</label>
                    <div class="relative">
                        @*<input type="text" class="form-control" maxlength="500" id="txt_ProdAmount" />*@
                        @Html.DevExpress().TextBoxFor(m => m.ProductAmount,
                        settings =>
                        {
                            settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                            settings.Properties.ClientInstanceName = "cProductAmount";
                            settings.Properties.MaskSettings.Mask = "<0..999999999>.<00..99>";
                            ////settings.Properties.MaskSettings.IncludeLiterals = false;
                            ////settings.Properties.MaskSettings.IncludeLiterals = MaskIncludeLiteralsMode.DecimalSymbol;
                            settings.Properties.ClientSideEvents.LostFocus = "function(s,e){EstimateGridSetTotalAmount(s,e);}";
                            settings.ControlStyle.CssClass = "DEvInput";
                            settings.ClientEnabled = false;
                        }).GetHtml()
                    </div>
                </div>
                <div class="col-sm-1">
                    <label class="mtop10">Tax Type</label>
                    <div class="relative">
                        <select id="ddlTaxTypelistProduct" class="form-control" onchange="SetTaxTypeInGrid()">
                            <option value="">Select</option>
                            <option value="1">SGST + CGST / UTGST</option>
                            <option value="2">IGST</option>
                            <option value="3">Others</option>
                        </select>
                    </div>
                </div>
                <div class="col-sm-1">
                    <label class="mtop10">Charges</label>
                    <div class="relative">
                        @*<input type="text" class="form-control" maxlength="500" id="txt_ProdCharges" />*@
                        @Html.DevExpress().TextBoxFor(m => m.ProductCharges,
                        settings =>
                        {
                            settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                            settings.Properties.ClientInstanceName = "cProductCharges";
                            settings.Properties.MaskSettings.Mask = "<0..999999999>.<00..99>";
                            ////settings.Properties.MaskSettings.IncludeLiterals = false;
                            ////settings.Properties.MaskSettings.IncludeLiterals = MaskIncludeLiteralsMode.DecimalSymbol;
                            settings.ControlStyle.CssClass = "DEvInput";
                            settings.ClientEnabled = false;
                        }).GetHtml()
                    </div>
                </div>
                <div class="col-sm-2">
                    <label class="mtop10">Net Amount</label>
                    <div class="relative">
                        @*<input type="text" class="form-control" maxlength="500" id="txt_ProdNetAmount" />*@
                        @Html.DevExpress().TextBoxFor(m => m.ProductNetAmount,
                        settings =>
                        {
                            settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                            settings.Properties.ClientInstanceName = "cProductNetAmount";
                            settings.Properties.MaskSettings.Mask = "<0..999999999>.<00..99>";
                            ////settings.Properties.MaskSettings.IncludeLiterals = false;
                            ////settings.Properties.MaskSettings.IncludeLiterals = MaskIncludeLiteralsMode.DecimalSymbol;
                            settings.ControlStyle.CssClass = "DEvInput";
                            settings.ClientEnabled = false;
                        }).GetHtml()
                    </div>
                </div>
                <div class="col-sm-1">
                    <label class="mtop10">Budg. Price</label>
                    <div class="relative">
                        @*<input type="text" class="form-control" maxlength="500" id="txt_ProdBudgetedPrice" />*@
                        @Html.DevExpress().TextBoxFor(m => m.ProductBudgetedPrice,
                        settings =>
                        {
                            settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                            settings.Properties.ClientInstanceName = "cProductBudgetedPrice";
                            settings.Properties.MaskSettings.Mask = "<0..999999999>.<00..99>";
                            ////settings.Properties.MaskSettings.IncludeLiterals = false;
                            ////settings.Properties.MaskSettings.IncludeLiterals = MaskIncludeLiteralsMode.DecimalSymbol;
                            settings.ControlStyle.CssClass = "DEvInput";
                        }).GetHtml()
                    </div>
                </div>
                <div class=" col-sm-2">
                    <label class="mtop10">Sellable </label>
                    <div class="relative">
                        @Html.DevExpress().ButtonEdit(
                        settings =>
                        {
                            settings.Name = "btnSellable";
                            settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                            settings.Text = Model.ProductSellable;
                            settings.ReadOnly = true;
                            settings.Properties.Buttons.Add("...");
                            settings.Properties.ClientSideEvents.ButtonClick = "function(s,e){OpenSellableProductList(s,e);}";
                            settings.Properties.ClientSideEvents.KeyDown = "function(s,e){SellableProductKeyDown(s,e);}";

                        }).GetHtml()
                        <input type="hidden" id="hdnSellableProductID" />
                    </div>
                </div>

            </div>
            <div class="row">
                <div class="col-sm-4">
                    <label class="mtop10">Remarks</label>
                    <div class="relative">
                        <textarea rows="2" class="form-control" maxlength="500" id="txt_AddlRemarks" style="resize:none"></textarea>
                    </div>
                </div>

                <div class="col-sm-1" style="display:none">
                    <label class="mtop10">BalQty</label>
                    <div class="relative">
                        <input type="number" class="form-control" id="BalQty" disabled />
                    </div>
                </div>
                <div class="col-sm-1" style="display:none">
                    <label class="mtop10">ProductDetailsID</label>
                    <div class="relative">
                        <input type="number" class="form-control" id="ProductDetailsID" disabled />
                    </div>
                </div>

                @*</div>
                    <div class="row">*@
                <div class=" col-sm-1">
                    <label class="">&nbsp; </label>
                    <div class="relative" style="padding-top: 10px">
                        <button type="button" id="btnAdd" onclick="btnAdd_ProductClick()" class="btn btn-success">Add Product</button>
                    </div>
                </div>
            </div>
        </div>
        <br />
        <div class="row">
            <div class="col-md-12">

                <div id="refreshgrid">
                    <div class=" ">
                        <span class="fullScreenTitle">Estimate</span>

                        @{
                            Html.RenderAction("GetEstimateProductEntryList", "Estimate");
                        }
                    </div>
                </div>
                @*@{

                    Html.Partial("~/Views/Estimate/Estimate/_EstimateProductEntryGrid.cshtml");
                    //Html.RenderPartial("_EstimateProductEntryGrid");
                    }*@
                <div class="clearfix footrGrider">

                    <div class="ttAMt pull-left hide">
                        <table>
                            <tr>
                                <td><label>Total Amount</label></td>
                                <td><input type="text" class="form-control text-right" id="txtGridProductEntryTotalAmount" style="width: 132px;" placeholder="0.00" disabled /></td>
                            </tr>
                        </table>
                    </div>
                </div>
            </div>


        </div>

        @* Rev 1.1 New grid like POS module *@
        <div class="row relative" id="refreshgrid2">
            <div class="col-md-12 relative">
                <h4>
                    Resources <i class="fa fa-reply backwords"></i>
                    <span id="closeResource" class="pull-right"><i class="fa fa-close"></i></span>
                    <span id="slideResource" class="pull-right"><i class="fa fa-chevron-up"></i><i class="fa fa-chevron-down"></i></span>
                </h4>

            </div>

            <div class="col-md-12 mTop10">
                <div id="slideDiv">
                    <div>
                        <div class=" ">
                            <span class="fullScreenTitle">Resources</span>

                            <br />
                            <div class="styledBox clearfix">
                                <div class="row">
                                    @*<hr />*@
                                    <div class=" col-sm-2">
                                        <label class="mtop10">Resource <span class="red">*</span></label>
                                        <div class="relative">
                                            @Html.DevExpress().ButtonEdit(
                                        settings =>
                                        {
                                            settings.Name = "btnResProduct";
                                            settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                                            settings.Text = Model.Proposal;
                                            settings.ReadOnly = true;
                                            settings.Properties.Buttons.Add("...");
                                            settings.Properties.ClientSideEvents.ButtonClick = "function(s,e){OpenNonInventoryProductList(s,e);}";
                                            settings.Properties.ClientSideEvents.KeyDown = "function(s,e){NonIProductKeyDown(s,e);}";

                                        }).GetHtml()
                                            <input type="hidden" id="hdnResHSN" />
                                            <input type="hidden" id="hdnResProductID" />
                                            <input type="hidden" id="ResGuiIDS" />
                                        </div>
                                    </div>
                                    <div class=" col-sm-3">
                                        <label class="mtop10">Description </label>
                                        <div class="relative">
                                            <input type="text" id="txtResProductdescription" class="form-control" disabled />
                                        </div>

                                    </div>
                                    <div class="col-sm-3">
                                        <label class="mtop10">Addl. Desc.</label>
                                        <div class="relative">
                                            <textarea rows="2" class="form-control" maxlength="500" id="txt_ResAddlDescProd" style="resize:none"></textarea>
                                        </div>
                                    </div>
                                    <div class="col-sm-2">
                                        <label class="mtop10">Qty.</label>
                                        <div class="relative">
                                            @*<input type="text" class="form-control" maxlength="500" id="txt_ResProdQty" />*@
                                            @Html.DevExpress().TextBoxFor(m => m.ResQty,
                                        settings =>
                                        {
                                            settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                                            settings.Properties.ClientInstanceName = "cResProductQty";
                                            settings.Properties.MaskSettings.Mask = "<0..999999999>.<00..99>";
                                            settings.ControlStyle.CssClass = "DEvInput";
                                            settings.Properties.ClientSideEvents.LostFocus = "function(s,e){EstimateResourceGridSetAmountQty(s,e);}";
                                        }).GetHtml()
                                        </div>
                                    </div>
                                    <div class="col-sm-2">
                                        <label class="mtop10">UOM</label>
                                        <div class="relative">
                                            <input type="text" class="form-control" maxlength="500" id="txt_ResProdUOM" disabled />
                                        </div>
                                    </div>

                                </div>
                                <div class="row">
                                    <div class="col-sm-2">
                                        <label class="mtop10">Price</label>
                                        <div class="relative">
                                            @*<input type="text" class="form-control" maxlength="500" id="txt_ResProdPrice" />*@
                                            @Html.DevExpress().TextBoxFor(m => m.ResPrice,
                                        settings =>
                                        {
                                            settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                                            settings.Properties.ClientInstanceName = "cResProductPrice";
                                            settings.Properties.MaskSettings.Mask = "<0..999999999>.<00..99>";
                                            settings.ControlStyle.CssClass = "DEvInput";
                                            settings.Properties.ClientSideEvents.LostFocus = "function(s,e){EstimateResourceGridSetAmount(s,e);}";
                                        }).GetHtml()
                                        </div>
                                    </div>
                                    <div class="col-sm-1">
                                        <label class="mtop10">Discount(%)</label>
                                        <div class="relative">
                                            @*<input type="text" class="form-control" maxlength="500" id="txt_ResProdDiscount" />*@
                                            @Html.DevExpress().TextBoxFor(m => m.ResDiscount,
                                        settings =>
                                        {
                                            settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                                            settings.Properties.ClientInstanceName = "cResProductDiscount";
                                            settings.Properties.MaskSettings.Mask = "<0..999999999>.<00..99>";
                                            settings.ControlStyle.CssClass = "DEvInput";
                                            settings.Properties.ClientSideEvents.LostFocus = "function(s,e){EstimateResourceDiscount(s,e);}";
                                        }).GetHtml()
                                        </div>
                                    </div>
                                    <div class="col-sm-2">
                                        <label class="mtop10">Amount</label>
                                        <div class="relative">
                                            @*<input type="text" class="form-control" maxlength="500" id="txt_ResProdAmount" />*@
                                            @Html.DevExpress().TextBoxFor(m => m.ResAmount,
                                        settings =>
                                        {
                                            settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                                            settings.Properties.ClientInstanceName = "cResProductAmount";
                                            settings.Properties.MaskSettings.Mask = "<0..999999999>.<00..99>";
                                            settings.Properties.ClientSideEvents.LostFocus = "function(s,e){EstimateGridResourceSetTotalAmount(s,e);}";
                                            settings.ControlStyle.CssClass = "DEvInput";
                                            settings.ClientEnabled = false;
                                        }).GetHtml()
                                        </div>
                                    </div>
                                    <div class="col-sm-1">
                                        <label class="mtop10">Tax Type</label>
                                        <div class="relative">
                                            <select id="ddlTaxTypelistResource" class="form-control" onchange="SetRescTaxTypeInGrid()">
                                                <option value="">Select</option>
                                                <option value="1">SGST + CGST / UTGST</option>
                                                <option value="2">IGST</option>
                                                <option value="3">Others</option>
                                            </select>
                                        </div>
                                    </div>
                                    <div class="col-sm-2">
                                        <label class="mtop10">Charges</label>
                                        <div class="relative">
                                            @*<input type="text" class="form-control" maxlength="500" id="txt_ResProdCharges" />*@
                                            @Html.DevExpress().TextBoxFor(m => m.ResCharges,
                                        settings =>
                                        {
                                            settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                                            settings.Properties.ClientInstanceName = "cResProductCharges";
                                            settings.Properties.MaskSettings.Mask = "<0..999999999>.<00..99>";
                                            settings.ControlStyle.CssClass = "DEvInput";
                                            settings.ClientEnabled = false;
                                        }).GetHtml()
                                        </div>
                                    </div>
                                    <div class="col-sm-2">
                                        <label class="mtop10">Net Amount</label>
                                        <div class="relative">
                                            @*<input type="text" class="form-control" maxlength="500" id="txt_ResProdNetAmount" />*@
                                            @Html.DevExpress().TextBoxFor(m => m.ResNetAmount,
                                        settings =>
                                        {
                                            settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                                            settings.Properties.ClientInstanceName = "cResProductNetAmount";
                                            settings.Properties.MaskSettings.Mask = "<0..999999999>.<00..99>";
                                            settings.ControlStyle.CssClass = "DEvInput";
                                            settings.ClientEnabled = false;
                                        }).GetHtml()
                                        </div>
                                    </div>
                                    <div class="col-sm-2">
                                        <label class="mtop10">Budg. Price</label>
                                        <div class="relative">
                                            @*<input type="text" class="form-control" maxlength="500" id="txt_ResProdBudgetedPrice" />*@
                                            @Html.DevExpress().TextBoxFor(m => m.ResBudgetedPrice,
                                        settings =>
                                        {
                                            settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                                            settings.Properties.ClientInstanceName = "cResProductBudgetedPrice";
                                            settings.Properties.MaskSettings.Mask = "<0..999999999>.<00..99>";
                                            settings.ControlStyle.CssClass = "DEvInput";
                                        }).GetHtml()
                                        </div>
                                    </div>

                                </div>
                                <div class="row">
                                    <div class="col-sm-3">
                                        <label class="mtop10">Remarks</label>
                                        <div class="relative">
                                            <textarea rows="2" class="form-control" maxlength="500" id="txt_ResAddlRemarks" style="resize:none"></textarea>
                                        </div>
                                    </div>
                                    <div class=" col-sm-2">
                                        <label class="mtop10">Sellable </label>
                                        <div class="relative">
                                            @Html.DevExpress().ButtonEdit(
                                        settings =>
                                        {
                                            settings.Name = "btnResSellable";
                                            settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                                            settings.Text = Model.ResSellable;
                                            settings.ReadOnly = true;
                                            settings.Properties.Buttons.Add("...");
                                            settings.Properties.ClientSideEvents.ButtonClick = "function(s,e){OpenResSellableProductList(s,e);}";
                                            settings.Properties.ClientSideEvents.KeyDown = "function(s,e){ResSellableProductKeyDown(s,e);}";

                                        }).GetHtml()
                                            <input type="hidden" id="hdnResSellableProductID" />
                                        </div>
                                    </div>

                                    <div class="col-sm-1" style="display:none">
                                        <label class="mtop10">ResBalQty</label>
                                        <div class="relative">
                                            <input type="number" class="form-control" id="ResBalQty" disabled />
                                        </div>
                                    </div>
                                    <div class="col-sm-1" style="display:none">
                                        <label class="mtop10">ResProductDetailsID</label>
                                        <div class="relative">
                                            <input type="number" class="form-control" id="ResProductDetailsID" disabled />
                                        </div>
                                    </div>


                                    <div class=" col-sm-1">
                                        <label class="mtop10">&nbsp; </label>
                                        <div class="relative">
                                            <input type="button" id="btnResAdd" onclick="btnResAdd_ProductClick()" class="btn btn-success" value="Add Resources" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <br />
                            @{
                                Html.RenderAction("GetEstimateResources", "Estimate");
                            }
                        </div>
                    </div>
                    <div class="clearfix footrGrider">

                        <div class="ttAMt tw hide">
                            <table>
                                <tr>
                                    <td><label>Total Amount</label></td>
                                    <td><input type="text" class="form-control text-right" id="txtGridResourcesTotalAmount" style=" width: 132px;" placeholder="0.00" disabled /></td>
                                </tr>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="">
            <div class="clearfix">
                <div class="inline-block addResourceBtn mRight5" id="showResources"><div class="addEdcircleBtn"><i class="fa fa-plus"></i></div><span>Add <span><u>R</u></span>esources</span></div>
                @*<div class="inline-block addResourceBtn themeColor mRight5" id="btnSaveandNew" onclick="EstimateSave('New');"><div class="addEdcircleBtn" id=""><i class="fa fa-floppy-o"></i></div><span>Save and <span><u>N</u></span>ew</span></div>*@
                <div class="inline-block addResourceBtn themeColor " id="btnSaveandExit" onclick="EstimateSave('Exit');"><div class="addEdcircleBtn" id=""><i class="fa fa-reply"></i></div><span>Save and <span><u>E</u></span>xit</span></div>



                <div class="inline-block pull-right">

                    @*<div class="inline-block mTop5">
                            <label class="stLbl ">Actual Additional Cost</label>
                            <div>
                                <input type="text" value="@Model.ActualAdditionalCost" placeholder="0.00" id="txtActualAdditionalCost" maxlength="12" class="form-control decimalCheck" onchange="ChkMoneyDigitCount(this);" onkeypress="return validateFloatKeyPress(this,event);" />
                            </div>
                        </div>*@
                </div>
            </div>
            <div class="">
            </div>
        </div>

    </div>
</div>
<!-- Product List -->
<div class="modal fade" id="ProductlistModel" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" onclick="SetFocusQty();">&times;</button>
                <h4 class="modal-title">Select Product</h4>
            </div>
            <div class="modal-body">
                <input type="text" onkeydown="ProductListkeydown(event)" id="txtProductName" autofocus width="100%" placeholder="Search By Product Name or Short Name" />
                <div id="ProductTable">
                    <table border='1' width="100%" class="dynamicPopupTbl">
                        <tbody>
                            <tr class="HeaderStyle">
                                <th class="hide">id</th>
                                <th>Product Code</th>
                                <th>Product Name</th>
                                <th>UOM</th>
                                <th>Inventory</th>
                                <th>HSN/SAC</th>
                                <th>Class</th>
                                <th>Brand</th>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal" onclick="SetFocusQty();">Close</button>
            </div>
        </div>
    </div>
</div>
<!-- Product List-->
<!-- Grid Product List -->
<div class="modal fade" id="GridProductlistModel" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Select Product</h4>
            </div>
            <div class="modal-body">
                <input type="text" onkeydown="GridProductListkeydown(event)" id="txtGridProductName" autofocus width="100%" placeholder="Search By Product Name or Short Name" />
                <div id="GridProductTable">
                    <table border='1' width="100%" class="dynamicPopupTbl">
                        <tr class="HeaderStyle">
                            <th class="hide">id</th>
                            <th>Product Code</th>
                            <th>Product Name</th>
                            <th>UOM</th>
                            <th>Inventory</th>
                            <th>HSN/SAC</th>
                            <th>Class</th>
                            <th>Brand</th>
                        </tr>
                    </table>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal" onclick="SetFocusDesc()">Close</button>
            </div>
        </div>
    </div>
</div>
<!-- Grid Product List-->
<!-- Grid Warehouse List -->
<div class="modal fade pmsModal w30" id="GridWarehouselistModel" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" onclick="SetWarehouseAfterProduct()">&times;</button>
                <h4 class="modal-title">Select Warehouse</h4>
            </div>
            <div class="modal-body">
                <div id="slcWarehouse">
                    <select id="ddlWarehouselist" class="form-control"></select>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-success btn-radius" id="setWarehousegrid" onclick="SetWarehouseInGrid()">Ok</button>
            </div>
        </div>
    </div>
</div>
<!-- Grid Product List-->
<!-- Grid Estimate List -->
<div class="modal fade" id="GridEstimatelistModel" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Select Estimate</h4>
            </div>
            <div class="modal-body">
                <input type="text" onkeydown="GridEstimateListkeydown(event)" id="txtEstimateName" autofocus width="100%" placeholder="Search By Estimate Name" />
                <div id="GridEstimateTable">
                    <table border='1' width="100%" class="dynamicPopupTbl">
                        <tr class="HeaderStyle">
                            <th class="hide">id</th>
                            <th>Estimate No.</th>
                            <th>Estimate Date</th>
                            <th>Revision No.</th>
                            <th>Revision Date</th>
                        </tr>
                    </table>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-success btn-radius" data-dismiss="modal" onclick="SetEstimateFocusGrid()">Close</button>
            </div>
        </div>
    </div>
</div>
<!-- Grid Estimate List-->
<!-- Proposal List -->
<div class="modal fade" id="ProposallistModel" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" onclick="SetFocusQty();">&times;</button>
                <h4 class="modal-title">Select Proposal</h4>
            </div>
            <div class="modal-body">
                <input type="text" onkeydown="ProposalListkeydown(event)" id="txtProposalName" autofocus width="100%" placeholder="Search By Proposal No." />
                <div id="ProposalTable">
                    <table border='1' width="100%" class="dynamicPopupTbl">
                        <tbody>
                            <tr class="HeaderStyle">
                                <th class="hide">id</th>
                                <th>Proposal NO</th>
                                <th>Proposal Date</th>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal" onclick="SetFocusQty();">Close</button>
            </div>
        </div>
    </div>
</div>
<!-- Proposal List-->
<!-- Quotation List -->
<div class="modal fade" id="QuotationlistModel" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" onclick="SetFocusQty();">&times;</button>
                <h4 class="modal-title">Select Quotation</h4>
            </div>
            <div class="modal-body">
                <input type="text" onkeydown="QuotationListkeydown(event)" id="txtQuotationName" autofocus width="100%" placeholder="Search By Quotation No." />
                <div id="QuotationTable">
                    <table border='1' width="100%" class="dynamicPopupTbl">
                        <tbody>
                            <tr class="HeaderStyle">
                                <th class="hide">id</th>
                                <th>Quotation NO</th>
                                <th>Quotation Date</th>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal" onclick="SetFocusQty();">Close</button>
            </div>
        </div>
    </div>
</div>
<!-- Quotation List-->
<!--Customer List-->
<div class="modal fade" id="CustModel" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Customer Search</h4>
            </div>
            <div class="modal-body">
                <input type="text" onkeydown="Customerkeydown(event)" id="txtCustSearch" autofocus width="100%" placeholder="Search By Customer Name or Unique Id" />
                <div id="CustomerTable">
                    <table border='1' width="100%" class="dynamicPopupTbl">
                        <tr class="HeaderStyle">
                            <th class="hide">id</th>
                            <th>Name</th>
                            <th>Unique Id</th>
                            <th>Address</th>
                        </tr>
                    </table>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>
<!--Customer List-->
<!-- Grid Tax Type List -->
<div class="modal fade pmsModal w30" id="GridTaxTypelistModel" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" onclick="SetTaxTypeAfterProduct()">&times;</button>
                <h4 class="modal-title">Select Tax Type</h4>
            </div>
            <div class="modal-body">
                <div id="slcWarehouse">
                    <select id="ddlTaxTypelist" class="form-control">
                        <option value="1">SGST + CGST / UTGST</option>
                        <option value="2">IGST</option>
                        <option value="3">Others</option>
                    </select>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-success btn-radius" id="setTaxTypeid" onclick="SetTaxTypeInGrid()">Ok</button>
            </div>
        </div>
    </div>
</div>
<!-- Grid Tax Type List-->
<!-- Grid Resource Tax Type List -->
<div class="modal fade pmsModal w30" id="RescTaxTypelistModel" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" onclick="SetRescTaxTypeAfterProduct()">&times;</button>
                <h4 class="modal-title">Select Tax Type</h4>
            </div>
            <div class="modal-body">
                <div id="slcWarehouse">
                    <select id="ddlRescTaxTypelist" class="form-control">
                        <option value="1">SGST + CGST / UTGST</option>
                        <option value="2">IGST</option>
                        <option value="3">Others</option>
                    </select>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-success btn-radius" id="setRescTaxTypeid" onclick="SetRescTaxTypeInGrid()">Ok</button>
            </div>
        </div>
    </div>
</div>
<!-- Grid Resource Tax Type List-->
<!-- Grid Additional Description -->
<div class="modal fade pmsModal w30" id="GridAddlDescModel" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" onclick="SetAddlDescClose()">&times;</button>
                <h4 class="modal-title">Additional Description</h4>
            </div>
            <div class="modal-body">
                <div id="slcWarehouse">
                    <textarea rows="5" placeholder="Additional Description" class="form-control" maxlength="5000" id="txt_AddlDesc"></textarea>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-success btn-radius" id="setTaxTypeid" onclick="SetProdAddlDescGrid()">Ok</button>
            </div>
        </div>
    </div>
</div>
<!-- Grid Additional Description-->
<!-- Grid Resource Additional Description -->
<div class="modal fade pmsModal w30" id="GridResAddlDescModel" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" onclick="SetResAddlDescClose()">&times;</button>
                <h4 class="modal-title">Additional Description</h4>
            </div>
            <div class="modal-body">
                <div id="slcWarehouse">
                    <textarea rows="5" placeholder="Additional Description" class="form-control" maxlength="5000" id="txt_ResAddlDesc"></textarea>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-success btn-radius" id="setTaxTypeid" onclick="SetResAddlDescGrid()">Ok</button>
            </div>
        </div>
    </div>
</div>
<!-- Grid Resource Additional Description-->

<script>
    $(document).ready(function () {
        //LoadingPanel.Show();
        ProjectLookupValChange()
        var hdnDetailsID = $('#hdnDetailsID').val();
        if (hdnDetailsID == "") {
            $('#ddlSchema').focus();
        }
        setTimeout(function () {
            LoadingPanel.Hide();
        }, 1500);
    });
</script>

@Html.DevExpress().LoadingPanel(
    settings =>
    {
        settings.Name = "LoadingPanel";
        settings.Modal = true;
        settings.ContainerElementID = "dvStep3";
    }
).GetHtml()