@using System.Web.UI.WebControls
@using DevExpress.Web.Mvc
@using DevExpress.Web
@model List<BusinessLogicLayer.AttachmentViewModel>



<script>

    var filenames = [];
    function SaveAttachment() {
        var process = 0;
        var documentType = $('#documentType option:selected').val();
        var docNumber = $('#docNumber').val();
        var docFileName = $('#docFileName').val();
        var docDate = GetSystemDateFormat(docDate_dt.GetDate());
        var remarks = $('#txtremarks').val();
        var module = $('#hdnModule').val();
        var docno = $('#hdnDocNo').val();
        var hdndoc_id = $('#hdndoc_id').val();

        var fileUploadCheck = $("#documentFile").get(0);

        for (var i = 0; i < $('#documentFile').get(0).files.length; ++i) {
            filenames.push($('#documentFile').get(0).files[i].name);
        }

        if (documentType == "" || documentType == undefined) {
            $('#EdocumentType').show();
            process = 1;
        }
        else {
            $('#EdocumentType').hide();
        }



        if (fileUploadCheck.files.length == 0) {
            $('#EdocumentFile').show();
            process = 1;
        }
        else {
            $('#EdocumentFile').hide();
        }

        if (filenames.length == 0) {
            $('#EdocFileName').show();
            process = 1;
        }
        else {
            $('#EdocFileName').hide();
        }

        if (process == 0) {
            if (module != null && module != "" && docno != null && docno != "") {
                if (window.FormData !== undefined) {
                    var fileUpload = $("#documentFile").get(0);
                    var files = fileUpload.files;
                    var fileData = new FormData();

                    for (var i = 0; i < files.length; i++) {
                        fileData.append(files[i].name, files[i]);
                    }

                    fileData.append('doc_id', hdndoc_id);
                    fileData.append('module', module);
                    fileData.append('docno', docno);
                    fileData.append('documentType', documentType);
                    fileData.append('docNumber', docNumber);
                    fileData.append('docFileName', docFileName);
                    fileData.append('docDate', docDate);
                    fileData.append('remarks', remarks);

                    $.ajax({
                        type: "POST",
                        url: $('#hdnAttachmentAddUpdate').val(),
                        contentType: false,
                        processData: false,
                        data: fileData,
                        success: function (response) {

                            if (response) {
                                $('#AttachmentModal').modal('hide');
                                jAlert("Documents Added Successfully!");

                                $('#documentType').val($("#documentType option:first").val());
                                $('#docNumber').val('');
                                $('#docFileName').val('');
                                docDate_dt.SetDate(new Date());
                                $('#txtremarks').val('');
                            }
                            else {
                                jAlert("Upload failed!");
                            }
                        }
                    });
                } else {
                    jAlert("Please try again later!");
                }
            }
            else {
                jAlert("Please try again later!");
            }
        }

    }

    $("input[name=documentFile]").change(function () {
        for (var i = 0; i < $(this).get(0).files.length; ++i) {
            filenames.push($(this).get(0).files[i].name);
        }
    });

    function GetSystemDateFormat(today) {
        if (today != "" && today != null) {
            var dd = today.getDate();
            var mm = today.getMonth() + 1;
            var yyyy = today.getFullYear();

            if (dd < 10) {
                dd = '0' + dd;
            }
            if (mm < 10) {
                mm = '0' + mm;
            }
            today = yyyy + '-' + mm + '-' + dd;
        }
        else {
            today = "";
        }

        return today;
    }

    $(function () {
        $('#AttachmentModal').on('shown.bs.modal', function (e) {
            CancelAttachment();
            var hdnDocNo = $('#hdnDocNo').val();
            var hdnModule = $('#hdnModule').val();

            var url = '@Url.Action("GetAttachmentDocumentList", "CRMAttachment")?' + 'module=_module_&DocNo=_docno_';
            url = url.replace("_module_", hdnModule);
            url = url.replace("_docno_", hdnDocNo);

            $('#attachmentrefreshgrid').load(url);
            gridAttachmentList.Refresh();
            gridAttachmentList.Refresh();
        });


    });

    function OpenAttachmentData(doc_id) {
        if (parseInt(doc_id) > 0) {
            $.ajax({
                type: "POST",
                url: "@Url.Action("GetData", "CRMAttachment")",
                data: { doc_id: doc_id },
                success: function (response) {
                    if (response != null) {

                        $('#documentType').val(response.doc_documentTypeId);
                        $('#docNumber').val(response.doc_FileNo);
                        $('#docFileName').val(response.doc_documentName);

                        $('#txtremarks').val(response.doc_Note1);
                        $('#hdndoc_id').val(doc_id);
                        $('#aViewDoc').show();
                        $('#aViewDoc').attr("href", response.doc_source);
                        var date = new Date(response.doc_receivedate.replace(/(\d{2})-(\d{2})-(\d{4})/, "$2/$1/$3"))
                        docDate_dt.SetDate(date);
                        $('#documentFile').val('');
                    }
                    else {
                        $('#aViewDoc').hide();
                        jAlert('Please try again later.');
                        return false;
                    }
                }
            });
        }
    }


    function RemoveAttachmentData(doc_id) {
        if (parseInt(doc_id) > 0) {
            jConfirm('Are you sure to delete?', 'Alert!', function (r) {
                if (r) {
                    $.ajax({
                        type: "POST",
                        url: "@Url.Action("RemoveData", "CRMAttachment")",
                        data: { doc_id: doc_id },
                        success: function (response) {
                            if (response != null && response == true) {
                                jAlert("Document Deleted Successfully!");

                                CancelAttachment();
                                var hdnDocNo = $('#hdnDocNo').val();
                                var hdnModule = $('#hdnModule').val();

                                var url = '@Url.Action("GetAttachmentDocumentList", "CRMAttachment")?' + 'module=_module_&DocNo=_docno_';
                                url = url.replace("_module_", hdnModule);
                                url = url.replace("_docno_", hdnDocNo);

                                $('#attachmentrefreshgrid').load(url);
                                gridAttachmentList.Refresh();
                                gridAttachmentList.Refresh();
                            }
                            else {
                                $('#aViewDoc').hide();
                                jAlert('Please try again later.');
                                return false;
                            }
                        }
                    });
                }
            });
        }
    }
    function gridAttachmentListBeginCallback(s, e) {
        e.customArgs["module"] = $('#hdnModule').val();
        e.customArgs["DocNo"] = $('#hdnDocNo').val();
    }


    function CancelAttachment() {
        $('#documentType').val($("#documentType option:first").val());
        //$('#docNumber').val('');
        //$('#docFileName').val('');

        $('#txtremarks').val('');
        $('#hdndoc_id').val(0);
        docDate_dt.SetDate(new Date());
        $('#aViewDoc').hide();
        $('#EdocumentType').hide();
        $('#documentFile').val('');
        $('#EdocumentFile').hide();
        $('#EdocFileName').hide();
    }

    function ViewAttachment(url) {
        $('#AttachmentFilesModal').modal('show');

        var extension = url.substr((url.lastIndexOf('.') + 1)).toLowerCase();
        switch (extension) {
            case 'pdf':
                $('#pdfview').attr('data', url);
                $('#imageview').hide();
                $('#pdfview').show();
                break;
            case 'jpg':
            case 'png':
            case 'gif':
            case 'jpeg':
                $('#imageview').attr('src', url);
                $('#pdfview').hide();
                $('#imageview').show();
                break;
            default:
                $('#AttachmentFilesModal').modal('hide');
                window.open(
                   url,
                  '_blank'
                );
        }


    }

    function attachmentcmbExport_SelectedIndexChanged() {
        var attachmentexportlist = $('#attachmentexportlist option:selected').val();
        $('#attachmentexportlist').val(0);
        if (gridAttachmentList.GetVisibleRowsOnPage() > 0) {
            if (attachmentexportlist > 0) {
                var url = '@Url.Action("ExportAttachmentList", "CRMAttachment", new { type = "_type_" })'
                window.location.href = url.replace("_type_", attachmentexportlist);
            }
        }
        else {
            jAlert("No attachment available!");
            return false;
        }
    }

    function SetDocNameNumber() {
        var hdnDocNo = $('#hdnDocNo').val();
        var hdnModule = $('#hdnModule').val();
        $.ajax({
            type: "POST",
            //url: "Url.Action("GetEmployeesTargetByCode", "EmployeesTarget")",
            url: "@Url.Action("doAddMembers", "CRMMembers")",
            data: { Module_Name: hdnModule, Module_id: hdnDocNo },
            success: function (response) {
                CRMpcControl.SetContentHtml(response);
                MVCxClientUtils.FinalizeCallback();
                CRMpcControl.SetHeaderText('Members');

                CRMpcControl.Show();


            }
        });


    }


</script>
<style>
    #documentFile {
        width: 100%;
    }

    .mandat {
        right: -17px;
        top: 3px;
    }

    .mandatfile {
        right: 6px;
        top: 5px;
    }

    .ui-widget.ui-widget-content {
        z-index: 1200;
    }

    .pdfViewerWrap object {
        width: 100%;
    }

    .imageViewerWrap > img {
        max-width: 100%;
    }

    .infoSize {
        color: red;
        font-size: 11px;
    }
</style>
<!-- Attachment Modal -->
<div class="modal fade" id="AttachmentModal" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Literature</h4>
            </div>
            <div class="modal-body" id="AttachmentDocBody">

                <input type="hidden" value="@ViewBag.Module" id="hdnModule" />
                <input type="hidden" value="@ViewBag.DocNo" id="hdnDocNo" />
                <input type="hidden" value="@Url.Action("AttachmentDocumentAddUpdate", "CRMAttachment")" id="hdnAttachmentAddUpdate" />
                <input type="hidden" value="0" id="hdndoc_id" />

                <div class="row">
                    <div class="col-md-2">
                        <label>Document Type</label>
                        <div class="relative">
                            @Html.DropDownList("documentType", new SelectList(Model, "id", "Type"), new { @class = "form-control" })
                            @*@Html.DropDownListFor(x => x.Unit, new SelectList(Model.UnitList, "BranchID", "BankBranchName"), new { @id = "ddlBankBranch", @class = "form-control", @onchange = "PopulateWareHouseData();", @disabled = "disabled" })*@

                            <span id="EdocumentType" class="mandat fa fa-exclamation-circle iconRed " style="color: red; position: absolute; display: none" title="Mandatory"></span>
                        </div>
                    </div>
                    <div class="col-md-2">
                        <label>Number</label>
                        <input type="text" value="" id="docNumber" class="form-control" />

                    </div>

                    <div class="col-md-2">
                        <label>Document Name</label>
                        <div class="relative">
                            <input type="text" value="" id="docFileName" class="form-control" />
                            <span id="EdocFileName" class="mandat fa fa-exclamation-circle iconRed " style="color: red; position: absolute; display: none" title="Mandatory"></span>
                        </div>
                    </div>
                    <div class="col-md-2">
                        <label>Attachement Date</label>
                        @Html.DevExpress().DateEdit(
                                     settings =>
                                     {
                                         settings.Name = "docDate_dt";
                                         settings.Properties.DisplayFormatString = "dd-MM-yyyy";
                                         settings.Properties.EditFormatString = "dd-MM-yyyy";
                                         settings.Width = Unit.Percentage(100);
                                         settings.Date = DateTime.Now;

                                     }
                            ).GetHtml()


                    </div>
                    <div class="col-md-4">
                        <label>Attachment Document</label>
                        <div class="relative">
                            <input type="file" class="form_control" id="documentFile" name="documentFile" multiple="multiple" />

                            <span id="EdocumentFile" class="mandatfile  fa fa-exclamation-circle iconRed " style="color: red; position: absolute; display: none" title="Mandatory"></span>

                            <div class="clearfix">
                                <a target="_blank" href="(0)" class="pull-right" id="aViewDoc" style="display:none;">View Document</a>
                                <span class="infoSize">Max File Size : 15MB</span>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row">

                    <div class="col-lg-12">
                        <label>Remarks</label>
                        <textarea class="form-control" id="txtremarks" rows="4"></textarea>
                    </div>
                </div>

                <div class="row">
                    <div class="col-lg-12 clearfix">
                        <button type="button" onclick="SaveAttachment()" class="btn btn-success btn-radius">Save</button>
                        <button type="button" onclick="CancelAttachment()" class="btn btn-danger btn-radius">Cancel</button>

                        <select id="attachmentexportlist" class="btn btn-primary pull-right btn-radius" onchange="attachmentcmbExport_SelectedIndexChanged()">
                            <option value="0">Export to</option>
                            <option value="1">PDF</option>
                            <option value="2">XLSX</option>
                            <option value="3">RTF</option>
                            <option value="4">CSV</option>
                        </select>
                    </div>
                </div>


                <div class="md-pull-left">

                </div>

                
                <div id="attachmentrefreshgrid">
                    @{
                        Html.RenderAction("GetAttachmentDocumentList", "CRMAttachment", new { module = ViewBag.Module, DocNo = ViewBag.DocNo });
                    }
                </div>



            </div>
        </div>
    </div>
</div>
<!-- Attachment Modal-->


<div class="modal fade" id="AttachmentFilesModal" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content" id="">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">View Document</h4>
            </div>
            <div class="modal-body" id="attachmentbody">
                @*<embed src="pdfFiles/interfaces.pdf" id="pdfview" width="600" height="500" alt="pdf" pluginspage="">*@
                <div class="pdfViewerWrap">
                    <object data="" type="application/pdf" id="pdfview" height="600"></object>
                </div>

                <div class="imageViewerWrap text-center">
                    <img src="" alt="Image no found" id="imageview">
                </div>


            </div>
        </div>
    </div>
</div>
