@using System.Web.UI.WebControls
@using DevExpress.Web.Mvc
@using DevExpress.Web
@model PMS.Models.ViewModel.ProjectViewModel

@{
    ViewBag.Title = "Project";
}
<script src="~/assests/js/PMS/SearchPopup.js"></script>
<link href="~/assests/js/PMS/SearchPopup.css" rel="stylesheet" />
@*<script src="~/assests/js/SearchPopup.js"></script>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery.mask/1.14.10/jquery.mask.js"></script>
    <script src="/Views/PMS/JS/jquery.mask.min.js"></script>*@

@*<link href="~/assests/css/custom/SearchPopup.css" rel="stylesheet" />*@

<style>

    .mutiFMbox {
        padding: 3px 15px 15px 15px;
    }

    .widgetizeForm > li .parentLabel:after {
        border-radius: 50% !important;
    }

    .widgetizeForm > li.on .parentLabel:after {
        background: #3bbf39;
        display: block;
        box-shadow: 0 0 0 3px #fff, 0 0 0 6px #ff9f3b;
    }

    .widgetizeForm > li:not(:first-child).on .parentLabel:before {
        background: #4dc1a1;
    }

    .Projectmodaltype .modal-dialog {
        margin-top: 5px !important;
    }

    .fixedMenuNew {
        z-index: 5 !important;
    }

    .dxeButtonEditButton_PlasticBlue.dxeButtonDisabled_PlasticBlue {
        opacity: 0.4;
    }

</style>
@*<script src="~/Views/Project/project.js?v1.0.1"></script>*@

<script>

    var ProjectCodeCheck = {};
    var ProcjectClose = {};
    var ProjectstatusForTransaction = {};
    var projectCode = [];
    var MapBranch_id = [];
    $(function () {
        $('#Proj_EstimatelabourCost').on('input', function () {
            this.value = this.value
              .replace(/[^\d.]/g, '')             // numbers and decimals only
              .replace(/(^[\d]{9})[\d]/g, '$1')   // not more than 2 digits at the beginning
              .replace(/(\..*)\./g, '$1')         // decimal can't exist more than once
              .replace(/(\.[\d]{2})./g, '$1');    // not more than 4 digits after decimal
        });
    });
    $(function () {
        $('#Proj_EstimateExpenseCost').on('input', function () {
            this.value = this.value
              .replace(/[^\d.]/g, '')             // numbers and decimals only
              .replace(/(^[\d]{9})[\d]/g, '$1')   // not more than 2 digits at the beginning
              .replace(/(\..*)\./g, '$1')         // decimal can't exist more than once
              .replace(/(\.[\d]{2})./g, '$1');    // not more than 4 digits after decimal
        });
    });
    $(function () {
        $('#proj_EstimateTotCost').on('input', function () {
            this.value = this.value
              .replace(/[^\d.]/g, '')             // numbers and decimals only
              .replace(/(^[\d]{9})[\d]/g, '$1')   // not more than 2 digits at the beginning
              .replace(/(\..*)\./g, '$1')         // decimal can't exist more than once
              .replace(/(\.[\d]{2})./g, '$1');    // not more than 4 digits after decimal
        });
    });
    $(function () {
        gridProjectList.Refresh();
        gridProjectList.Refresh();
        $('#ddlAppIds').on('change', function () {
            if ($("#ddlAppIds option:selected").index() > 0) {
                var selectedValue = $(this).val();
                $('#ddlAppIds').prop("selectedIndex", 0);
                var url = '@Url.Action("ExportProjectlist", "Project", new { type = "_type_" })'
                window.location.href = url.replace("_type_", selectedValue);
            }
        });
    });

    $(function () {
        $('#Terms_LiqDamage').on('input', function () {
            this.value = this.value
              .replace(/[^\d.]/g, '')             // numbers and decimals only
              .replace(/(^[\d]{9})[\d]/g, '$1')   // not more than 2 digits at the beginning
              .replace(/(\..*)\./g, '$1')         // decimal can't exist more than once
              .replace(/(\.[\d]{2})./g, '$1');    // not more than 4 digits after decimal
        });
    });


    $(function () {
        $('#BG_Percentage').on('input', function () {
            this.value = this.value
              .replace(/[^\d.]/g, '')             // numbers and decimals only
              .replace(/(^[\d]{9})[\d]/g, '$1')   // not more than 2 digits at the beginning
              .replace(/(\..*)\./g, '$1')         // decimal can't exist more than once
              .replace(/(\.[\d]{2})./g, '$1');    // not more than 4 digits after decimal
        });
    });

    $(function () {
        $('#BG_BGValue').on('input', function () {
            this.value = this.value
              .replace(/[^\d.]/g, '')             // numbers and decimals only
              .replace(/(^[\d]{9})[\d]/g, '$1')   // not more than 2 digits at the beginning
              .replace(/(\..*)\./g, '$1')         // decimal can't exist more than once
              .replace(/(\.[\d]{2})./g, '$1');    // not more than 4 digits after decimal
        });
    });

    function OnStartCallback(s, e) {


    }

    function OnStartTermsConitionsCallback(s, e) {

        //TermsConitionsPartial.Refresh();
    }



    function AddcustomerClick() {

        var url = '/OMS/management/Master/customerPopup.html?var=1.1.3.13';

        AspxDirectAddCustPopup.SetContentUrl(url);

        AspxDirectAddCustPopup.RefreshContentUrl();
        AspxDirectAddCustPopup.Show();
    }

    function ParentCustomerOnClose(InternalID, CustomerName, UniqueName) {
        AspxDirectAddCustPopup.Hide();

        $("#CustomerId").val(InternalID);
        ctxtShipToPartyShippingAdd.SetText('');
        if (InternalID != "") {
            CustomerTxt.SetText(CustomerName);
            SetCustomer(InternalID, CustomerName);
        }

    }


    function ProjectSelectionChanged(s, e) {
        ProjectGridLookup.gridView.GetSelectedFieldValues("OrderId", GetProjectSelectedFieldValuesCallback);
    }
    function BranchSelectionChanged(s, e) {
        BranchGridLookup.gridView.GetSelectedFieldValues("Br_id", GetBranchSelectedFieldValuesCallback);
    }
    function GetProjectSelectedFieldValuesCallback(values) {
        try {
            projectCode = [];
            for (var i = 0; i < values.length; i++) {
                projectCode.push(values[i]);
            }
        } finally {
            console.log(projectCode);
        }
    }
    function GetBranchSelectedFieldValuesCallback(values) {
        try {
            MapBranch_id = [];
            for (var i = 0; i < values.length; i++) {
                MapBranch_id.push(values[i]);
            }
        } finally {
            console.log(MapBranch_id);
        }
    }

    function ProjectStartCallback(s, e) {
        e.customArgs["Cnt_InternalId"] = $("#CustomerId").val();
        e.customArgs["Proj_Bracnchid"] = $("#ddlBranch").val();
        e.customArgs["Proj_Id"] = $("#ProjId").val();
    }
    function BranchStartCallback(s, e) {
        e.customArgs["Cnt_InternalId"] = $("#CustomerId").val();
        //e.customArgs["Proj_Bracnchid"] = $("#ddlBranch").val();
        //e.customArgs["Proj_Id"] = $("#ProjId").val();
    }

    function ProjectLookupValChange() {
        ProjectGridLookup.GetGridView().Refresh();
    }

    function BranchLookupValChange() {
        BranchGridLookup.GetGridView().Refresh();
    }

    function selectchangeOfBranch() {
        var BranchId = $("#ddlNumbscheme").val().split('~')[3];
        $("#ddlBranch").val(BranchId);
        $("#ddlBranch").prop("disabled", true);
        if ($("#ddlNumbscheme").val().split('~')[1] != "0") {

            $("#Proj_Code").val("Auto");
            $("#Proj_Code").prop("disabled", true);
        }
        else {
            $("#Proj_Code").val("");
            $("#Proj_Code").prop("disabled", false);
        }
    }



    $(document).ready(function () {

        $("#openlink").on("click", function () {
            AddcustomerClick();
        });
        var ProjectTermsCondition = '@ViewBag.ProjectTermsCondition';

        var MultipleBranchProject = '@ViewBag.MultipleBranchProject';
        if (MultipleBranchProject != null && MultipleBranchProject != "" && MultipleBranchProject != "No" && MultipleBranchProject != "NO")
        {
            $('#drdUnit').hide();
            $('#BranchGridLookup').show();

        }
        else {
            $('#drdUnit').show();
            $('#BranchGridLookup').hide();

        }
        BranchGridLookup.SetEnabled(false);
        if (ProjectTermsCondition == "No") {
            $("#btn_TermsCondition").hide();
        }
        else
        {
            $("#btn_TermsCondition").show();
        }


        $('#CustModel').on('shown.bs.modal', function () {
            $('#txtCustSearch').trigger('focus')
        })


        $('#proj_EstimateTotCost').prop("disabled", true);

        gridProjectList.Refresh();
        gridProjectList.Refresh();


        //$('.percent').mask('##0,00%', { reverse: true });
    });
    function CheckuniqueCode() {
        debugger;
        var det = {};
        var Code = $("#Proj_Code").val();
        det.Code = Code;
        $.ajax({
            type: "POST",
            url: '@Url.Action("UniqueCodeCheck", "Project")',
            data: JSON.stringify(det),
            contentType: "application/json; charset=utf-8",
            datatype: "JSON",

            success: function (data) {

                var val = data;

                debugger;
                if (val == 1) {
                    jAlert("Already Exists");
                    $("#Proj_Code").val("");
                    $("#Proj_Code").focus();
                }

            },
            error: function (data) {

                jAlert("Please try again later");
            }
        });
    }

    function validateNumbers(el, evt) {
        var charCode = (evt.which) ? evt.which : event.keyCode;
        var number = el.value.split('.');

        //if ((moduleNameSTk == "Stock Adjustment" && charCode == 45)) {
        //    return true;
        //}
        //else {
        if (charCode != 46 && charCode > 31 && (charCode < 48 || charCode > 57)) {
            return false;
        }
        //just one dot (thanks ddlab)
        if (number.length > 1 && charCode == 46) {
            return false;
        }
        //get the carat position
        var caratPos = getSelectionStart(el);
        var dotPos = el.value.indexOf(".");
        if (caratPos > dotPos && dotPos > -1 && (number[1].length > 1)) {
            return false;
        }
        return true;
        //}
    }

    function CustomerButnClick(s, e) {

        var htmlScript = "<table border='1' width=\"100%\" class=\"dynamicPopupTbl\"><tr class=\"HeaderStyle\"><th class=\"hide\">id</th><th>Name</th><th>Unique Id</th><th>Address</th></tr>";

        document.getElementById('CustomerTable').innerHTML = htmlScript;
        $('#CustModel').modal('show');

    }

    function Customer_KeyDown(s, e) {
        if (e.htmlEvent.key == "Enter" || e.code == "NumpadEnter") {
            $('#CustModel').modal('show');
            $("#txtCustSearch").focus();
        }
    }
    function Customerkeydown(e) {
        var OtherDetails = {}

        if ($.trim($("#txtCustSearch").val()) == "" || $.trim($("#txtCustSearch").val()) == null) {
            return false;
        }
        OtherDetails.SearchKey = $("#txtCustSearch").val();
        // OtherDetails.BranchID = $('#ddl_Branch').val();

        if (e.code == "Enter" || e.code == "NumpadEnter") {
            var HeaderCaption = [];
            HeaderCaption.push("Name");
            HeaderCaption.push("Unique Id");
            HeaderCaption.push("Address");

            if ($("#txtCustSearch").val() != "") {

                callonServer("../Models/CustomAddress.asmx/GetCustomer", OtherDetails, "CustomerTable", HeaderCaption, "customerIndex", "SetCustomer");

            }
        }
        else if (e.code == "ArrowDown") {
            if ($("input[customerindex=0]"))
                $("input[customerindex=0]").focus();
        }
    }


    function SetCustomer(id, Name) {

        var key = id;
        $('#CustomerId').val(id)

        if (key != null && key != '') {
            $('#CustModel').modal('hide');
            // ClstContactBy.SetText(Name);
            //$("#CustomerTxt").val(Name);
            CustomerTxt.SetText(Name);
            CustomerTxt.SetFocus();

        }
    }

    function ValueSelected(e, indexName) {
        if (e.code == "Enter" || e.code == "NumpadEnter") {
            var Id = e.target.parentElement.parentElement.cells[0].innerText;
            var name = e.target.parentElement.parentElement.cells[1].children[0].value;
            if (Id) {
                if (indexName == "customerIndex") {
                    SetCustomer(Id, name);
                }
            }
        }
        else if (e.code == "ArrowDown") {
            thisindex = parseFloat(e.target.getAttribute(indexName));
            thisindex++;
            if (thisindex < 10)
                $("input[" + indexName + "=" + thisindex + "]").focus();
        }
        else if (e.code == "ArrowUp") {
            thisindex = parseFloat(e.target.getAttribute(indexName));
            thisindex--;
            if (thisindex > -1)
                $("input[" + indexName + "=" + thisindex + "]").focus();
            else {
                if (indexName == "customerIndex") {
                    $('#txtCustSearch').focus();
                }
            }
        }
    }

    function FinishClick() {

        ProcjectClose = "1";
    }

    function ProjectApproval(obj) {
        BranchGridLookup.gridView.Refresh();

        var MultipleBranchProject = '@ViewBag.MultipleBranchProject';
        if (MultipleBranchProject != null && MultipleBranchProject != "" && MultipleBranchProject != "No" && MultipleBranchProject != "NO") {

            $('#drdUnit').hide();
            $('#BranchGridLookup').show();
        }
        else {
            $('#drdUnit').show();
            $('#BranchGridLookup').hide();
        }
        BranchGridLookup.SetEnabled(false);
        var cancelProjectData = {};
        var cancelProjectResult = {};
        cancelProjectData.Code = obj;
        $.ajax({
            async: false,
            type: "POST",
            url: '@Url.Action("CancelProjectCheck", "Project")',
            data: JSON.stringify(cancelProjectData),
            contentType: "application/json; charset=utf-8",
            datatype: "JSON",

            success: function (data) {

                cancelProjectResult = data;


            },
            error: function (data) {

                jAlert("Please try again later");
            }
        });
        if (cancelProjectResult.split("~")[0] == "1" || cancelProjectResult.split("~")[1] == "Finish") {
            jAlert("Project cancelled/closed,Cannot approve data.");
        }


        else {
            document.getElementById("dvNumberscheme").style.display = "none";
            document.getElementById("exampleModalLabelForApproval").style.display = "block";
            document.getElementById("exampleModalLabelForAdd").style.display = "none";
            document.getElementById("exampleModalLabelForModify").style.display = "none";
            document.getElementById("exampleModalLabelForView").style.display = "none";
            document.getElementById("btnApproved").style.display = "inline-block";
            document.getElementById("btnReject").style.display = "inline-block";
            $("#btnSave").addClass('hide');
            $("#btncancel").addClass('hide');
            $("#btnApproved").removeClass('hide');
            $("#btnReject").removeClass('hide');
            $("#ProjId").val(obj);
            document.getElementById("dvApproval").style.display = "block";
            $("#projectMod").modal('toggle');

            $.ajax({
                type: "POST",
                url: '@Url.Action("ViewDataShow", "Project")',
                data: JSON.stringify({ Proj_Id: obj }),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (response) {
                    // LoadingPanel.Hide();
                    debugger;
                    var status = response;
                    var str = "";

                    if (status != null) {

                        $("#Proj_Name").val(status.Proj_Name);
                        $("#Proj_Description").val(status.Proj_Description);
                        $("#Proj_Code").val(status.Proj_Code);
                        $("#CustomerId").val(status.Cnt_InternalId);

                        $("#ddlBranch").val(status.Proj_Bracnchid);
                        $("#ddlPManager").val(status.Proj_Managerid);
                        $("#drdStatus").val(status.Proj_Statuscolor);
                        var startdt = new Date(parseInt(status.Proj_EstimateStartdate.substr(6)));
                        var Enddt = new Date(parseInt(status.Proj_EstimateEnddate.substr(6)));
                        CustomerTxt.SetText(status.Customer);
                        StartDate_dt.SetDate(startdt);
                        EndDate_dt.SetDate(Enddt);
                        $("#drdStatus").val(status.Proj_Statuscolor);
                        $("#drdCal").val(status.Proj_Calender);
                        //$("#Proj_Estimatehours").val(status.Proj_Estimatehours);
                        $("#estHrs").val(status.Proj_estimateHH);
                        $("#estmm").val(status.Proj_estimateMM);
                        $("#Proj_EstimatelabourCost").val(status.Proj_EstimatelabourCost);
                        $("#Proj_EstimateExpenseCost").val(status.Proj_EstimateExpenseCost);
                        $("#proj_EstimateTotCost").val(status.proj_EstimateTotCost);
                        var Acstartdt = new Date(parseInt(status.Proj_ActualStartdate.substr(6)));
                        var Acendtdt = new Date(parseInt(status.Proj_ActualEndDate.substr(6)));
                        ActualStartDate_dt.SetDate(Acstartdt);
                        ActualEndDate_dt.SetDate(Acendtdt);
                        $("#ddlUser").val(status.Approved_by);
                        var approvedt = new Date(parseInt(status.Approved_On.substr(6)));
                        Approved_dt.SetDate(approvedt);
                        $("#Remarks").val(status.Remarks);

                        $('#projectProgress li').removeClass('on visited')
                        $('.widgetDrop').hide();
                        if (status.projStage_Desc == "New") {
                            $('#liNew.parentLi').removeClass('on').addClass('visited');
                            $('#liQualify.parentLi').addClass('ready on');
                        }
                        else if (status.projStage_Desc == "Qualify") {
                            $('#liNew.parentLi').removeClass('on').addClass('visited');
                            $('#liQualify.parentLi').addClass('ready on');
                        }

                        else if (status.projStage_Desc == "Planning") {
                            $('#liNew.parentLi').removeClass('on').addClass('visited');
                            $('#liQualify.parentLi').removeClass('on').addClass('visited');
                            $('#liPlanning.parentLi').addClass('ready on');
                        }
                        else if (status.projStage_Desc == "Execution") {
                            $('#liNew.parentLi').removeClass('on').addClass('visited');
                            $('#liQualify.parentLi').removeClass('on').addClass('visited');
                            $('#liPlanning.parentLi').removeClass('on').addClass('visited');
                            $('#liExe.parentLi').addClass('ready on');
                        }

                        else if (status.projStage_Desc == "Deliver") {
                            $('#liNew.parentLi').removeClass('on').addClass('visited');
                            $('#liQualify.parentLi').removeClass('on').addClass('visited');
                            $('#liPlanning.parentLi').removeClass('on').addClass('visited');
                            $('#liExe.parentLi').removeClass('on').addClass('visited');
                            $('#liDeliver.parentLi').addClass('ready on');
                        }

                        else if (status.projStage_Desc == "Complete") {
                            $('#liNew.parentLi').removeClass('on').addClass('visited');
                            $('#liQualify.parentLi').removeClass('on').addClass('visited');
                            $('#liPlanning.parentLi').removeClass('on').addClass('visited');
                            $('#liExe.parentLi').removeClass('on').addClass('visited');
                            $('#liDeliver.parentLi').removeClass('on').addClass('visited');
                            $('#liComplete.parentLi').addClass('ready on');
                        }

                        else if (status.projStage_Desc == "Close") {
                            $('#liNew.parentLi').removeClass('on').addClass('visited');
                            $('#liQualify.parentLi').removeClass('on').addClass('visited');
                            $('#liPlanning.parentLi').removeClass('on').addClass('visited');
                            $('#liExe.parentLi').removeClass('on').addClass('visited');
                            $('#liDeliver.parentLi').removeClass('on').addClass('visited');
                            $('#liComplete.parentLi').removeClass('on').addClass('visited');
                            $('#liClose.parentLi').addClass('ready on');
                        }





                        $("#NewNm").val(status.Proj_Name);
                        $("#NewDesc").val(status.Proj_Description);
                        $("#NewCust").val(status.Customer);

                        $("#NewNm").prop("disabled", true);
                        $("#NewDesc").prop("disabled", true);
                        $("#NewCust").prop("disabled", true);

                        $("#QuaNm").val(status.Proj_Name);
                        $("#QuaDesc").val(status.Proj_Description);
                        $("#QuaCust").val(status.Customer);

                        $("#QuaNm").prop("disabled", true);
                        $("#QuaDesc").prop("disabled", true);
                        $("#QuaCust").prop("disabled", true);


                        $("#PlanningNm").val(status.Proj_Name);
                        $("#PlanningDesc").val(status.Proj_Description);
                        $("#PlanningCust").val(status.Customer);

                        $("#PlanningNm").prop("disabled", true);
                        $("#PlanningDesc").prop("disabled", true);
                        $("#PlanningCust").prop("disabled", true);

                        $("#executionNm").val(status.Proj_Name);
                        $("#executionDesc").val(status.Proj_Description);
                        $("#executionCust").val(status.Customer);

                        $("#executionNm").prop("disabled", true);
                        $("#executionDesc").prop("disabled", true);
                        $("#executionCust").prop("disabled", true);


                        $("#DeliverNm").val(status.Proj_Name);
                        $("#DeliverDesc").val(status.Proj_Description);
                        $("#DeliverCust").val(status.Customer);

                        $("#DeliverNm").prop("disabled", true);
                        $("#DeliverDesc").prop("disabled", true);
                        $("#DeliverCust").prop("disabled", true);



                        $("#CompleteNm").val(status.Proj_Name);
                        $("#CompleteDesc").val(status.Proj_Description);
                        $("#CompleteCust").val(status.Customer);

                        $("#CompleteNm").prop("disabled", true);
                        $("#CompleteDesc").prop("disabled", true);
                        $("#CompleteCust").prop("disabled", true);



                        $("#CloseNm").val(status.Proj_Name);
                        $("#CloseDesc").val(status.Proj_Description);
                        $("#CloseCust").val(status.Customer);

                        $("#CloseNm").prop("disabled", true);
                        $("#CloseDesc").prop("disabled", true);
                        $("#CloseCust").prop("disabled", true);

                        var OrderCount = [];



                        ProjectGridLookup.gridView.Refresh();
                        OrderCount = status.Order_Id.split(',');
                        for (var i = 0; i < OrderCount.length; i++) {
                            //ProjectGridLookup.gridView.Keyfield(OrderCount[i].trim());
                            ProjectGridLookup.gridView.SelectItemsByKey(OrderCount);
                        }

                        var BranchmapCount = [];

                        BranchmapCount = status.BranchMap_Id.split(',');
                        if (BranchmapCount !="")
                        {
                            for (var i = 0; i < BranchmapCount.length; i++) {
                                //ProjectGridLookup.gridView.Keyfield(OrderCount[i].trim());
                                BranchGridLookup.gridView.SelectItemsByKey(BranchmapCount);
                            }
                        }
                        else
                        {
                            BranchGridLookup.Clear();
                            BranchGridLookup.gridView.UnselectRows();
                        }
                        //var pm = document.getElementById("ddlPManager");
                        //obj.Proj_Managerid = f.options[f.selectedIndex].value;

                        //var pm = document.getElementById("ddlStatus");
                        //obj.Proj_Statuscolor = f.options[f.selectedIndex].value;
                        ////obj.Proj_EstimateStartdate = $("#StartDate_dt").val();
                        ////obj.Proj_EstimateEnddate = $("#EndDate_dt").val();
                        //obj.Proj_EstimateStartdate = StartDate_dt.GetDate();
                        //obj.Proj_EstimateEnddate = EndDate_dt.GetDate();

                        //obj.Proj_Estimatehours = $("#Proj_Estimatehours").val();
                        //obj.Proj_EstimatelabourCost = $("#Proj_EstimatelabourCost").val();
                        //obj.Proj_EstimateExpenseCost = $("#Proj_EstimateExpenseCost").val();
                        //obj.proj_EstimateTotCost = $("#proj_EstimateTotCost").val();
                        ////obj.ActualStartDate_dt = $("#ActualStartDate_dt").val();

                        ////obj.ActualEndDate_dt = $("#ActualEndDate_dt").val();
                        //obj.Proj_ActualStartdate = ActualStartDate_dt.GetDate();

                        //obj.Proj_ActualEndDate = ActualEndDate_dt.GetDate();
                        if (document.getElementById("exampleModalLabelForModify").style.display == "block") {
                            $("#Proj_Code").prop('disabled', true);

                            $("#Proj_Name").prop('disabled', true);
                            $("#ddlBranch").prop('disabled', true);
                            $("#CustomerTxt").prop('disabled', true);
                        }

                        // $("#projectMod").modal('toggle');
                    }
                },
                error: function (response) {
                    // alert(response);
                    jAlert("Please try again later.");
                    //LoadingPanel.Hide();
                }
            });
        }
    }

    function ApprovalProjectDetails() {
        var otherdt = {};
        otherdt.Action = "Approval";
        otherdt.Proj_Code = $("#Proj_Code").val();
        otherdt.Proj_Id = $("#ProjId").val();
        otherdt.Approved_by = $("#ddlUser").val();
        otherdt.Approved_On = Approved_dt.GetDate();
        otherdt.Remarks = $("#Remarks").val();
        $.ajax({
            type: "POST",
            url: '@Url.Action("ApprovalSaveData", "Project")',
            data: JSON.stringify(otherdt),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (response) {

                var status = response;
                if (status == "Data Save") {
                    jAlert(status);
                    $("#ProjId").val("");
                    // gridBookingStatusList.Refresh();
                    $("#projectMod").modal('hide');
                    gridProjectList.Refresh();
                    gridProjectList.Refresh();
                }


            },
            error: function (response) {
                // alert(response);
                jAlert("Please try again later.");
                //LoadingPanel.Hide();
            }
        });
    }
    function RejectProjectDetails() {
        var otherdt = {};
        otherdt.Action = "Reject";
        otherdt.Proj_Code = $("#Proj_Code").val();
        otherdt.Proj_Id = $("#ProjId").val();

        $.ajax({
            type: "POST",
            url: '@Url.Action("RejedctedSaveData", "Project")',
            data: JSON.stringify(otherdt),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (response) {

                var status = response;
                if (status == "Data Save") {
                    jAlert(status);
                    $("#ProjId").val("");
                    // gridBookingStatusList.Refresh();
                    $("#projectMod").modal('hide');
                    gridProjectList.Refresh();
                    gridProjectList.Refresh();
                }


            },
            error: function (response) {
                // alert(response);
                jAlert("Please try again later.");
                //LoadingPanel.Hide();
            }
        });
    }


    function ModelHide() {
        $('.widgetDrop').hide();
    }


    function OpenADDProject() {

        BranchGridLookup.SetEnabled(true);
        ProjectGridLookup.SetEnabled(false);

        $('#projectMod').on('shown.bs.modal', function () {
            $('#ddlNumbscheme').focus();
        })


        $('.widgetizeForm').find('.parentLi').removeClass('ready visited on');
        $('#liNew').addClass('ready on');



        $("#ProjId").val("");

        projectCode = [];
        projectCode.length = 0;

        document.getElementById("dvNumberscheme").disabled = true;
        LoadingPanel.Show();
        $("#ddlNumbscheme").val("0");
        $("#Proj_Name").val("");
        $("#Proj_Description").val("");
        $("#Proj_Code").val("");
        $("#CustomerId").val("");

        //chinmoy start


        $("#BG_BGGroup").val('');
        $("#BG_BGType").val('');
        $("#BG_Percentage").val('');
        $("#BG_BGValue").val('');
        $("#BG_BGStatus").val('');

        $("#Terms_DefectLibilityPeriodRemarks").val('');
        $("#Terms_LiqDamage").val('');
        $("#Terms_Payment").val('');
        $("#Terms_OrderType").val('');
        $("#Terms_NatureWork").val('');

        //End


        $("#ddlBranch").val(0);
        $("#ddlPManager").val(0);
        $("#drdStatus").val(0);
        var today = new Date();
        ProjectGridLookup.Clear();
        ProjectGridLookup.gridView.UnselectRows();

        BranchGridLookup.Clear();
        BranchGridLookup.gridView.UnselectRows();

        CustomerTxt.SetText("");
        StartDate_dt.SetDate(today);
        EndDate_dt.SetDate(today);
        $("#drdStatus").val(0);
        $("#drdCal").val(0);
        //$("#Proj_Estimatehours").val(0);
        $("#estHrs").val(0);
        $("#estmm").val(0);
        $("#Proj_EstimatelabourCost").val(0);
        $("#Proj_EstimateExpenseCost").val(0);
        $("#proj_EstimateTotCost").val(0);
        $("#Proj_Code").prop('disabled', false);

        $("#ddlHierarchy").prop('disabled', false);
        $("#Proj_Name").prop('disabled', false);
        $("#ddlBranch").prop('disabled', false);

        $("#NewNm").val("");
        $("#NewDesc").val("");
        $("#NewCust").val("");

        $("#QuaNm").val("");
        $("#QuaDesc").val("");
        $("#QuaCust").val("");
        $("#ddlHierarchy").val(0);

        CustomerTxt.SetEnabled(true);
        ActualStartDate_dt.SetDate(today);
        ActualEndDate_dt.SetDate(today);
        document.getElementById("dvNumberscheme").style.display = "block";
        document.getElementById("exampleModalLabelForApproval").style.display = "none";
        document.getElementById("dvApproval").style.display = "none";
        document.getElementById("exampleModalLabelForAdd").style.display = "block";
        document.getElementById("exampleModalLabelForModify").style.display = "none";
        document.getElementById("exampleModalLabelForView").style.display = "none";
        $("#btnSave").removeClass('hide');
        $("#btncancel").removeClass('hide');
        $("#btnApproved").addClass('hide');
        $("#btnReject").addClass('hide');
        LoadingPanel.Hide();

    }

    function OpenProjectforView(obj) {
        BranchGridLookup.gridView.Refresh();
        var MultipleBranchProject = '@ViewBag.MultipleBranchProject';
        if (MultipleBranchProject != null && MultipleBranchProject != "" && MultipleBranchProject != "No" && MultipleBranchProject != "NO") {
            $('#drdUnit').hide();
            $('#BranchGridLookup').show();
        }
        else {
            $('#drdUnit').show();
            $('#BranchGridLookup').hide();
        }
        BranchGridLookup.SetEnabled(false);
        document.getElementById("dvNumberscheme").style.display = "none";
        document.getElementById("exampleModalLabelForApproval").style.display = "none";
        document.getElementById("dvApproval").style.display = "block";
        document.getElementById("exampleModalLabelForView").style.display = "block";
        document.getElementById("exampleModalLabelForAdd").style.display = "none";
        document.getElementById("exampleModalLabelForModify").style.display = "none";
        $.ajax({
            type: "POST",
            url: '@Url.Action("ViewDataShow", "Project")',
            data: JSON.stringify({ Proj_Id: obj }),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (response) {
                // LoadingPanel.Hide();
                debugger;
                var status = response;
                var str = "";

                if (status != null) {

                    $("#Proj_Name").val(status.Proj_Name);
                    $("#Proj_Description").val(status.Proj_Description);
                    $("#Proj_Code").val(status.Proj_Code);
                    $("#CustomerId").val(status.Cnt_InternalId);

                    $("#ddlBranch").val(status.Proj_Bracnchid);
                    $("#ddlPManager").val(status.Proj_Managerid);
                    $("#drdStatus").val(status.Proj_Statuscolor);
                    var startdt = new Date(parseInt(status.Proj_EstimateStartdate.substr(6)));
                    var Enddt = new Date(parseInt(status.Proj_EstimateEnddate.substr(6)));
                    CustomerTxt.SetText(status.Customer);
                    StartDate_dt.SetDate(startdt);
                    EndDate_dt.SetDate(Enddt);
                    $("#drdStatus").val(status.Proj_Statuscolor);
                    $("#drdCal").val(status.Proj_Calender);
                    // $("#Proj_Estimatehours").val(status.Proj_Estimatehours);


                    Terms_DefectLibilityPeriodDate.SetText(status.SaveEditTerms_DefectLibilityPeriodDate);
                    Terms_DefectLibilityPeriodToDate.SetText(status.SaveEditTerms_DefectLibilityPeriodToDate);
                    $("#Terms_DefectLibilityPeriodRemarks").val(status.SaveTerms_DefectLibilityPeriodRemarks);
                    $("#Terms_LiqDamage").val(status.SaveTerms_LiqDamage);
                    Terms_LiqDamageAppDate.SetText(status.SaveEditTerms_LiqDamageAppDate);
                    $("#Terms_Payment").val(status.SaveTerms_Payment);
                    $("#Terms_OrderType").val(status.SaveTerms_OrderType);
                    $("#Terms_NatureWork").val(status.SaveTerms_NatureWork);



                    $("#estHrs").val(status.Proj_estimateHH);
                    $("#estmm").val(status.Proj_estimateMM);
                    $("#Proj_EstimatelabourCost").val(status.Proj_EstimatelabourCost);
                    $("#Proj_EstimateExpenseCost").val(status.Proj_EstimateExpenseCost);
                    $("#proj_EstimateTotCost").val(status.proj_EstimateTotCost);
                    var Acstartdt = new Date(parseInt(status.Proj_ActualStartdate.substr(6)));
                    var Acendtdt = new Date(parseInt(status.Proj_ActualEndDate.substr(6)));
                    ActualStartDate_dt.SetDate(Acstartdt);
                    ActualEndDate_dt.SetDate(Acendtdt);
                    $("#ddlUser").val(status.Approved_by);
                    var approvedt = new Date(parseInt(status.Approved_On.substr(6)));
                    Approved_dt.SetDate(approvedt);
                    $("#Remarks").val(status.Remarks);
                    $('#projectProgress li').removeClass('on visited')
                    $('.widgetDrop').hide();
                    if (status.projStage_Desc == "New") {
                        $('#liNew.parentLi').removeClass('on').addClass('visited');
                        $('#liQualify.parentLi').addClass('ready on');
                    }
                    else if (status.projStage_Desc == "Qualify") {
                        $('#liNew.parentLi').removeClass('on').addClass('visited');
                        $('#liQualify.parentLi').addClass('ready on');
                    }

                    else if (status.projStage_Desc == "Planning") {
                        $('#liNew.parentLi').removeClass('on').addClass('visited');
                        $('#liQualify.parentLi').removeClass('on').addClass('visited');
                        $('#liPlanning.parentLi').addClass('ready on');
                    }
                    else if (status.projStage_Desc == "Execution") {
                        $('#liNew.parentLi').removeClass('on').addClass('visited');
                        $('#liQualify.parentLi').removeClass('on').addClass('visited');
                        $('#liPlanning.parentLi').removeClass('on').addClass('visited');
                        $('#liExe.parentLi').addClass('ready on');
                    }

                    else if (status.projStage_Desc == "Deliver") {
                        $('#liNew.parentLi').removeClass('on').addClass('visited');
                        $('#liQualify.parentLi').removeClass('on').addClass('visited');
                        $('#liPlanning.parentLi').removeClass('on').addClass('visited');
                        $('#liExe.parentLi').removeClass('on').addClass('visited');
                        $('#liDeliver.parentLi').addClass('ready on');
                    }

                    else if (status.projStage_Desc == "Complete") {
                        $('#liNew.parentLi').removeClass('on').addClass('visited');
                        $('#liQualify.parentLi').removeClass('on').addClass('visited');
                        $('#liPlanning.parentLi').removeClass('on').addClass('visited');
                        $('#liExe.parentLi').removeClass('on').addClass('visited');
                        $('#liDeliver.parentLi').removeClass('on').addClass('visited');
                        $('#liComplete.parentLi').addClass('ready on');
                    }

                    else if (status.projStage_Desc == "Close") {
                        $('#liNew.parentLi').removeClass('on').addClass('visited');
                        $('#liQualify.parentLi').removeClass('on').addClass('visited');
                        $('#liPlanning.parentLi').removeClass('on').addClass('visited');
                        $('#liExe.parentLi').removeClass('on').addClass('visited');
                        $('#liDeliver.parentLi').removeClass('on').addClass('visited');
                        $('#liComplete.parentLi').removeClass('on').addClass('visited');
                        $('#liClose.parentLi').addClass('ready on');
                    }





                    $("#NewNm").val(status.Proj_Name);
                    $("#NewDesc").val(status.Proj_Description);
                    $("#NewCust").val(status.Customer);

                    $("#NewNm").prop("disabled", true);
                    $("#NewDesc").prop("disabled", true);
                    $("#NewCust").prop("disabled", true);

                    $("#QuaNm").val(status.Proj_Name);
                    $("#QuaDesc").val(status.Proj_Description);
                    $("#QuaCust").val(status.Customer);

                    $("#QuaNm").prop("disabled", true);
                    $("#QuaDesc").prop("disabled", true);
                    $("#QuaCust").prop("disabled", true);


                    $("#PlanningNm").val(status.Proj_Name);
                    $("#PlanningDesc").val(status.Proj_Description);
                    $("#PlanningCust").val(status.Customer);

                    $("#PlanningNm").prop("disabled", true);
                    $("#PlanningDesc").prop("disabled", true);
                    $("#PlanningCust").prop("disabled", true);

                    $("#executionNm").val(status.Proj_Name);
                    $("#executionDesc").val(status.Proj_Description);
                    $("#executionCust").val(status.Customer);

                    $("#executionNm").prop("disabled", true);
                    $("#executionDesc").prop("disabled", true);
                    $("#executionCust").prop("disabled", true);


                    $("#DeliverNm").val(status.Proj_Name);
                    $("#DeliverDesc").val(status.Proj_Description);
                    $("#DeliverCust").val(status.Customer);

                    $("#DeliverNm").prop("disabled", true);
                    $("#DeliverDesc").prop("disabled", true);
                    $("#DeliverCust").prop("disabled", true);



                    $("#CompleteNm").val(status.Proj_Name);
                    $("#CompleteDesc").val(status.Proj_Description);
                    $("#CompleteCust").val(status.Customer);

                    $("#CompleteNm").prop("disabled", true);
                    $("#CompleteDesc").prop("disabled", true);
                    $("#CompleteCust").prop("disabled", true);



                    $("#CloseNm").val(status.Proj_Name);
                    $("#CloseDesc").val(status.Proj_Description);
                    $("#CloseCust").val(status.Customer);

                    $("#CloseNm").prop("disabled", true);
                    $("#CloseDesc").prop("disabled", true);
                    $("#CloseCust").prop("disabled", true);



                    var OrderCount = [];



                    ProjectGridLookup.gridView.Refresh();
                    OrderCount = status.Order_Id.split(',');
                    for (var i = 0; i < OrderCount.length; i++) {
                        //ProjectGridLookup.gridView.Keyfield(OrderCount[i].trim());
                        ProjectGridLookup.gridView.SelectItemsByKey(OrderCount);
                    }


                    var BranchmapCount = [];
                    // BranchGridLookup.gridView.Refresh();
                    BranchmapCount = status.BranchMap_Id.split(',');
                    if (BranchmapCount != "") {
                        for (var i = 0; i < BranchmapCount.length; i++) {
                            //ProjectGridLookup.gridView.Keyfield(OrderCount[i].trim());
                            BranchGridLookup.gridView.SelectItemsByKey(BranchmapCount);
                        }
                    }
                    else {
                        BranchGridLookup.Clear();
                        BranchGridLookup.gridView.UnselectRows();
                    }
                    //var pm = document.getElementById("ddlPManager");
                    //obj.Proj_Managerid = f.options[f.selectedIndex].value;

                    //var pm = document.getElementById("ddlStatus");
                    //obj.Proj_Statuscolor = f.options[f.selectedIndex].value;
                    ////obj.Proj_EstimateStartdate = $("#StartDate_dt").val();
                    ////obj.Proj_EstimateEnddate = $("#EndDate_dt").val();
                    //obj.Proj_EstimateStartdate = StartDate_dt.GetDate();
                    //obj.Proj_EstimateEnddate = EndDate_dt.GetDate();

                    //obj.Proj_Estimatehours = $("#Proj_Estimatehours").val();
                    //obj.Proj_EstimatelabourCost = $("#Proj_EstimatelabourCost").val();
                    //obj.Proj_EstimateExpenseCost = $("#Proj_EstimateExpenseCost").val();
                    //obj.proj_EstimateTotCost = $("#proj_EstimateTotCost").val();
                    ////obj.ActualStartDate_dt = $("#ActualStartDate_dt").val();

                    ////obj.ActualEndDate_dt = $("#ActualEndDate_dt").val();
                    //obj.Proj_ActualStartdate = ActualStartDate_dt.GetDate();

                    //obj.Proj_ActualEndDate = ActualEndDate_dt.GetDate();
                    if (document.getElementById("exampleModalLabelForModify").style.display == "block") {
                        $("#Proj_Code").prop('disabled', true);

                        $("#Proj_Name").prop('disabled', true);
                        $("#ddlBranch").prop('disabled', true);

                        CustomerTxt.SetEnabled(false);
                    }


                    $("#btnSave").addClass('hide');
                    $("#btncancel").addClass('hide');
                    $("#btnApproved").addClass('hide');
                    $("#btnReject").addClass('hide');
                    $("#projectMod").modal('toggle');
                }
            },
            error: function (response) {
                // alert(response);
                jAlert("Please try again later.");
                //LoadingPanel.Hide();
            }
        });
    }

    function TermsConditionscancel() {
        $("#TermsConditionseModal").hide();
    }

    function TermsConditionsSave() {
        $("#TermsConditionseModal").hide();
    }

    function AddTermsDetails() {

        var bg = $("#BG_BGGroup").val();
        if (bg == "") {
            //ctxtBGGroup.SetFocus();
            $("#BG_BGGroup").focus();
            return;
        }

        var ob = {};
        ob.BG_BGGroup = $("#BG_BGGroup").val();
        ob.BG_BGType = $("#BG_BGType").val();
        ob.BG_Percentage = $("#BG_Percentage").val();
        ob.BG_BGValue = $("#BG_BGValue").val();
        ob.BG_BGStatus = $("#BG_BGStatus").val();

        var ValidityFromDate = BG_BGValidfrom.GetDate();
        var ValidityToDate = BG_BGValidUpTo.GetDate();
        if (ValidityFromDate != null) {
            ob.BG_BGValidfrom = GetDateFormat(ValidityFromDate);
        }
        if (ValidityToDate != null) {
            ob.BG_BGValidUpTo = GetDateFormat(ValidityToDate);
        }
        ob.Terms_BankGuaranteeSL = $('#hdnGuid').val();

        $.ajax({
            type: "POST",
            url: '@Url.Action("BankDetailsSave", "Project")',
            //data: { Project: obj },
            data: JSON.stringify({ bank: ob }),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (response) {

                var BGdata = response;

                $("#BG_BGGroup").val('');
                $("#BG_BGType").val('');
                $("#BG_Percentage").val('');
                $("#BG_BGValue").val('');
                $("#BG_BGStatus").val('');


                TermsConitionsPartial.Refresh();

            },
            error: function (response) {
                jAlert("Please try again later.");
            }
        });

    }


    function GetDateFormat(today) {
        if (today != "") {
            var dd = today.getDate();
            var mm = today.getMonth() + 1; //January is 0!

            var yyyy = today.getFullYear();
            if (dd < 10) {
                dd = '0' + dd;
            }
            if (mm < 10) {
                mm = '0' + mm;
            }
            //  today = dd + '-' + mm + '-' + yyyy;
            today = yyyy + '-' + mm + '-' + dd;
        }

        return today;
    }

    function OpenTermsConitionsforDelete(ob) {
        jConfirm('Confirm Delete?', 'Alert', function (r) {
            if (r) {
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("DeleteTermsConditionsData", "Project")',
                    data: JSON.stringify({ Terms_BankGuaranteeSL: ob }),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (msg) {
                        var list = msg.d;

                        jAlert("Bank guarantee  Remove Successfully.");

                        TermsConitionsPartial.Refresh();

                    }
                });
            }
            else {

            }
        });
    }

    function Termsconditions() {
        TermsConitionsPartial.Refresh();
        TermsConitionsPartial.Refresh();
    }

    function OpenProjectforDelete(obj) {
        jConfirm('Confirm Delete?', 'Alert', function (r) {
            if (r) {

                $.ajax({
                    type: "POST",
                    url: '@Url.Action("DeleteData", "Project")',
                    data: JSON.stringify({ Proj_Id: obj }),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (response) {
                        var status = response;
                        jAlert(status);

                        gridProjectList.Refresh();
                        gridProjectList.Refresh();
                    },
                    error: function (response) {
                        //alert(response);
                        jAlert("Please try again later.");
                    }
                });
            }
            else {
                // alert("false");
            }
        });

    }

    function ProjectCancel(obj) {
        var cancelcloseProjectResult = {};
        var cancelcloseProject = {};
        cancelcloseProject.Code = obj;
        $.ajax({
            async: false,
            type: "POST",
            url: '@Url.Action("CancelProjectCheck", "Project")',
            data: JSON.stringify(cancelcloseProject),
            contentType: "application/json; charset=utf-8",
            datatype: "JSON",

            success: function (data) {

                cancelcloseProjectResult = data;



            },
            error: function (data) {

                jAlert("Please try again later");
            }
        });

        if (cancelcloseProjectResult.split("~")[0] == "1" || cancelcloseProjectResult.split("~")[1] == "Finish") {
            jAlert("Project is already cancelled.");
        }
        else {
            jConfirm('Do you want to cancel the project ?', 'Confirm Dialog', function (r) {
                if (r == true) {
                    $("#ProIdCanRemarks").val(obj);
                    $("#CloseModal").modal('toggle');

                }
                else {
                    return false;
                }
            });
        }
    }


    function CancelRemarks_save() {
        var flag = true;
        if ($("#txtCanCelRemarks").val() == "") {
            flag = false;
            $("#txtCanCelRemarks").focus();
        }
        else {
            var obResult = {};
            obResult.Proj_Id = $("#ProIdCanRemarks").val();
            obResult.CancelRemarks = $("#txtCanCelRemarks").val();

            $.ajax({
                type: "POST",
                url: '@Url.Action("SaveCancelCloseRemarks", "Project")',
                data: JSON.stringify(obResult),
                contentType: "application/json; charset=utf-8",
                datatype: "JSON",

                success: function (data) {

                    var CancelRemarks = data;

                    $("#CloseModal").modal('hide');
                    gridProjectList.Refresh();
                    gridProjectList.Refresh();

                },
                error: function (data) {
                    jAlert("Please try again later");
                }
            });
        }

        return flag;
    }


    function OpenProjectforEdit(obj) {
        BranchGridLookup.gridView.Refresh();
        var MultipleBranchProject = '@ViewBag.MultipleBranchProject';
        if (MultipleBranchProject != null && MultipleBranchProject != "" && MultipleBranchProject != "No" && MultipleBranchProject != "NO") {
            $('#drdUnit').hide();
            $('#BranchGridLookup').show();
        }
        else {
            $('#drdUnit').show();
            $('#BranchGridLookup').hide();
        }
        BranchGridLookup.SetEnabled(false);
        var cancelProjectResult = {};
        var cancelProjectData = {};
        cancelProjectData.Code = obj;
        // FinishClick();
        $.ajax({
            async: false,
            type: "POST",
            url: '@Url.Action("CancelProjectCheck", "Project")',
            data: JSON.stringify(cancelProjectData),
            contentType: "application/json; charset=utf-8",
            datatype: "JSON",

            success: function (data) {

                cancelProjectResult = data;



            },
            error: function (data) {

                jAlert("Please try again later");
            }
        });





        if (cancelProjectResult.split("~")[0] == "1" || cancelProjectResult.split("~")[1] == "Finish") {
            jAlert("Project cancelled/closed, Cannot modify data.");
        }



        else {
            debugger;
            $('#projectMod').on('shown.bs.modal', function () {
                $('#Proj_Description').focus();
            });
            $("#ProjId").val(obj);
            var CodeForTrans = {};
            CodeForTrans.Code = $("#ProjId").val();
            $.ajax({
                type: "POST",
                url: '@Url.Action("ProjectCodeTransactionCheck", "Project")',
                data: JSON.stringify(CodeForTrans),
                contentType: "application/json; charset=utf-8",
                datatype: "JSON",

                success: function (data) {

                    ProjectCodeCheck = data;


                },
                error: function (data) {

                    jAlert("Please try again later");
                }
            });



            $.ajax({
                type: "POST",
                url: '@Url.Action("ProjectstatusForTransaction", "Project")',
                data: JSON.stringify(CodeForTrans),
                contentType: "application/json; charset=utf-8",
                datatype: "JSON",

                success: function (data) {

                    ProjectstatusForTransaction = data;


                },
                error: function (data) {

                    jAlert("Please try again later");
                }
            });



            //alert(obj);
            document.getElementById("dvNumberscheme").style.display = "none";
            document.getElementById("exampleModalLabelForApproval").style.display = "none";
            document.getElementById("dvApproval").style.display = "none";
            document.getElementById("exampleModalLabelForAdd").style.display = "none";
            document.getElementById("exampleModalLabelForModify").style.display = "block";
            document.getElementById("exampleModalLabelForView").style.display = "none";
            $("#btnSave").removeClass('hide');
            $("#btncancel").removeClass('hide');
            $("#btnApproved").addClass('hide');
            $("#btnReject").addClass('hide');

            $.ajax({
                type: "POST",
                url: '@Url.Action("ViewDataShow", "Project")',
                data: JSON.stringify({ Proj_Id: obj }),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (response) {
                    // LoadingPanel.Hide();
                    debugger;
                    var status = response;
                    var str = "";

                    if (status != null) {

                        if (status.ProjectStatus == "Approved") {
                            ProjectGridLookup.SetEnabled(true);
                        }
                        else {
                            ProjectGridLookup.SetEnabled(false);
                        }

                        $("#Proj_Name").val(status.Proj_Name);
                        $("#Proj_Description").val(status.Proj_Description);
                        $("#Proj_Code").val(status.Proj_Code);
                        $("#CustomerId").val(status.Cnt_InternalId);
                        $("#HdnProjectapprovalstatus").val(status.ProjectStatus);
                        $("#ddlBranch").val(status.Proj_Bracnchid);
                        $("#ddlPManager").val(status.Proj_Managerid);
                        $("#drdStatus").val(status.Proj_Statuscolor);
                        $("#ddlHierarchy").val(status.Proj_Hierarchy);
                        var startdt = new Date(parseInt(status.Proj_EstimateStartdate.substr(6)));
                        var Enddt = new Date(parseInt(status.Proj_EstimateEnddate.substr(6)));
                        CustomerTxt.SetText(status.Customer);
                        
                        StartDate_dt.SetDate(startdt);
                        EndDate_dt.SetDate(Enddt);

                        $("#drdStatus").val(status.Proj_Statuscolor);
                        $("#drdCal").val(status.Proj_Calender);
                        //$("#Proj_Estimatehours").val(status.Proj_Estimatehours);
                        $("#estHrs").val(status.Proj_estimateHH);
                        $("#estmm").val(status.Proj_estimateMM);
                        $("#Proj_EstimatelabourCost").val(status.Proj_EstimatelabourCost);
                        $("#Proj_EstimateExpenseCost").val(status.Proj_EstimateExpenseCost);
                        $("#proj_EstimateTotCost").val(status.proj_EstimateTotCost);
                        var Acstartdt = new Date(parseInt(status.Proj_ActualStartdate.substr(6)));
                        var Acendtdt = new Date(parseInt(status.Proj_ActualEndDate.substr(6)));
                        ActualStartDate_dt.SetDate(Acstartdt);
                        ActualEndDate_dt.SetDate(Acendtdt);

                        Terms_DefectLibilityPeriodDate.SetText(status.SaveEditTerms_DefectLibilityPeriodDate);
                        Terms_DefectLibilityPeriodToDate.SetText(status.SaveEditTerms_DefectLibilityPeriodToDate);
                        $("#Terms_DefectLibilityPeriodRemarks").val(status.SaveTerms_DefectLibilityPeriodRemarks);
                        $("#Terms_LiqDamage").val(status.SaveTerms_LiqDamage);
                        Terms_LiqDamageAppDate.SetText(status.SaveEditTerms_LiqDamageAppDate);
                        $("#Terms_Payment").val(status.SaveTerms_Payment);
                        $("#Terms_OrderType").val(status.SaveTerms_OrderType);
                        $("#Terms_NatureWork").val(status.SaveTerms_NatureWork);


                        //debugger;

                        $('#projectProgress li').removeClass('on visited');
                        $('.widgetDrop').hide();

                        if (status.projStage_Desc == "New") {
                            $('#liNew.parentLi').removeClass('on').addClass('visited');
                            $('#liQualify.parentLi').addClass('ready on');
                        }
                        else if (status.projStage_Desc == "Qualify") {
                            $('#liNew.parentLi').removeClass('on').addClass('visited');
                            $('#liQualify.parentLi').addClass('ready on');
                        }

                        else if (status.projStage_Desc == "Planning") {
                            $('#liNew.parentLi').removeClass('on').addClass('visited');
                            $('#liQualify.parentLi').removeClass('on').addClass('visited');
                            $('#liPlanning.parentLi').addClass('ready on');
                        }
                        else if (status.projStage_Desc == "Execution") {
                            $('#liNew.parentLi').removeClass('on').addClass('visited');
                            $('#liQualify.parentLi').removeClass('on').addClass('visited');
                            $('#liPlanning.parentLi').removeClass('on').addClass('visited');
                            $('#liExe.parentLi').addClass('ready on');
                        }

                        else if (status.projStage_Desc == "Deliver") {
                            $('#liNew.parentLi').removeClass('on').addClass('visited');
                            $('#liQualify.parentLi').removeClass('on').addClass('visited');
                            $('#liPlanning.parentLi').removeClass('on').addClass('visited');
                            $('#liExe.parentLi').removeClass('on').addClass('visited');
                            $('#liDeliver.parentLi').addClass('ready on');
                        }

                        else if (status.projStage_Desc == "Complete") {
                            $('#liNew.parentLi').removeClass('on').addClass('visited');
                            $('#liQualify.parentLi').removeClass('on').addClass('visited');
                            $('#liPlanning.parentLi').removeClass('on').addClass('visited');
                            $('#liExe.parentLi').removeClass('on').addClass('visited');
                            $('#liDeliver.parentLi').removeClass('on').addClass('visited');
                            $('#liComplete.parentLi').addClass('ready on');
                        }

                        else if (status.projStage_Desc == "Close") {
                            $('#liNew.parentLi').removeClass('on').addClass('visited');
                            $('#liQualify.parentLi').removeClass('on').addClass('visited');
                            $('#liPlanning.parentLi').removeClass('on').addClass('visited');
                            $('#liExe.parentLi').removeClass('on').addClass('visited');
                            $('#liDeliver.parentLi').removeClass('on').addClass('visited');
                            $('#liComplete.parentLi').removeClass('on').addClass('visited');
                            $('#liClose.parentLi').addClass('ready on');
                        }


                        $("#NewNm").val(status.Proj_Name);
                        $("#NewDesc").val(status.Proj_Description);
                        $("#NewCust").val(status.Customer);

                        $("#NewNm").prop("disabled", true);
                        $("#NewDesc").prop("disabled", true);
                        $("#NewCust").prop("disabled", true);

                        $("#QuaNm").val(status.Proj_Name);
                        $("#QuaDesc").val(status.Proj_Description);
                        $("#QuaCust").val(status.Customer);

                        $("#QuaNm").prop("disabled", true);
                        $("#QuaDesc").prop("disabled", true);
                        $("#QuaCust").prop("disabled", true);

                        $("#PlanningNm").val(status.Proj_Name);
                        $("#PlanningDesc").val(status.Proj_Description);
                        $("#PlanningCust").val(status.Customer);

                        $("#PlanningNm").prop("disabled", true);
                        $("#PlanningDesc").prop("disabled", true);
                        $("#PlanningCust").prop("disabled", true);

                        $("#executionNm").val(status.Proj_Name);
                        $("#executionDesc").val(status.Proj_Description);
                        $("#executionCust").val(status.Customer);

                        $("#executionNm").prop("disabled", true);
                        $("#executionDesc").prop("disabled", true);
                        $("#executionCust").prop("disabled", true);


                        $("#DeliverNm").val(status.Proj_Name);
                        $("#DeliverDesc").val(status.Proj_Description);
                        $("#DeliverCust").val(status.Customer);

                        $("#DeliverNm").prop("disabled", true);
                        $("#DeliverDesc").prop("disabled", true);
                        $("#DeliverCust").prop("disabled", true);



                        $("#CompleteNm").val(status.Proj_Name);
                        $("#CompleteDesc").val(status.Proj_Description);
                        $("#CompleteCust").val(status.Customer);

                        $("#CompleteNm").prop("disabled", true);
                        $("#CompleteDesc").prop("disabled", true);
                        $("#CompleteCust").prop("disabled", true);



                        $("#CloseNm").val(status.Proj_Name);
                        $("#CloseDesc").val(status.Proj_Description);
                        $("#CloseCust").val(status.Customer);

                        $("#CloseNm").prop("disabled", true);
                        $("#CloseDesc").prop("disabled", true);
                        $("#CloseCust").prop("disabled", true);



                        var OrderCount = [];



                        ProjectGridLookup.gridView.Refresh();
                        OrderCount = status.Order_Id.split(',');
                        for (var i = 0; i < OrderCount.length; i++) {
                            //ProjectGridLookup.gridView.Keyfield(OrderCount[i].trim());
                            ProjectGridLookup.gridView.SelectItemsByKey(OrderCount);
                        }

                        var BranchmapCount = [];
                        // BranchGridLookup.gridView.Refresh();
                        BranchmapCount = status.BranchMap_Id.split(',');
                        if (BranchmapCount != "") {
                            for (var i = 0; i < BranchmapCount.length; i++) {
                                //ProjectGridLookup.gridView.Keyfield(OrderCount[i].trim());
                                BranchGridLookup.gridView.SelectItemsByKey(BranchmapCount);
                            }
                        }
                        else {
                            BranchGridLookup.Clear();
                            BranchGridLookup.gridView.UnselectRows();
                        }
                        //var pm = document.getElementById("ddlPManager");
                        //obj.Proj_Managerid = f.options[f.selectedIndex].value;

                        //var pm = document.getElementById("ddlStatus");
                        //obj.Proj_Statuscolor = f.options[f.selectedIndex].value;
                        ////obj.Proj_EstimateStartdate = $("#StartDate_dt").val();
                        ////obj.Proj_EstimateEnddate = $("#EndDate_dt").val();
                        //obj.Proj_EstimateStartdate = StartDate_dt.GetDate();
                        //obj.Proj_EstimateEnddate = EndDate_dt.GetDate();

                        //obj.Proj_Estimatehours = $("#Proj_Estimatehours").val();
                        //obj.Proj_EstimatelabourCost = $("#Proj_EstimatelabourCost").val();
                        //obj.Proj_EstimateExpenseCost = $("#Proj_EstimateExpenseCost").val();
                        //obj.proj_EstimateTotCost = $("#proj_EstimateTotCost").val();
                        ////obj.ActualStartDate_dt = $("#ActualStartDate_dt").val();

                        ////obj.ActualEndDate_dt = $("#ActualEndDate_dt").val();
                        //obj.Proj_ActualStartdate = ActualStartDate_dt.GetDate();

                        //obj.Proj_ActualEndDate = ActualEndDate_dt.GetDate();

                        if (ProjectCodeCheck == 1 || ProjectstatusForTransaction == 1) {
                            //$("#Proj_Name").prop('disabled', true);
                            CustomerTxt.SetEnabled(false);
                            $("#ddlHierarchy").prop("disabled", true);
                        }
                        else {
                            //$("#Proj_Name").prop('disabled', false);
                            CustomerTxt.SetEnabled(true);
                            $("#ddlHierarchy").prop("disabled", false);
                        }
                        //if (ProjectstatusForTransaction == 1)
                        //{
                        //    CustomerTxt.SetEnabled(false);
                        //}
                        //else
                        //{
                        //    CustomerTxt.SetEnabled(true);
                        //}
                        $("#Proj_Code").prop('disabled', true);


                        $("#ddlBranch").prop('disabled', true);




                        $("#btnSave").removeClass('hide');
                        $("#btncancel").removeClass('hide');
                        $("#projectMod").modal('toggle');
                    }
                },
                error: function (response) {
                    // alert(response);
                    jAlert("Please try again later.");
                    //LoadingPanel.Hide();
                }
            });
        }
    }




    $(document).ready(function () {
        $('.widgetizeForm li .parentLabel').click(function () {
            //alert($(this).attr('class'));
            if ($(this).parent('li').hasClass('ready')) {
                //$('.widgetDrop').hide();
                // $(this).parent('li').addClass('on');
                $('.widgetDrop').hide();
                $(this).parent('li').find('.widgetDrop').toggle();
            } else {
                $(this).parent('li').find('.widgetDrop').hide();
            }
        });
        $('.widgetDrop .nextStage').click(function () {
            //alert($(this).attr('class'));
            if ($(this).hasClass('act')) {
                $(this).closest('li.parentLi').next('.parentLi').addClass('ready');
                $(this).closest('li.parentLi').next('.parentLi').find('.widgetDrop').show();
                $(this).closest('li.parentLi').next('.parentLi').addClass('on');

                $(this).closest('li.parentLi').removeClass('on').addClass('visited');
                $(this).closest('li.parentLi').find('.widgetDrop').hide();
            } else {
                $(this).parent('li').find('.widgetDrop').hide();
            }
        });
        $('.closeDropCont').click(function () {
            $(this).closest('li.parentLi').find('.widgetDrop').hide();
        });
    });



    //Surojit

    function CalculateTotalCost() {

        var Proj_EstimatelabourCost = $('#Proj_EstimatelabourCost').val();
        var Proj_EstimateExpenseCost = $('#Proj_EstimateExpenseCost').val();
        var proj_EstimateTotCost = 0;

        if (parseFloat(Proj_EstimatelabourCost) > 0 || parseFloat(Proj_EstimateExpenseCost) > 0) {
            proj_EstimateTotCost = parseFloat(Proj_EstimatelabourCost) + parseFloat(Proj_EstimateExpenseCost);
            $('#proj_EstimateTotCost').val(parseFloat(proj_EstimateTotCost).toFixed(2));
        }
        else {
            $('#proj_EstimateTotCost').val(parseFloat(0).toFixed(2));
        }

    }


    //Surojit




    function SaveProjectDetails() {
        debugger;
        var obj = {};
        obj.Proj_Name = $("#Proj_Name").val();
        obj.Proj_Description = $("#Proj_Description").val();
        obj.Proj_Code = $("#Proj_Code").val().trim();
        obj.Cnt_InternalId = $("#CustomerId").val();
        var f = document.getElementById("ddlBranch");
        obj.Proj_Bracnchid = $("#ddlBranch").val();
        obj.NumberSchemaId = $("#ddlNumbscheme").val().split('~')[0];
        if ($("#ProjId").val() == "") {
            obj.Action = "Add"

        }
        else {
            obj.Action = "Edit"
            obj.Proj_Id = $("#ProjId").val();
        }

        //var pm = document.getElementById("ddlPManager");
        //obj.Proj_Managerid = f.options[f.selectedIndex].value;

        //var pm = document.getElementById("ddlStatus");
        //obj.Proj_Statuscolor = f.options[f.selectedIndex].value;
        obj.Proj_Managerid = $("#ddlPManager").val();
        obj.Proj_Statuscolor = $("#drdStatus").val();
        obj.Proj_Calender = $("#drdCal").val();
        //obj.Proj_EstimateStartdate = $("#StartDate_dt").val();
        //obj.Proj_EstimateEnddate = $("#EndDate_dt").val();

        obj.Proj_EstimateStartdate = StartDate_dt.GetDate();
        obj.Proj_EstimateEnddate = EndDate_dt.GetDate();

        //obj.Proj_Estimatehours = $("#Proj_Estimatehours").val();
        var estHrs = $("#estHrs").val();
        var estmm = $("#estmm").val();
        //var EstInMints = (estHrs * 60);
        //var EstInMintsTot = EstInMints + estmm
        obj.Proj_estimateHH = estHrs;
        obj.Proj_estimateMM = estmm;
        obj.Proj_EstimatelabourCost = $("#Proj_EstimatelabourCost").val();
        obj.Proj_EstimateExpenseCost = $("#Proj_EstimateExpenseCost").val();
        obj.proj_EstimateTotCost = $("#proj_EstimateTotCost").val();
        //obj.ActualStartDate_dt = $("#ActualStartDate_dt").val();

        //obj.ActualEndDate_dt = $("#ActualEndDate_dt").val();
        obj.Proj_ActualStartdate = ActualStartDate_dt.GetDate();

        obj.Proj_ActualEndDate = ActualEndDate_dt.GetDate();



        if ($("#ddlUser").val() != "") {
            obj.Approved_by = $("#ddlUser").val();
        }

        obj.Approved_On = Approved_dt.GetDate();
        obj.Remarks = $("#Remarks").val();

        if ($("#ddlNumbscheme").val().split('~')[1] != "0") {
            obj.Doc_No = "Auto"
        }
        else {
            obj.Doc_No = $("#Proj_Code").val();
        }
        if ($('#projectProgress li.parentLi.on').find('.clsProgressTle').text() != "") {
            obj.projStage_Desc = $('#projectProgress li.parentLi.on').find('.clsProgressTle').text();
        }
        else {
            obj.projStage_Desc = "Finish"
        }




        obj.Order_Id = projectCode.toString();
        //Rev work start 22.07.2022 mantise no:25068 Project Master creation by tagging multiple Branch, is not working properly.
        /*if (obj.BranchMap_Id != null && obj.BranchMap_Id != "") {
            obj.BranchMap_Id = MapBranch_id.toString();
        }
        else
        {
            var quote_Id = "";
            var quotetag_Id = BranchGridLookup.gridView.GetSelectedKeysOnPage();
            if(quotetag_Id.length>0)
            {


                for (var i = 0; i < quotetag_Id.length; i++) {
                    if (quote_Id == "") {
                        quote_Id = quotetag_Id[i];
                    }
                    else {
                        quote_Id += ',' + quotetag_Id[i];
                    }
                }
            }
            obj.BranchMap_Id = quote_Id;
        }*/
       
        obj.BranchMap_Id = MapBranch_id.toString();
        //Rev work close 22.07.2022 mantise no:25068 Project Master creation by tagging multiple Branch, is not working properly.
        obj.Proj_Hierarchy = $("#ddlHierarchy").val();
        //{
        //    obj.Doc_No = "Auto"
        //}
        //if ($("#Proj_Code").val() == "")
        //{
        //    jAlert("Please Enter Project Code.");
        //    $("#Proj_Code").focus();
        //    return false;
        //}

        if (($("#ddlNumbscheme").val() == "0") && ($("#ProjId").val() == "")) {
            jAlert("Please Select Numbering Scheme.");
            $("#ddlNumbscheme").focus();
            return false;
        }

        if ($("#ddlNumbscheme").val().split('~')[1] == "0") {
            if ($("#Proj_Code").val() == "") {
                jAlert("Please Select Project Code.");
                $("#Proj_Code").focus();
                return false;
            }
        }


        if ($("#Proj_Name").val() == "") {
            jAlert("Please Enter Project Name.");
            $("#Proj_Name").focus();
            return false;
        }
        if ($("#CustomerId").val() == "") {
            jAlert("Please Enter Customer Name.");
            $("#CustomerId").focus();
            return false;
        }
        if ($("#ddlBranch").val() == "0") {
            jAlert("Please Select Unit.");
            $("#ddlBranch").focus();
            return false;
        }

        if (StartDate_dt.GetDate() > EndDate_dt.GetDate()) {
            jAlert("Estimated start date cannot be greater than end date.");
            EndDate_dt.SetFocus();
            return false;
        }
        if (ActualStartDate_dt.GetDate() > ActualEndDate_dt.GetDate()) {
            jAlert("Actual start date cannot be greater than end date.");
            ActualEndDate_dt.SetFocus();
            return false;
        }

        obj.ProjectStatus = $("#HdnProjectapprovalstatus").val();


        obj.SaveTerms_DefectLibilityPeriodDate = Terms_DefectLibilityPeriodDate.GetDate();
        obj.SaveTerms_DefectLibilityPeriodToDate = Terms_DefectLibilityPeriodToDate.GetDate();

        obj.SaveTerms_DefectLibilityPeriodRemarks = $("#Terms_DefectLibilityPeriodRemarks").val();
        obj.SaveTerms_LiqDamage = $("#Terms_LiqDamage").val();
        obj.SaveTerms_LiqDamageAppDate = Terms_LiqDamageAppDate.GetDate();
        obj.SaveTerms_Payment = $("#Terms_Payment").val();
        obj.SaveTerms_OrderType = $("#Terms_OrderType").val();
        obj.SaveTerms_NatureWork = $("#Terms_NatureWork").val();


        $.ajax({
            type: "POST",
            url: '@Url.Action("SaveData", "Project")',
            //data: { Project: obj },
            data: JSON.stringify({ Project: obj }),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (response) {
                debugger;
                if (response != '') {
                    var outputValue = response.split("~");

                    if ((outputValue[1] == "1") || (outputValue[1] == "2")) {

                        if (outputValue[1] == "1") {                            
                           jAlert(outputValue[0]);                           
                        }
                        else if (outputValue[1] == "2") {
                           jAlert("Project Modified Successfully.");                             
                        }

                        $("#Proj_Name").val('');
                        $("#Proj_Description").val('');
                        $("#CustomerId").val(0);
                        $("#CustomerTxt").val('');
                        $("#ddlBranch").val(0);
                        $("#ddlPManager").val(0);
                        $("#ddlStatus").val(0);
                        $("#StartDate_dt").val('');
                        $("#EndDate_dt").val('');
                        $("#Proj_Estimatehours").val('');
                        $("#Proj_EstimatelabourCost").val('');
                        $("#Proj_EstimateExpenseCost").val('');
                        $("#proj_EstimateTotCost").val('');
                        $("#ActualStartDate_dt").val('');
                        $("#ActualEndDate_dt").val('');
                        $("#ProjId").val("");
                        $("#ddlHierarchy").val(0);
                        //projectCode.toString() = "";
                        projectCode = [];
                        projectCode.length = 0;
                        MapBranch_id = [];
                        MapBranch_id.length = 0;
                        $("#projectMod").modal('hide');
                        gridProjectList.Refresh();
                        gridProjectList.Refresh();
                        //Rev work start 22.07.2022 mantise no:25068 Project Master creation by tagging multiple Branch, is not working properly.                                         
                        window.location.href = "/Project/ProjectView";
                        //Rev work close 22.07.2022 mantise no:25068 Project Master creation by tagging multiple Branch, is not working properly.
                    }
                    else if (outputValue[1] == "-10") {
                        jAlert("Document is used in other modules. It can't remove.");
                    }

                }
            },
            error: function (response) {

                jAlert("Please try again later");

            }
        });       
    }
    function ChkPad2DigitCount(e) {
        var data = parseInt($(e).val());
        $(e).val((data < 10 ? '0' : '') + data);

    }
    var inputQuantity = [];
    $(function () {
        $(".quantity").each(function (i) {
            inputQuantity[i] = this.defaultValue;
            $(this).data("idx", i); // save this field's index to access later
        });
        $(".quantity").on("keyup", function (e) {
            var $field = $(this),
                val = this.value,
                $thisIndex = parseInt($field.data("idx"), 10); // retrieve the index
            //        window.console && console.log($field.is(":invalid"));
            //  $field.is(":invalid") is for Safari, it must be the last to not error in IE8
            if (this.validity && this.validity.badInput || isNaN(val) || $field.is(":invalid")) {
                this.value = inputQuantity[$thisIndex];
                return;
            }
            if (val.length > Number($field.attr("maxlength"))) {
                val = val.slice(0, 5);
                $field.val(val);
            }
            inputQuantity[$thisIndex] = val;
        });
    });

    function gridRowclick(s, e) {
        $('#gridProjectList, TermsConitionsPartial').find('tr').removeClass('rowActive');
        $('.floatedBtnArea').removeClass('insideGrid');
        //$('.floatedBtnArea a .ico').css({ 'opacity': '0' });
        $(s.GetRow(e.visibleIndex)).find('.floatedBtnArea').addClass('insideGrid');
        $(s.GetRow(e.visibleIndex)).addClass('rowActive');
        setTimeout(function () {
            //alert('delay');
            var lists = $(s.GetRow(e.visibleIndex)).find('.floatedBtnArea a');
            //$(s.GetRow(e.visibleIndex)).find('.floatedBtnArea a .ico').css({'opacity': '1'});
            //$(s.GetRow(e.visibleIndex)).find('.floatedBtnArea a').each(function (e) {
            //    setTimeout(function () {
            //        $(this).fadeIn();
            //    }, 100);
            //});
            $.each(lists, function (index, value) {
                //console.log(index);
                //console.log(value);
                setTimeout(function () {
                    $(value).css({ 'opacity': '1' });
                }, 100);
            });
        }, 200);
    }
    function gridRowclickforterms(s, e) {
        $('#TermsConitionsPartial').find('tr').removeClass('rowActive');
        $('.floatedBtnArea').removeClass('insideGrid');
        //$('.floatedBtnArea a .ico').css({ 'opacity': '0' });
        $(s.GetRow(e.visibleIndex)).find('.floatedBtnArea').addClass('insideGrid');
        $(s.GetRow(e.visibleIndex)).addClass('rowActive');
        setTimeout(function () {
            //alert('delay');
            var lists = $(s.GetRow(e.visibleIndex)).find('.floatedBtnArea a');
            //$(s.GetRow(e.visibleIndex)).find('.floatedBtnArea a .ico').css({'opacity': '1'});
            //$(s.GetRow(e.visibleIndex)).find('.floatedBtnArea a').each(function (e) {
            //    setTimeout(function () {
            //        $(this).fadeIn();
            //    }, 100);
            //});
            $.each(lists, function (index, value) {
                //console.log(index);
                //console.log(value);
                setTimeout(function () {
                    $(value).css({ 'opacity': '1' });
                }, 100);
            });
        }, 200);
    }

    $(document).ready(function () {
        if ($('body').hasClass('mini-navbar')) {
            var windowWidth = $(window).width();
            var cntWidth = windowWidth - 90;
            gridProjectList.SetWidth(cntWidth);
        } else {
            var windowWidth = $(window).width();
            var cntWidth = windowWidth - 220;
            gridProjectList.SetWidth(cntWidth);
        }

        $('.navbar-minimalize').click(function () {
            if ($('body').hasClass('mini-navbar')) {
                var windowWidth = $(window).width();
                var cntWidth = windowWidth - 220;
                gridProjectList.SetWidth(cntWidth);
            } else {
                var windowWidth = $(window).width();
                var cntWidth = windowWidth - 90;
                gridProjectList.SetWidth(cntWidth);
            }

        });
    });

</script>





<div class="panel-heading clearfix">
    <div class="panel-title clearfix pull-left" id="myDiv">
        <h3 class="pull-left">
            <label>Project</label>
        </h3>
    </div>
</div>


<div class="form_main">
    <div class="clearfix">
        @if (ViewBag.CanAdd)
        {
            <button class="btn btn-success btn-radius" data-toggle="modal" data-target="#projectMod" data-backdrop="static" data-keyboard="false" onclick="OpenADDProject();">
                <span class="btn-icon"><i class="fa fa-plus"></i></span>Project
            </button>
        }
        @if (ViewBag.CanExport)
        {
            <select name="ddlAppIds" class="btn btn-radius btn-primary" id="ddlAppIds">
                <option value="0">Export to</option>
                <option value="1">PDF</option>
                <option value="2">XLSX</option>
                <option value="3">XLS</option>
                <option value="4">RTF</option>
                <option value="5">CSV</option>

            </select>
        }
    </div>
    <div class="scrooler">
        <div id="refreshgrid" class="relative">
            @{
                Html.RenderAction("GetProjectPartial", "Project");
            }
        </div>
    </div>
</div>





<input type="hidden" id="ProjId" />
<input type="hidden" id="ProIdCanRemarks" />
<div class="modal fade pmsModal w90 Projectmodaltype" id="projectMod" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabelForAdd" style="display:none">Add Project  </h5>
                <h5 class="modal-title" id="exampleModalLabelForModify" style="display:none">Modify Project  </h5>
                <h5 class="modal-title" id="exampleModalLabelForView" style="display:none">View Project  </h5>
                <h5 class="modal-title" id="exampleModalLabelForApproval" style="display:none">Approval</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" onclick="ModelHide()">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="clearfix">
                    <ul class="widgetizeForm" id="projectProgress">
                        <li id="liNew" class="parentLi ready on">
                            <span class="parentLabel "></span>
                            <div class="clsProgressTle">New</div>
                            <ul class="widgetDrop">
                                <li>
                                    <div class="dropContent">
                                        <span class="arrow-up"></span>
                                        <div class="dropContent-HD">New <i class="fa fa-close closeDropCont"></i></div>
                                        <div class="pmsForm dropContent-body">
                                            <div class="form-group row">
                                                <label for="" class="col-sm-4 col-form-label">Name</label>
                                                <div class="col-sm-8">
                                                    <input type="text" class="form-control" id="NewNm" value="">
                                                </div>
                                            </div>
                                            <div class="formLine"></div>
                                            <div class="form-group row">
                                                <label for="" class="col-sm-4 col-form-label">Description</label>
                                                <div class="col-sm-8">
                                                    <textarea rows="5" id="NewDesc"></textarea>
                                                </div>
                                            </div>
                                            <div class="formLine"></div>
                                            <div class="form-group row">
                                                <label for="" class="col-sm-4 col-form-label">Customer</label>
                                                <div class="col-sm-8">
                                                    <input type="text" class="form-control" id="NewCust">
                                                </div>
                                            </div>
                                            @*Mantis Issue 25051*@
                                            @if (@Model.ShowAddlDetlInProjMast != "No" )
                                            {
                                            @* End of Mantis Issue 25051*@
                                                <button class="btn btn-success btn-full  nextStage act">Go to Next</button>
                                            @*Mantis Issue 25051*@
                                            }
                                            else
                                            {
                                                <button class="btn btn-success btn-full  nextStage act hide">Go to Next</button>
                                            }
                                            @* End of Mantis Issue 25051*@
                                        </div>

                                    </div>
                                </li>
                            </ul>
                        </li>
                       @*Mantis Issue 25051*@
                        @if (@Model.ShowAddlDetlInProjMast != "No" )
                        {
                       @* End of Mantis Issue 25051*@
                             <li id="liQualify" class="parentLi">
                                <span class="parentLabel"></span>
                                <div class="clsProgressTle">Qualify </div>
                                <ul class="widgetDrop ">
                                    <li>
                                        <div class="dropContent">
                                            <span class="arrow-up"></span>
                                            <div class="dropContent-HD">Qualify <i class="fa fa-close closeDropCont"></i></div>
                                            <div class="pmsForm dropContent-body">
                                                <div class="form-group row">
                                                    <label for="" class="col-sm-4 col-form-label">Name</label>
                                                    <div class="col-sm-8">
                                                        <input type="text" class="form-control" id="QuaNm" value="">
                                                    </div>
                                                </div>
                                                <div class="formLine"></div>
                                                <div class="form-group row">
                                                    <label for="" class="col-sm-4 col-form-label">Description</label>
                                                    <div class="col-sm-8">
                                                        <textarea rows="5" id="QuaDesc"></textarea>
                                                    </div>
                                                </div>
                                                <div class="formLine"></div>
                                                <div class="form-group row">
                                                    <label for="" class="col-sm-4 col-form-label">Customer</label>
                                                    <div class="col-sm-8">
                                                        <input type="text" class="form-control" id="QuaCust">
                                                    </div>
                                                </div>
                                                <button class="btn btn-success btn-full act nextStage">Go to Next</button>
                                            </div>

                                        </div>
                                    </li>
                                </ul>
                            </li>
                            <li id="liPlanning" class="parentLi">
                                <span class="parentLabel"></span>
                                <div class="clsProgressTle">Planning</div>
                                <ul class="widgetDrop ">
                                    <li>
                                        <div class="dropContent">
                                            <span class="arrow-up"></span>
                                            <div class="dropContent-HD">Planning <i class="fa fa-close closeDropCont"></i></div>
                                            <div class="pmsForm dropContent-body">
                                                <div class="form-group row">
                                                    <label for="" class="col-sm-4 col-form-label">Name</label>
                                                    <div class="col-sm-8">
                                                        <input type="text" class="form-control" id="PlanningNm" value="">
                                                    </div>
                                                </div>
                                                <div class="formLine"></div>
                                                <div class="form-group row">
                                                    <label for="" class="col-sm-4 col-form-label">Description</label>
                                                    <div class="col-sm-8">
                                                        <textarea rows="5" id="PlanningDesc"></textarea>
                                                    </div>
                                                </div>
                                                <div class="formLine"></div>
                                                <div class="form-group row">
                                                    <label for="" class="col-sm-4 col-form-label">Customer</label>
                                                    <div class="col-sm-8">
                                                        <input type="text" class="form-control" id="PlanningCust">
                                                    </div>
                                                </div>
                                                <button class="btn btn-success btn-full act nextStage">Go to Next</button>
                                            </div>

                                        </div>
                                    </li>
                                </ul>
                            </li>
                            <li id="liExe" class="parentLi">
                                <span class="parentLabel"></span>
                                <div class="clsProgressTle">Execution</div>
                                <ul class="widgetDrop ">
                                    <li>
                                        <div class="dropContent">
                                            <span class="arrow-up"></span>
                                            <div class="dropContent-HD">Execution <i class="fa fa-close closeDropCont"></i></div>
                                            <div class="pmsForm dropContent-body">
                                                <div class="form-group row">
                                                    <label for="" class="col-sm-4 col-form-label">Name</label>
                                                    <div class="col-sm-8">
                                                        <input type="text" class="form-control" id="executionNm" value="">
                                                    </div>
                                                </div>
                                                <div class="formLine"></div>
                                                <div class="form-group row">
                                                    <label for="" class="col-sm-4 col-form-label">Description</label>
                                                    <div class="col-sm-8">
                                                        <textarea rows="5" id="executionDesc"></textarea>
                                                    </div>
                                                </div>
                                                <div class="formLine"></div>
                                                <div class="form-group row">
                                                    <label for="" class="col-sm-4 col-form-label">Customer</label>
                                                    <div class="col-sm-8">
                                                        <input type="text" class="form-control" id="executionCust">
                                                    </div>
                                                </div>
                                                <button class="btn btn-success btn-full act nextStage">Go to Next</button>
                                            </div>

                                        </div>
                                    </li>
                                </ul>
                            </li>
                            <li id="liDeliver" class="parentLi">
                                <span class="parentLabel"></span>
                                <div class="clsProgressTle">Deliver</div>
                                <ul class="widgetDrop ">
                                    <li>
                                        <div class="dropContent">
                                            <span class="arrow-up"></span>
                                            <div class="dropContent-HD">Deliver <i class="fa fa-close closeDropCont"></i></div>
                                            <div class="pmsForm dropContent-body">
                                                <div class="form-group row">
                                                    <label for="" class="col-sm-4 col-form-label">Name</label>
                                                    <div class="col-sm-8">
                                                        <input type="text" class="form-control" id="DeliverNm" value="">
                                                    </div>
                                                </div>
                                                <div class="formLine"></div>
                                                <div class="form-group row">
                                                    <label for="" class="col-sm-4 col-form-label">Description</label>
                                                    <div class="col-sm-8">
                                                        <textarea rows="5" id="DeliverDesc"></textarea>
                                                    </div>
                                                </div>
                                                <div class="formLine"></div>
                                                <div class="form-group row">
                                                    <label for="" class="col-sm-4 col-form-label">Customer</label>
                                                    <div class="col-sm-8">
                                                        <input type="text" class="form-control" id="DeliverCust">
                                                    </div>
                                                </div>
                                                <button class="btn btn-success btn-full act nextStage">Go to Next</button>
                                            </div>

                                        </div>
                                    </li>
                                </ul>
                            </li>
                            <li id="liComplete" class="parentLi">
                                <span class="parentLabel"></span>
                                <div class="clsProgressTle">Complete</div>
                                <ul class="widgetDrop ">
                                    <li>
                                        <div class="dropContent">
                                            <span class="arrow-up"></span>
                                            <div class="dropContent-HD">Complete <i class="fa fa-close closeDropCont"></i></div>
                                            <div class="pmsForm dropContent-body">
                                                <div class="form-group row">
                                                    <label for="" class="col-sm-4 col-form-label">Name</label>
                                                    <div class="col-sm-8">
                                                        <input type="text" class="form-control" id="CompleteNm" value="">
                                                    </div>
                                                </div>
                                                <div class="formLine"></div>
                                                <div class="form-group row">
                                                    <label for="" class="col-sm-4 col-form-label">Description</label>
                                                    <div class="col-sm-8">
                                                        <textarea rows="5" id="CompleteDesc"></textarea>
                                                    </div>
                                                </div>
                                                <div class="formLine"></div>
                                                <div class="form-group row">
                                                    <label for="" class="col-sm-4 col-form-label">Customer</label>
                                                    <div class="col-sm-8">
                                                        <input type="text" class="form-control" id="CompleteCust">
                                                    </div>
                                                </div>
                                                <button class="btn btn-success btn-full act nextStage">Go to Next</button>
                                            </div>

                                        </div>
                                    </li>
                                </ul>
                            </li>
                            <li id="liClose" class="parentLi">
                                <span class="parentLabel"></span>
                                <div class="clsProgressTle">Close</div>
                                <ul class="widgetDrop ">
                                    <li>
                                        <div class="dropContent">
                                            <span class="arrow-up"></span>
                                            <div class="dropContent-HD">Close <i class="fa fa-close closeDropCont"></i></div>
                                            <div class="pmsForm dropContent-body">
                                                <div class="form-group row">
                                                    <label for="" class="col-sm-4 col-form-label">Name</label>
                                                    <div class="col-sm-8">
                                                        <input type="text" class="form-control" id="CloseNm" value="">
                                                    </div>
                                                </div>
                                                <div class="formLine"></div>
                                                <div class="form-group row">
                                                    <label for="" class="col-sm-4 col-form-label">Description</label>
                                                    <div class="col-sm-8">
                                                        <textarea rows="5" id="CloseDesc"></textarea>
                                                    </div>
                                                </div>
                                                <div class="formLine"></div>
                                                <div class="form-group row">
                                                    <label for="" class="col-sm-4 col-form-label">Customer</label>
                                                    <div class="col-sm-8">
                                                        <input type="text" class="form-control" id="CloseCust">
                                                    </div>
                                                </div>
                                                <button class="btn btn-success btn-full act nextStage" id="btnFinish">Finish</button>
                                            </div>

                                        </div>
                                    </li>
                                </ul>
                            </li>
                        @* Mantis Issue 25051*@
                        }
                        else
                        {
                            <li id="liQualify" class=" hide parentLi">
                                <span class="parentLabel"></span>
                                <div class="clsProgressTle">Qualify </div>
                                <ul class="widgetDrop ">
                                    <li>
                                        <div class="dropContent">
                                            <span class="arrow-up"></span>
                                            <div class="dropContent-HD">Qualify <i class="fa fa-close closeDropCont"></i></div>
                                            <div class="pmsForm dropContent-body">
                                                <div class="form-group row">
                                                    <label for="" class="col-sm-4 col-form-label">Name</label>
                                                    <div class="col-sm-8">
                                                        <input type="text" class="form-control" id="QuaNm" value="">
                                                    </div>
                                                </div>
                                                <div class="formLine"></div>
                                                <div class="form-group row">
                                                    <label for="" class="col-sm-4 col-form-label">Description</label>
                                                    <div class="col-sm-8">
                                                        <textarea rows="5" id="QuaDesc"></textarea>
                                                    </div>
                                                </div>
                                                <div class="formLine"></div>
                                                <div class="form-group row">
                                                    <label for="" class="col-sm-4 col-form-label">Customer</label>
                                                    <div class="col-sm-8">
                                                        <input type="text" class="form-control" id="QuaCust">
                                                    </div>
                                                </div>
                                                <button class="btn btn-success btn-full act nextStage">Go to Next</button>
                                            </div>

                                        </div>
                                    </li>
                                </ul>
                            </li>
                            <li id="liPlanning" class="parentLi hide" >
                                <span class="parentLabel"></span>
                                <div class="clsProgressTle">Planning</div>
                                <ul class="widgetDrop ">
                                    <li>
                                        <div class="dropContent">
                                            <span class="arrow-up"></span>
                                            <div class="dropContent-HD">Planning <i class="fa fa-close closeDropCont"></i></div>
                                            <div class="pmsForm dropContent-body">
                                                <div class="form-group row">
                                                    <label for="" class="col-sm-4 col-form-label">Name</label>
                                                    <div class="col-sm-8">
                                                        <input type="text" class="form-control" id="PlanningNm" value="">
                                                    </div>
                                                </div>
                                                <div class="formLine"></div>
                                                <div class="form-group row">
                                                    <label for="" class="col-sm-4 col-form-label">Description</label>
                                                    <div class="col-sm-8">
                                                        <textarea rows="5" id="PlanningDesc"></textarea>
                                                    </div>
                                                </div>
                                                <div class="formLine"></div>
                                                <div class="form-group row">
                                                    <label for="" class="col-sm-4 col-form-label">Customer</label>
                                                    <div class="col-sm-8">
                                                        <input type="text" class="form-control" id="PlanningCust">
                                                    </div>
                                                </div>
                                                <button class="btn btn-success btn-full act nextStage">Go to Next</button>
                                            </div>

                                        </div>
                                    </li>
                                </ul>
                            </li>
                            <li id="liExe" class=" hide parentLi ">
                                <span class="parentLabel"></span>
                                <div class="clsProgressTle">Execution</div>
                                <ul class="widgetDrop ">
                                    <li>
                                        <div class="dropContent">
                                            <span class="arrow-up"></span>
                                            <div class="dropContent-HD">Execution <i class="fa fa-close closeDropCont"></i></div>
                                            <div class="pmsForm dropContent-body">
                                                <div class="form-group row">
                                                    <label for="" class="col-sm-4 col-form-label">Name</label>
                                                    <div class="col-sm-8">
                                                        <input type="text" class="form-control" id="executionNm" value="">
                                                    </div>
                                                </div>
                                                <div class="formLine"></div>
                                                <div class="form-group row">
                                                    <label for="" class="col-sm-4 col-form-label">Description</label>
                                                    <div class="col-sm-8">
                                                        <textarea rows="5" id="executionDesc"></textarea>
                                                    </div>
                                                </div>
                                                <div class="formLine"></div>
                                                <div class="form-group row">
                                                    <label for="" class="col-sm-4 col-form-label">Customer</label>
                                                    <div class="col-sm-8">
                                                        <input type="text" class="form-control" id="executionCust">
                                                    </div>
                                                </div>
                                                <button class="btn btn-success btn-full act nextStage">Go to Next</button>
                                            </div>

                                        </div>
                                    </li>
                                </ul>
                            </li>
                            <li id="liDeliver" class="parentLi hide" >
                                <span class="parentLabel"></span>
                                <div class="clsProgressTle">Deliver</div>
                                <ul class="widgetDrop ">
                                    <li>
                                        <div class="dropContent">
                                            <span class="arrow-up"></span>
                                            <div class="dropContent-HD">Deliver <i class="fa fa-close closeDropCont"></i></div>
                                            <div class="pmsForm dropContent-body">
                                                <div class="form-group row">
                                                    <label for="" class="col-sm-4 col-form-label">Name</label>
                                                    <div class="col-sm-8">
                                                        <input type="text" class="form-control" id="DeliverNm" value="">
                                                    </div>
                                                </div>
                                                <div class="formLine"></div>
                                                <div class="form-group row">
                                                    <label for="" class="col-sm-4 col-form-label">Description</label>
                                                    <div class="col-sm-8">
                                                        <textarea rows="5" id="DeliverDesc"></textarea>
                                                    </div>
                                                </div>
                                                <div class="formLine"></div>
                                                <div class="form-group row">
                                                    <label for="" class="col-sm-4 col-form-label">Customer</label>
                                                    <div class="col-sm-8">
                                                        <input type="text" class="form-control" id="DeliverCust">
                                                    </div>
                                                </div>
                                                <button class="btn btn-success btn-full act nextStage">Go to Next</button>
                                            </div>

                                        </div>
                                    </li>
                                </ul>
                            </li>
                            <li id="liComplete" class="parentLi hide" >
                                <span class="parentLabel"></span>
                                <div class="clsProgressTle">Complete</div>
                                <ul class="widgetDrop ">
                                    <li>
                                        <div class="dropContent">
                                            <span class="arrow-up"></span>
                                            <div class="dropContent-HD">Complete <i class="fa fa-close closeDropCont"></i></div>
                                            <div class="pmsForm dropContent-body">
                                                <div class="form-group row">
                                                    <label for="" class="col-sm-4 col-form-label">Name</label>
                                                    <div class="col-sm-8">
                                                        <input type="text" class="form-control" id="CompleteNm" value="">
                                                    </div>
                                                </div>
                                                <div class="formLine"></div>
                                                <div class="form-group row">
                                                    <label for="" class="col-sm-4 col-form-label">Description</label>
                                                    <div class="col-sm-8">
                                                        <textarea rows="5" id="CompleteDesc"></textarea>
                                                    </div>
                                                </div>
                                                <div class="formLine"></div>
                                                <div class="form-group row">
                                                    <label for="" class="col-sm-4 col-form-label">Customer</label>
                                                    <div class="col-sm-8">
                                                        <input type="text" class="form-control" id="CompleteCust">
                                                    </div>
                                                </div>
                                                <button class="btn btn-success btn-full act nextStage">Go to Next</button>
                                            </div>

                                        </div>
                                    </li>
                                </ul>
                            </li>
                            <li id="liClose" class="parentLi hide" >
                                <span class="parentLabel"></span>
                                <div class="clsProgressTle">Close</div>
                                <ul class="widgetDrop ">
                                    <li>
                                        <div class="dropContent">
                                            <span class="arrow-up"></span>
                                            <div class="dropContent-HD">Close <i class="fa fa-close closeDropCont"></i></div>
                                            <div class="pmsForm dropContent-body">
                                                <div class="form-group row">
                                                    <label for="" class="col-sm-4 col-form-label">Name</label>
                                                    <div class="col-sm-8">
                                                        <input type="text" class="form-control" id="CloseNm" value="">
                                                    </div>
                                                </div>
                                                <div class="formLine"></div>
                                                <div class="form-group row">
                                                    <label for="" class="col-sm-4 col-form-label">Description</label>
                                                    <div class="col-sm-8">
                                                        <textarea rows="5" id="CloseDesc"></textarea>
                                                    </div>
                                                </div>
                                                <div class="formLine"></div>
                                                <div class="form-group row">
                                                    <label for="" class="col-sm-4 col-form-label">Customer</label>
                                                    <div class="col-sm-8">
                                                        <input type="text" class="form-control" id="CloseCust">
                                                    </div>
                                                </div>
                                                <button class="btn btn-success btn-full act nextStage" id="btnFinish">Finish</button>
                                            </div>

                                        </div>
                                    </li>
                                </ul>
                            </li>
                        }
                        @* End of Mantis Issue 25051*@
                        
                        
                    </ul>
                </div>
                <h5 class="mTop0 clearfix" style="border-top: 1px dashed #c3c1c1;margin-top: 7px;padding-top: 8px;">
                    <div class="col-sm-2">
                        <span class="tabLikeLink">Summary</span>
                    </div>


                </h5>


                <div class="clearfix">
                    <div class="row">
                        @*Mantis Issue 25051*@
                        @if (@Model.ShowAddlDetlInProjMast != "No")
                        {
                        @* End of Mantis Issue 25051*@
                            <div class="col-sm-4">
                                <div class="mutiFMbox">
                                    <h5>General</h5>
                                    <div class="pmsForm">

                                        <div class="form-group row" id="dvNumberscheme">
                                            <label for="" class="col-sm-4 col-form-label">Numbering Scheme</label>
                                            <div class="col-sm-8">
                                                @*<input type="text" class="form-control" id="" value="email@example.com">*@
                                                @Html.DropDownListFor(x => x.ddlClass, new SelectList(Model.ddlClass, "Id", "Name"), new { @id = "ddlNumbscheme", @class = "form-control", @onchange = "selectchangeOfBranch();" })
                                            </div>
                                        </div>
                                        <div class="form-group row">
                                            <label for="" class="col-sm-4 col-form-label">Code</label>
                                            <div class="col-sm-8">
                                                @*<input type="text" class="form-control" id="" value="email@example.com">*@
                                                @Html.TextBoxFor(m => m.Proj_Code, new { @class = "form-control", @id = "Proj_Code", @onchange = "CheckuniqueCode();", @maxlength = "20" })
                                            </div>
                                        </div>
                                        <div class="form-group row">
                                            <label for="" class="col-sm-4 col-form-label">Name<span style="color: red"> *</span></label>
                                            <div class="col-sm-8">
                                                @*<input type="text" class="form-control" id="" value="email@example.com">*@
                                                @Html.TextBoxFor(m => m.Proj_Name, new { @class = "form-control", @id = "Proj_Name" })
                                            </div>
                                        </div>
                                        <div class="formLine"></div>
                                        <div class="form-group row">
                                            <label for="" class="col-sm-4 col-form-label">Description</label>
                                            <div class="col-sm-8">
                                                @Html.TextAreaFor(m => m.Proj_Description, new { @class = "form-control", @id = "Proj_Description" })
                                            </div>
                                        </div>
                                        <div class="formLine"></div>
                                        <div class="form-group row">
                                            <label for="" class="col-sm-4 col-form-label">Customer<span style="color: red"> *</span> 
                                             <i style="font-size: 15px; margin: 6px; color: #53904f;" id="openlink" class="fa fa-plus-circle" aria-hidden="true"></i>
                                            </label>
                                       
                                        
                                            @*@Html.DevExpress().ButtonEdit(
                                                settings =>
                                                {
                                                    settings.Name = "buttonEdit1";

                                                    settings.Text = "Some text";
                                                    settings.Width = 200;
                                                    settings.Properties.Buttons.Add("Clear");
                                                    settings.Properties.Buttons.Add("Fill");
                                                    settings.Properties.ClientSideEvents.ButtonClick = "CustomerButnClick";
                                                    settings.Properties.ClientSideEvents.KeyDown = "Customer_KeyDown";
                                                }).GetHtml()*@
                                            <div class="col-sm-8">
                                                @*<select class="form-control">
                                                        <option>Select</option>
                                                    </select>*@
                                                @*@Html.DevExpress().ButtonEdit(
                                                    settings =>
                                                    {
                                                        settings.Name = "Customer";

                                                        DevExpress.Web.ButtonEditProperties ButtonEditProperties = settings.PropertiesEdit as DevExpress.Web.ButtonEditProperties;
                                                        ButtonEditProperties.ClientSideEvents.ButtonClick = "CustomerButnClick";
                                                        ButtonEditProperties.ClientSideEvents.KeyDown = "Customer_KeyDown";

                                                        ButtonEditProperties.Width = System.Web.UI.WebControls.Unit.Percentage(100);

                                                    }).GetHtml()*@


                                                @Html.DevExpress().ButtonEdit(
                                                 settings =>
                                                 {
                                                     settings.Name = "CustomerTxt";
                                                     settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                                                     //settings.Text = Model.FinishedItemName;
                                                     settings.ReadOnly = true;
                                                     settings.Properties.Buttons.Add("...");
                                                     settings.ControlStyle.CssClass = "dateEditInput";
                                                     settings.Properties.ClientSideEvents.ButtonClick = "function(s,e){CustomerButnClick(s,e);}";
                                                     settings.Properties.ClientSideEvents.KeyDown = "function(s,e){Customer_KeyDown(s,e);}";

                                                 }).GetHtml()

                                                <input type="hidden" id="txtContact_hidden">
                                                <input type="hidden" id="CustomerId">
                                                @*<dxe:ASPxButtonEdit ID="lstContactBy" runat="server" ReadOnly="true" ClientInstanceName="ClstContactBy" Width="200px">
                                                        <buttons>
                                                            <dxe:editbutton>
                                                            </dxe:editbutton>
                                                        </buttons>
                                                        <clientsideevents buttonclick="function(s,e){CustomerButnClick();}" keydown="function(s,e){Customer_KeyDown(s,e);}" />
                                                    </dxe:ASPxButtonEdit>
                                                    <asp:HiddenField ID="txtContact_hidden" runat="server" />
                                                    <asp:HiddenField ID="CustomerId" runat="server" />*@
                                            </div>
                                        </div>
                                        <div class="formLine"></div>
                                        @*<div class="form-group row">
                                                <label for="" class="col-sm-4 col-form-label">Currency</label>
                                                <div class="col-sm-8">
                                                    <select class="form-control">
                                                        <option>Select</option>
                                                    </select>
                                                </div>
                                            </div>*@

                                        <div class="form-group row">
                                            <label for="" class="col-sm-4 col-form-label">Calender</label>
                                            <div class="col-sm-8">
                                                <select class="form-control" id="drdCal">
                                                    <option value="0" selected="selected">Select</option>
                                                    <option value="1">Calender</option>
                                                </select>
                                            </div>
                                        </div>
                                        <div class="formLine"></div>
                                        <div class="form-group row">
                                            <label for="" class="col-sm-4 col-form-label">Unit<span style="color: red"> *</span></label>
                                            <div class="col-sm-8" id="drdUnit">
                                                @Html.DropDownListFor(x => x.BranchList, new SelectList(Model.BranchList, "branch_id", "branch_description"), new { @id = "ddlBranch", @class = "form-control" })
                                            </div>
                                            <div class="col-sm-8" id="dvProjectbrnach">
                                                @Html.Action("GetBranchList", "Project")

                                            </div>
                                        </div>
                                        <div class="formLine"></div>
                                        <div class="form-group row">
                                            <label for="" class="col-sm-4 col-form-label">Project Manager</label>
                                            <div class="col-sm-8">
                                                @Html.DropDownListFor(x => x.ProjectManagerList, new SelectList(Model.ProjectManagerList, "Promanager_id", "Promanager_Name"), new { @id = "ddlPManager", @class = "form-control" })
                                            </div>
                                        </div>
                                        <div class="formLine"></div>
                                        <div class="form-group row">
                                            <label for="" class="col-sm-4 col-form-label">Overall Project Status</label>
                                            <div class="col-sm-8">
                                                <select class="form-control" id="drdStatus">
                                                    <option value="0" selected="selected">Select</option>
                                                    <option value="1">Green</option>
                                                    <option value="2">Yellow</option>
                                                    <option value="3">Started</option>
                                                    <option value="4">Red</option>
                                                </select>
                                                @*@Html.DropDownListFor(x => x.StatusList, new SelectList(Model.StatusList, "STATUS_ID", "STATUS_NAME"), new { @id = "ddlStatus", @class = "form-control" })*@
                                            </div>
                                        </div>
                                        <div class="formLine"></div>
                                    
                                    </div>
                                </div>
                            </div>
                        
                            <div class="col-sm-4">
                                <div class="mutiFMbox">
                                    <h5>Estimates</h5>
                                    <div class="pmsForm">
                                        <div class="form-group row">
                                            <label for="" class="col-sm-4 col-form-label">Estimated Start Date</label>
                                            <div class="col-sm-8">
                                                @*<input type="text" class="form-control" id="" value="">*@
                                                @Html.DevExpress().DateEdit(
                                                      settings =>
                                                      {
                                                          settings.Name = "StartDate_dt";
                                                          settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                                                          settings.Properties.DisplayFormatString = "dd-MM-yyyy";
                                                          settings.Properties.EditFormatString = "dd-MM-yyyy";
                                                          settings.ControlStyle.CssClass = "dateEditInput";
                                                          settings.Properties.ClientSideEvents.GotFocus = "function(s, e) { s.ShowDropDown(); }";
                                                          settings.Date = DateTime.Now;
                                                      }
                                             ).GetHtml()
                                            </div>
                                        </div>
                                        <div class="formLine"></div>
                                        <div class="form-group row">
                                            <label for="" class="col-sm-4 col-form-label">Estimated End Date</label>
                                            <div class="col-sm-8">
                                                @*<input type="text" class="form-control" id="" value="">*@
                                                @Html.DevExpress().DateEdit(
                                                      settings =>
                                                      {
                                                          settings.Name = "EndDate_dt";
                                                          settings.Properties.DisplayFormatString = "dd-MM-yyyy";
                                                          settings.Properties.EditFormatString = "dd-MM-yyyy";
                                                          settings.Width = Unit.Percentage(100);
                                                          settings.ControlStyle.CssClass = "dateEditInput";
                                                          settings.Properties.ClientSideEvents.GotFocus = "function(s, e) { s.ShowDropDown(); }";
                                                          settings.Date = DateTime.Now;
                                                      }
                                             ).GetHtml()
                                            </div>
                                        </div>
                                        <div class="formLine"></div>
                                        <div class="form-group row">
                                            <label for="" class="col-sm-4 col-form-label">Estimated Hours</label>
                                            <div class="col-sm-8">
                                                <div class="row">
                                                    <div class="col-sm-6">
                                                        <input type="number" class="decimalCheck quantity form-control" placeholder="00" id="estHrs" min="00" max="99999" maxlength="5" onchange="ChkPad2DigitCount(this);">
                                                    </div>
                                                    <div class="col-sm-6">
                                                        <input type="number" class="decimalCheck quantity form-control" placeholder="00" id="estmm" min="00" max="59" maxlength="2" onchange="ChkPad2DigitCount(this);">
                                                    </div>
                                                </div>
                                                @*@Html.TextBoxFor(m => m.Proj_Estimatehours, new { @class = "form-control percent", @id = "Proj_Estimatehours", @Value = "00.00" })*@
                                                @*onkeypress="return validateFloatKeyPress(this,event)*@
                                            </div>
                                        </div>
                                        <div class="formLine"></div>
                                        <div class="form-group row">
                                            <label for="" class="col-sm-4 col-form-label">Estimated Labour Cost</label>
                                            <div class="col-sm-8">
                                                @*@Html.TextBoxFor(m => m.Proj_EstimatelabourCost, new { @class = "form-control", @id = "Proj_EstimatelabourCost", @onchange = "CalculateTotalCost();", @Value="0.00" })*@
                                                <input type="text" class="decimalCheck quantity form-control" placeholder="00" id="Proj_EstimatelabourCost" min="0" onchange="CalculateTotalCost();">
                                            </div>
                                        </div>
                                        <div class="formLine"></div>
                                        <div class="form-group row">
                                            <label for="" class="col-sm-4 col-form-label">Estimated Expense Cost</label>
                                            <div class="col-sm-8">
                                                @*@Html.TextBoxFor(m => m.Proj_EstimateExpenseCost, new { @class = "form-control", @id = "Proj_EstimateExpenseCost", @onchange = "CalculateTotalCost();", @Value = "0.00" })*@
                                                <input type="text" class="decimalCheck quantity form-control" placeholder="00" id="Proj_EstimateExpenseCost" min="0" onchange="CalculateTotalCost();">
                                            </div>
                                        </div>
                                        <div class="formLine"></div>
                                        <div class="form-group row">
                                            <label for="" class="col-sm-4 col-form-label">Estimated Total Cost</label>
                                            <div class="col-sm-8">
                                                @Html.TextBoxFor(m => m.proj_EstimateTotCost, new { @class = "form-control", @id = "proj_EstimateTotCost", @Value = "0.00" })


                                            </div>
                                        </div>
                                        <div class="formLine"></div>
                                        <div id="dvApproval" style="display:none">
                                            <div class="form-group row">
                                                <label for="" class="col-sm-4 col-form-label">Approved By</label>
                                                <div class="col-sm-8">
                                                    @Html.DropDownListFor(x => x.UserList, new SelectList(Model.UserList, "user_id", "user_name"), new { @id = "ddlUser", @class = "form-control" })


                                                </div>
                                            </div>
                                            <div class="formLine"></div>
                                            <div class="form-group row">
                                                <label for="" class="col-sm-4 col-form-label">Approved On</label>
                                                <div class="col-sm-8">
                                                    @Html.DevExpress().DateEdit(
                                                      settings =>
                                                      {
                                                          settings.Name = "Approved_dt";
                                                          settings.Properties.DisplayFormatString = "dd-MM-yyyy";
                                                          settings.Properties.EditFormatString = "dd-MM-yyyy";
                                                          settings.Width = Unit.Percentage(100);
                                                          settings.ControlStyle.CssClass = "dateEditInput";
                                                          settings.Properties.ClientSideEvents.GotFocus = "function(s, e) { s.ShowDropDown(); }";
                                                          settings.Date = DateTime.Now;
                                                      }
                                             ).GetHtml()

                                                </div>
                                            </div>
                                            <div class="formLine"></div>
                                            <div class="form-group row">
                                                <label for="" class="col-sm-4 col-form-label">Remarks</label>
                                                <div class="col-sm-8">
                                                    @Html.TextBoxFor(m => m.Remarks, new { @class = "form-control percent", @id = "Remarks" })
                                                    @*onkeypress="return validateFloatKeyPress(this,event)*@
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <div class="mutiFMbox mTop5">
                                    <h5>Reference Documents</h5>
                                    <div class="pmsForm">
                                        <div class="form-group row">
                                            <label for="" class="col-sm-4 col-form-label">Order Number</label>
                                            <div class="col-sm-8" id="dvProjectOrder">
                                                @Html.Action("GetSalesOrderList", "Project")

                                            </div>
                                        </div>
                                        <div class="form-group row">
                                            <label for="" class="col-sm-4 col-form-label">Hierarchy</label>
                                            <div class="col-sm-8">
                                                @*<select class="form-control" id="drdHier">
                        <option value="0" selected="selected">Select</option>
                    </select>*@
                                                @Html.DropDownListFor(x => x.Hierarchy_List, new SelectList(Model.Hierarchy_List, "Hierarchy_id", "Hierarchy_Name"), new { @id = "ddlHierarchy", @class = "form-control" })
                                            </div>
                                        </div>  
                                    </div>
                                </div>
                            </div>
                        @* Mantis Issue 25051*@
                        }
                        else
                        {
                            <div class="col-sm-12">
                                <div class="mutiFMbox">
                                    <h5>General</h5>
                                    <div class="pmsForm">

                                        <div class="form-group row" id="dvNumberscheme">
                                            <label for="" class="col-sm-4 col-form-label">Numbering Scheme</label>
                                            <div class="col-sm-8">
                                                @*<input type="text" class="form-control" id="" value="email@example.com">*@
                                                @Html.DropDownListFor(x => x.ddlClass, new SelectList(Model.ddlClass, "Id", "Name"), new { @id = "ddlNumbscheme", @class = "form-control", @onchange = "selectchangeOfBranch();" })
                                            </div>
                                        </div>
                                        <div class="form-group row">
                                            <label for="" class="col-sm-4 col-form-label">Code</label>
                                            <div class="col-sm-8">
                                                @*<input type="text" class="form-control" id="" value="email@example.com">*@
                                                @Html.TextBoxFor(m => m.Proj_Code, new { @class = "form-control", @id = "Proj_Code", @onchange = "CheckuniqueCode();", @maxlength = "20" })
                                            </div>
                                        </div>
                                        <div class="form-group row">
                                            <label for="" class="col-sm-4 col-form-label">Name<span style="color: red"> *</span></label>
                                            <div class="col-sm-8">
                                                @*<input type="text" class="form-control" id="" value="email@example.com">*@
                                                @Html.TextBoxFor(m => m.Proj_Name, new { @class = "form-control", @id = "Proj_Name" })
                                            </div>
                                        </div>
                                        <div class="formLine"></div>
                                        <div class="form-group row">
                                            <label for="" class="col-sm-4 col-form-label">Description</label>
                                            <div class="col-sm-8">
                                                @Html.TextAreaFor(m => m.Proj_Description, new { @class = "form-control", @id = "Proj_Description" })
                                            </div>
                                        </div>
                                        <div class="formLine"></div>
                                        <div class="form-group row">
                                            <label for="" class="col-sm-4 col-form-label">Customer<span style="color: red"> *</span> 
                                             <i style="font-size: 15px; margin: 6px; color: #53904f;" id="openlink" class="fa fa-plus-circle" aria-hidden="true"></i>
                                            </label>
                                       
                                        
                                            @*@Html.DevExpress().ButtonEdit(
                                                settings =>
                                                {
                                                    settings.Name = "buttonEdit1";

                                                    settings.Text = "Some text";
                                                    settings.Width = 200;
                                                    settings.Properties.Buttons.Add("Clear");
                                                    settings.Properties.Buttons.Add("Fill");
                                                    settings.Properties.ClientSideEvents.ButtonClick = "CustomerButnClick";
                                                    settings.Properties.ClientSideEvents.KeyDown = "Customer_KeyDown";
                                                }).GetHtml()*@
                                            <div class="col-sm-8">
                                                @*<select class="form-control">
                                                        <option>Select</option>
                                                    </select>*@
                                                @*@Html.DevExpress().ButtonEdit(
                                                    settings =>
                                                    {
                                                        settings.Name = "Customer";

                                                        DevExpress.Web.ButtonEditProperties ButtonEditProperties = settings.PropertiesEdit as DevExpress.Web.ButtonEditProperties;
                                                        ButtonEditProperties.ClientSideEvents.ButtonClick = "CustomerButnClick";
                                                        ButtonEditProperties.ClientSideEvents.KeyDown = "Customer_KeyDown";

                                                        ButtonEditProperties.Width = System.Web.UI.WebControls.Unit.Percentage(100);

                                                    }).GetHtml()*@


                                                @Html.DevExpress().ButtonEdit(
                                                 settings =>
                                                 {
                                                     settings.Name = "CustomerTxt";
                                                     settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                                                     //settings.Text = Model.FinishedItemName;
                                                     settings.ReadOnly = true;
                                                     settings.Properties.Buttons.Add("...");
                                                     settings.ControlStyle.CssClass = "dateEditInput";
                                                     settings.Properties.ClientSideEvents.ButtonClick = "function(s,e){CustomerButnClick(s,e);}";
                                                     settings.Properties.ClientSideEvents.KeyDown = "function(s,e){Customer_KeyDown(s,e);}";

                                                 }).GetHtml()

                                                <input type="hidden" id="txtContact_hidden">
                                                <input type="hidden" id="CustomerId">
                                                @*<dxe:ASPxButtonEdit ID="lstContactBy" runat="server" ReadOnly="true" ClientInstanceName="ClstContactBy" Width="200px">
                                                        <buttons>
                                                            <dxe:editbutton>
                                                            </dxe:editbutton>
                                                        </buttons>
                                                        <clientsideevents buttonclick="function(s,e){CustomerButnClick();}" keydown="function(s,e){Customer_KeyDown(s,e);}" />
                                                    </dxe:ASPxButtonEdit>
                                                    <asp:HiddenField ID="txtContact_hidden" runat="server" />
                                                    <asp:HiddenField ID="CustomerId" runat="server" />*@
                                            </div>
                                        </div>
                                        <div class="formLine"></div>
                                        @*<div class="form-group row">
                                                <label for="" class="col-sm-4 col-form-label">Currency</label>
                                                <div class="col-sm-8">
                                                    <select class="form-control">
                                                        <option>Select</option>
                                                    </select>
                                                </div>
                                            </div>*@

                                        <div class="form-group row">
                                            <label for="" class="col-sm-4 col-form-label">Calender</label>
                                            <div class="col-sm-8">
                                                <select class="form-control" id="drdCal">
                                                    <option value="0" selected="selected">Select</option>
                                                    <option value="1">Calender</option>
                                                </select>
                                            </div>
                                        </div>
                                        <div class="formLine"></div>
                                        <div class="form-group row">
                                            <label for="" class="col-sm-4 col-form-label">Unit<span style="color: red"> *</span></label>
                                            <div class="col-sm-8" id="drdUnit">
                                                @Html.DropDownListFor(x => x.BranchList, new SelectList(Model.BranchList, "branch_id", "branch_description"), new { @id = "ddlBranch", @class = "form-control" })
                                            </div>
                                            <div class="col-sm-8" id="dvProjectbrnach">
                                                @Html.Action("GetBranchList", "Project")

                                            </div>
                                        </div>
                                        <div class="formLine"></div>
                                        <div class="form-group row">
                                            <label for="" class="col-sm-4 col-form-label">Project Manager</label>
                                            <div class="col-sm-8">
                                                @Html.DropDownListFor(x => x.ProjectManagerList, new SelectList(Model.ProjectManagerList, "Promanager_id", "Promanager_Name"), new { @id = "ddlPManager", @class = "form-control" })
                                            </div>
                                        </div>
                                        <div class="formLine"></div>
                                        <div class="form-group row">
                                            <label for="" class="col-sm-4 col-form-label">Overall Project Status</label>
                                            <div class="col-sm-8">
                                                <select class="form-control" id="drdStatus">
                                                    <option value="0" selected="selected">Select</option>
                                                    <option value="1">Green</option>
                                                    <option value="2">Yellow</option>
                                                    <option value="3">Started</option>
                                                    <option value="4">Red</option>
                                                </select>
                                                @*@Html.DropDownListFor(x => x.StatusList, new SelectList(Model.StatusList, "STATUS_ID", "STATUS_NAME"), new { @id = "ddlStatus", @class = "form-control" })*@
                                            </div>
                                        </div>
                                        <div class="formLine"></div>
                                    
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-sm-12 pTop20 text-right">
                                        <button class="btn btn-success btn-radius" id="btnSave" onclick="SaveProjectDetails()">Save</button>
                                        <button class="btn btn-danger btn-radius" data-dismiss="modal" id="btncancel" aria-label="Close">Cancel</button>
                                        <button class="btn btn-success btn-radius" id="btnApproved" onclick="ApprovalProjectDetails()" style="display:none">Approved</button>
                                        <button class="btn btn-danger btn-radius" id="btnReject" onclick="RejectProjectDetails()" style="display:none">Reject</button>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-4" hidden>
                                <div class="mutiFMbox">
                                    <h5>Estimates</h5>
                                    <div class="pmsForm">
                                        <div class="form-group row">
                                            <label for="" class="col-sm-4 col-form-label">Estimated Start Date</label>
                                            <div class="col-sm-8">
                                                @*<input type="text" class="form-control" id="" value="">*@
                                                @Html.DevExpress().DateEdit(
                                                      settings =>
                                                      {
                                                          settings.Name = "StartDate_dt";
                                                          settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                                                          settings.Properties.DisplayFormatString = "dd-MM-yyyy";
                                                          settings.Properties.EditFormatString = "dd-MM-yyyy";
                                                          settings.ControlStyle.CssClass = "dateEditInput";
                                                          settings.Properties.ClientSideEvents.GotFocus = "function(s, e) { s.ShowDropDown(); }";
                                                          settings.Date = DateTime.Now;
                                                      }
                                             ).GetHtml()
                                            </div>
                                        </div>
                                        <div class="formLine"></div>
                                        <div class="form-group row">
                                            <label for="" class="col-sm-4 col-form-label">Estimated End Date</label>
                                            <div class="col-sm-8">
                                                @*<input type="text" class="form-control" id="" value="">*@
                                                @Html.DevExpress().DateEdit(
                                                      settings =>
                                                      {
                                                          settings.Name = "EndDate_dt";
                                                          settings.Properties.DisplayFormatString = "dd-MM-yyyy";
                                                          settings.Properties.EditFormatString = "dd-MM-yyyy";
                                                          settings.Width = Unit.Percentage(100);
                                                          settings.ControlStyle.CssClass = "dateEditInput";
                                                          settings.Properties.ClientSideEvents.GotFocus = "function(s, e) { s.ShowDropDown(); }";
                                                          settings.Date = DateTime.Now;
                                                      }
                                             ).GetHtml()
                                            </div>
                                        </div>
                                        <div class="formLine"></div>
                                        <div class="form-group row">
                                            <label for="" class="col-sm-4 col-form-label">Estimated Hours</label>
                                            <div class="col-sm-8">
                                                <div class="row">
                                                    <div class="col-sm-6">
                                                        <input type="number" class="decimalCheck quantity form-control" placeholder="00" id="estHrs" min="00" max="99999" maxlength="5" onchange="ChkPad2DigitCount(this);">
                                                    </div>
                                                    <div class="col-sm-6">
                                                        <input type="number" class="decimalCheck quantity form-control" placeholder="00" id="estmm" min="00" max="59" maxlength="2" onchange="ChkPad2DigitCount(this);">
                                                    </div>
                                                </div>
                                                @*@Html.TextBoxFor(m => m.Proj_Estimatehours, new { @class = "form-control percent", @id = "Proj_Estimatehours", @Value = "00.00" })*@
                                                @*onkeypress="return validateFloatKeyPress(this,event)*@
                                            </div>
                                        </div>
                                        <div class="formLine"></div>
                                        <div class="form-group row">
                                            <label for="" class="col-sm-4 col-form-label">Estimated Labour Cost</label>
                                            <div class="col-sm-8">
                                                @*@Html.TextBoxFor(m => m.Proj_EstimatelabourCost, new { @class = "form-control", @id = "Proj_EstimatelabourCost", @onchange = "CalculateTotalCost();", @Value="0.00" })*@
                                                <input type="text" class="decimalCheck quantity form-control" placeholder="00" id="Proj_EstimatelabourCost" min="0" onchange="CalculateTotalCost();">
                                            </div>
                                        </div>
                                        <div class="formLine"></div>
                                        <div class="form-group row">
                                            <label for="" class="col-sm-4 col-form-label">Estimated Expense Cost</label>
                                            <div class="col-sm-8">
                                                @*@Html.TextBoxFor(m => m.Proj_EstimateExpenseCost, new { @class = "form-control", @id = "Proj_EstimateExpenseCost", @onchange = "CalculateTotalCost();", @Value = "0.00" })*@
                                                <input type="text" class="decimalCheck quantity form-control" placeholder="00" id="Proj_EstimateExpenseCost" min="0" onchange="CalculateTotalCost();">
                                            </div>
                                        </div>
                                        <div class="formLine"></div>
                                        <div class="form-group row">
                                            <label for="" class="col-sm-4 col-form-label">Estimated Total Cost</label>
                                            <div class="col-sm-8">
                                                @Html.TextBoxFor(m => m.proj_EstimateTotCost, new { @class = "form-control", @id = "proj_EstimateTotCost", @Value = "0.00" })


                                            </div>
                                        </div>
                                        <div class="formLine"></div>
                                        <div id="dvApproval" style="display:none">
                                            <div class="form-group row">
                                                <label for="" class="col-sm-4 col-form-label">Approved By</label>
                                                <div class="col-sm-8">
                                                    @Html.DropDownListFor(x => x.UserList, new SelectList(Model.UserList, "user_id", "user_name"), new { @id = "ddlUser", @class = "form-control" })


                                                </div>
                                            </div>
                                            <div class="formLine"></div>
                                            <div class="form-group row">
                                                <label for="" class="col-sm-4 col-form-label">Approved On</label>
                                                <div class="col-sm-8">
                                                    @Html.DevExpress().DateEdit(
                                                      settings =>
                                                      {
                                                          settings.Name = "Approved_dt";
                                                          settings.Properties.DisplayFormatString = "dd-MM-yyyy";
                                                          settings.Properties.EditFormatString = "dd-MM-yyyy";
                                                          settings.Width = Unit.Percentage(100);
                                                          settings.ControlStyle.CssClass = "dateEditInput";
                                                          settings.Properties.ClientSideEvents.GotFocus = "function(s, e) { s.ShowDropDown(); }";
                                                          settings.Date = DateTime.Now;
                                                      }
                                             ).GetHtml()

                                                </div>
                                            </div>
                                            <div class="formLine"></div>
                                            <div class="form-group row">
                                                <label for="" class="col-sm-4 col-form-label">Remarks</label>
                                                <div class="col-sm-8">
                                                    @Html.TextBoxFor(m => m.Remarks, new { @class = "form-control percent", @id = "Remarks" })
                                                    @*onkeypress="return validateFloatKeyPress(this,event)*@
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <div class="mutiFMbox mTop5">
                                    <h5>Reference Documents</h5>
                                    <div class="pmsForm">
                                        <div class="form-group row">
                                            <label for="" class="col-sm-4 col-form-label">Order Number</label>
                                            <div class="col-sm-8" id="dvProjectOrder">
                                                @Html.Action("GetSalesOrderList", "Project")

                                            </div>
                                        </div>
                                        <div class="form-group row">
                                            <label for="" class="col-sm-4 col-form-label">Hierarchy</label>
                                            <div class="col-sm-8">
                                                @*<select class="form-control" id="drdHier">
                        <option value="0" selected="selected">Select</option>
                    </select>*@
                                                @Html.DropDownListFor(x => x.Hierarchy_List, new SelectList(Model.Hierarchy_List, "Hierarchy_id", "Hierarchy_Name"), new { @id = "ddlHierarchy", @class = "form-control" })
                                            </div>
                                        </div>  
                                    </div>
                                </div>
                            </div>
                        }
                        @* End of Mantis Issue 25051*@    
                        <div class="col-sm-4">
                            @*Mantis Issue 25051*@
                            @if (@Model.ShowAddlDetlInProjMast != "No" )
                            {
                            @* End of Mantis Issue 25051*@
                                <div class="mutiFMbox">
                                    <h5>Actuals</h5>
                                    <div class="pmsForm">
                                        <div class="form-group row">
                                            <label for="" class="col-sm-4 col-form-label">Actual Start Date</label>
                                            <div class="col-sm-8">
                                                @*<input type="text" class="form-control" id="" value="">*@
                                                @Html.DevExpress().DateEdit(
                                                settings =>
                                                {
                                                    settings.Name = "ActualStartDate_dt";
                                                    settings.Properties.DisplayFormatString = "dd-MM-yyyy";
                                                    settings.Properties.EditFormatString = "dd-MM-yyyy";
                                                    settings.Width = Unit.Percentage(100);
                                                    settings.ControlStyle.CssClass = "dateEditInput";
                                                    settings.Properties.ClientSideEvents.GotFocus = "function(s, e) { s.ShowDropDown(); }";
                                                    settings.Date = DateTime.Now;
                                                }
                                        ).GetHtml()
                                            </div>
                                        </div>
                                        <div class="formLine"></div>
                                        <div class="form-group row">
                                            <label for="" class="col-sm-4 col-form-label">Actual End Date</label>
                                            <div class="col-sm-8">
                                                @*<input type="text" class="form-control" id="" value="">*@
                                                @Html.DevExpress().DateEdit(
                                                settings =>
                                                {
                                                    settings.Name = "ActualEndDate_dt";
                                                    settings.Properties.DisplayFormatString = "dd-MM-yyyy";
                                                    settings.Properties.EditFormatString = "dd-MM-yyyy";
                                                    settings.Width = Unit.Percentage(100);
                                                    settings.ControlStyle.CssClass = "dateEditInput";
                                                    settings.Properties.ClientSideEvents.GotFocus = "function(s, e) { s.ShowDropDown(); }";
                                                    settings.Date = DateTime.Now;
                                                }
                                        ).GetHtml()
                                            </div>
                                        </div>
                                        <div class="formLine"></div>
                                        <div class="form-group row">
                                            <label for="" class="col-sm-4 col-form-label">Actual Hours</label>
                                            <div class="col-sm-8">

                                                <div class="lebeldText c1"> 00.00</div>


                                            </div>
                                        </div>
                                        <div class="formLine"></div>
                                        <div class="form-group row">
                                            <label for="" class="col-sm-4 col-form-label">Actual Labour Cost</label>
                                            <div class="col-sm-8">
                                                <div class="lebeldText c2">&#8377; 0.00</div>
                                            </div>
                                        </div>
                                        <div class="formLine"></div>
                                        <div class="form-group row">
                                            <label for="" class="col-sm-4 col-form-label">Actual Expense Cost</label>
                                            <div class="col-sm-8">
                                                <div class="lebeldText c3">&#8377; 0.00</div>
                                            </div>
                                        </div>
                                        <div class="formLine"></div>
                                        <div class="form-group row">
                                            <label for="" class="col-sm-4 col-form-label">Actual Total Cost</label>
                                            <div class="col-sm-8">
                                                <div class="lebeldText c4">&#8377; 0.00</div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            @* Mantis Issue 25051*@
                            }
                            else
                            {
                                <div class="mutiFMbox" hidden>
                                    <h5>Actuals</h5>
                                    <div class="pmsForm">
                                        <div class="form-group row">
                                            <label for="" class="col-sm-4 col-form-label">Actual Start Date</label>
                                            <div class="col-sm-8">
                                                @*<input type="text" class="form-control" id="" value="">*@
                                                @Html.DevExpress().DateEdit(
                                                settings =>
                                                {
                                                    settings.Name = "ActualStartDate_dt";
                                                    settings.Properties.DisplayFormatString = "dd-MM-yyyy";
                                                    settings.Properties.EditFormatString = "dd-MM-yyyy";
                                                    settings.Width = Unit.Percentage(100);
                                                    settings.ControlStyle.CssClass = "dateEditInput";
                                                    settings.Properties.ClientSideEvents.GotFocus = "function(s, e) { s.ShowDropDown(); }";
                                                    settings.Date = DateTime.Now;
                                                }
                                        ).GetHtml()
                                            </div>
                                        </div>
                                        <div class="formLine"></div>
                                        <div class="form-group row">
                                            <label for="" class="col-sm-4 col-form-label">Actual End Date</label>
                                            <div class="col-sm-8">
                                                @*<input type="text" class="form-control" id="" value="">*@
                                                @Html.DevExpress().DateEdit(
                                                settings =>
                                                {
                                                    settings.Name = "ActualEndDate_dt";
                                                    settings.Properties.DisplayFormatString = "dd-MM-yyyy";
                                                    settings.Properties.EditFormatString = "dd-MM-yyyy";
                                                    settings.Width = Unit.Percentage(100);
                                                    settings.ControlStyle.CssClass = "dateEditInput";
                                                    settings.Properties.ClientSideEvents.GotFocus = "function(s, e) { s.ShowDropDown(); }";
                                                    settings.Date = DateTime.Now;
                                                }
                                        ).GetHtml()
                                            </div>
                                        </div>
                                        <div class="formLine"></div>
                                        <div class="form-group row">
                                            <label for="" class="col-sm-4 col-form-label">Actual Hours</label>
                                            <div class="col-sm-8">

                                                <div class="lebeldText c1"> 00.00</div>


                                            </div>
                                        </div>
                                        <div class="formLine"></div>
                                        <div class="form-group row">
                                            <label for="" class="col-sm-4 col-form-label">Actual Labour Cost</label>
                                            <div class="col-sm-8">
                                                <div class="lebeldText c2">&#8377; 0.00</div>
                                            </div>
                                        </div>
                                        <div class="formLine"></div>
                                        <div class="form-group row">
                                            <label for="" class="col-sm-4 col-form-label">Actual Expense Cost</label>
                                            <div class="col-sm-8">
                                                <div class="lebeldText c3">&#8377; 0.00</div>
                                            </div>
                                        </div>
                                        <div class="formLine"></div>
                                        <div class="form-group row">
                                            <label for="" class="col-sm-4 col-form-label">Actual Total Cost</label>
                                            <div class="col-sm-8">
                                                <div class="lebeldText c4">&#8377; 0.00</div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                            @* End of Mantis Issue 25051*@    
                            <div class="row">
                                <div class="col-sm-12 pTop20 text-right">
                                    @*Mantis Issue 25051*@
                                    @if (@Model.ShowAddlDetlInProjMast != "No")
                                    {
                                    @* End of Mantis Issue 25051*@
                                        <button class="btn btn-success btn-radius" id="btnSave" onclick="SaveProjectDetails()">Save</button>
                                        <button class="btn btn-danger btn-radius" data-dismiss="modal" id="btncancel" aria-label="Close">Cancel</button>
                                        <button class="btn btn-success btn-radius" id="btnApproved" onclick="ApprovalProjectDetails()" style="display:none">Approved</button>
                                        <button class="btn btn-danger btn-radius" id="btnReject" onclick="RejectProjectDetails()" style="display:none">Reject</button>
                                        <input type="hidden" id="HdnProjectapprovalstatus">
                                    
                                        <button type="button" class="btn btn-primary btn-radius" data-toggle="modal" data-target="#TermsConditionseModal" id="btn_TermsCondition" onclick="Termsconditions();">Term&#818;s and Conditions</button>
}
                                    else
                                    {
                                        <button type="button" class="btn btn-primary btn-radius hide" data-toggle="modal" data-target="#TermsConditionseModal" id="btn_TermsCondition" onclick="Termsconditions();" hidden >Term&#818;s and Conditions</button>
                                    }
                                </div>
                            </div>
                        </div>
                       
                    </div>

                </div>






            </div>

        </div>
    </div>

</div>
@*<button type="button" class="btn btn-info btn-lg" data-toggle="modal" data-target="#CloseModal">Open Modal</button>*@


<div id="CloseModal" class="modal fade" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Reason For Cancel</h4>
            </div>
            <div class="modal-body">
                <label>Reason<span style="color:red">*</span></label>
                <div><textarea id="txtCanCelRemarks"></textarea></div>
            </div>
            <div class="modal-footer">

                <button class="btn btn-success btn-radius" id="btnCancelRemarks" onclick="CancelRemarks_save()">Save</button>
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>

    </div>
</div>



<div class="modal fade" id="CustModel" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Customer Search</h4>
            </div>
            <div class="modal-body">
                <input type="text" onkeydown="Customerkeydown(event)" id="txtCustSearch" autofocus width="100%" placeholder="Search By Customer Name or Unique Id" />
                <div id="CustomerTable">
                    <table border='1' width="100%" class="dynamicPopupTbl">
                        <tr class="HeaderStyle">
                            <th class="hide">id</th>
                            <th>Name</th>
                            <th>Unique Id</th>
                            <th>Address</th>
                        </tr>
                    </table>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>





@Html.DevExpress().LoadingPanel(
    settings =>
    {
        settings.Name = "LoadingPanel";
        settings.Modal = true;
        settings.ContainerElementID = "dvStep3";
    }
).GetHtml()


@*For Terms and Condition 
Start*@
<div class="modal fade pmsModal w90" id="TermsConditionseModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
<div class="modal-dialog" role="document">
    <div class="modal-content">
        <div class="modal-header">
            <h5 class="modal-title" id="exampleModalLabel">Terms and Conditions</h5>
            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
        <div class="modal-body">
            
                <div id="DvProjTerms">
                    <div class="row">
                        <div class="col-md-2 col-sm-3">

                            <div class=" col-form-label">Defect Liability From date</div>

                            @Html.DevExpress().DateEdit(
                                        settings =>
                                        {
                                            settings.Name = "Terms_DefectLibilityPeriodDate";
                                            settings.Properties.DisplayFormatString = "dd-MM-yyyy";
                                            settings.Properties.EditFormatString = "dd-MM-yyyy";
                                            settings.Width = Unit.Percentage(100);
                                            settings.ControlStyle.CssClass = "dateEditInput";
                                            settings.Properties.ClientSideEvents.GotFocus = "function(s, e) { s.ShowDropDown(); }";
                                            settings.Date = DateTime.Now;
                                        }
                                ).GetHtml()


                        </div>
                        
                        <div class="col-md-3 col-lg-2">

                            <div class=" col-form-label">
                                Defect Liability To Date
                            </div>

                                @Html.DevExpress().DateEdit(
                                        settings =>
                                        {
                                            settings.Name = "Terms_DefectLibilityPeriodToDate";
                                            settings.Properties.DisplayFormatString = "dd-MM-yyyy";
                                            settings.Properties.EditFormatString = "dd-MM-yyyy";
                                            settings.Width = Unit.Percentage(100);
                                            settings.ControlStyle.CssClass = "dateEditInput";
                                            settings.Properties.ClientSideEvents.GotFocus = "function(s, e) { s.ShowDropDown(); }";
                                            settings.Date = DateTime.Now;
                                        }
                                ).GetHtml()


                            </div>
                        <div class="col-md-3 col-lg-2">
                            <div>Defect Liability remarks</div>
                            <div>
                                @Html.TextBoxFor(m => m.TermsConditionList, new { @class = "form-control", @id = "Terms_DefectLibilityPeriodRemarks" })
                            </div>
                        </div>
                        <div class="col-md-3 col-lg-2">
                            @*<asp:Label ID="lblLiquiDamage" runat="server" Text="Liquidated Damage %"></asp:Label>*@
                            <div class=" col-form-label">
                                Liquidated Damage %
                            </div>

                                @*<dxe:ASPxTextBox runat="server" id="txtLiquiDamage" ClientInstanceName="ctxtLiquiDamage">*@
                                @*<masksettings mask="&lt;0..999999999&gt;.&lt;00..99&gt;" />*@
                                @*</dxe:ASPxTextBox>*@
                                @Html.TextBoxFor(m => m.TermsConditionList, new { @class = "form-control percent", @id = "Terms_LiqDamage" })
</div>                 
                        <div class="col-md-3 col-lg-2">
                            @*<asp:Label ID="lblLiqDmgAppliDt" runat="server" Text="Liq. Damage Applicable Dt."></asp:Label>*@
                            <div class=" col-form-label">
                                Liq. Damage Applicable Dt.
                            </div>

                                @*<dxe:ASPxDateEdit ID="dtLiqDmgAppliDt" runat="server" EditFormat="Custom" EditFormatString="dd-MM-yyyy" ClientInstanceName="cdtLiqDmgAppliDt" Width="100%">
                <buttonstyle width="13px">
                </buttonstyle>
                <clientsideevents gotfocus="function(s,e){cdtLiqDmgAppliDt.ShowDropDown();}" />
            </dxe:ASPxDateEdit>*@
                                @Html.DevExpress().DateEdit(
                                        settings =>
                                        {
                                            settings.Name = "Terms_LiqDamageAppDate";
                                            settings.Properties.DisplayFormatString = "dd-MM-yyyy";
                                            settings.Properties.EditFormatString = "dd-MM-yyyy";
                                            settings.Width = Unit.Percentage(100);
                                            settings.ControlStyle.CssClass = "dateEditInput";
                                            settings.Properties.ClientSideEvents.GotFocus = "function(s, e) { s.ShowDropDown(); }";
                                            settings.Date = DateTime.Now;
                                        }
                                ).GetHtml()
                            </div>
                        
                    </div>
                    <div class="row">

                        
                        <div class="col-md-6">
                            @*<asp:Label ID="lblPaymentTerms" runat="server" Text="Payment Terms"></asp:Label>
            <dxe:ASPxTextBox runat="server" id="txtPaymentTerms" ClientInstanceName="ctxtPaymentTerms"></dxe:ASPxTextBox>*@
                            <label for="" class="col-form-label">Payment Terms</label>
                            @Html.TextBoxFor(m => m.TermsConditionList, new { @class = "form-control percent", @id = "Terms_Payment" })
                        </div>
                        
                        

                        <div class="col-md-2 col-sm-3">
                            @*<asp:Label ID="lblOrderType" runat="server" Text="Order Type"></asp:Label>
            <dxe:ASPxTextBox runat="server" id="txtOrderType" ClientInstanceName="ctxtOrderType"></dxe:ASPxTextBox>*@
                            <label for="" class="col-form-label">Order Type</label>
                            @Html.TextBoxFor(m => m.TermsConditionList, new { @class = "form-control percent", @id = "Terms_OrderType" })
                        </div>
                        
                        <div class="col-md-2">
                            @*<asp:Label ID="lblNatureWork" runat="server" Text="Nature of Work"></asp:Label>
                            <dxe:ASPxTextBox runat="server" id="txtNatureWork" ClientInstanceName="ctxtNatureWork"></dxe:ASPxTextBox>*@
                            <label for="" class="col-form-label">Nature of Work</label>
                            @Html.TextBoxFor(m => m.TermsConditionList, new { @class = "form-control percent", @id = "Terms_NatureWork" })
                        </div>
                    </div>
                    
                    <div class="clearfix col-md-12" style="background: #f3f2f0; padding-top: 11px; padding-bottom: 10px; margin-top: 8px;margin-bottom:10px">
                        <div class="col-md-2">
                            <div class="form-group ">
                                <label for="" class=" col-form-label">BG Group</label>
                                <div class="">
                                    <div class="relative">
                                        @*<dxe:ASPxTextBox ID="txtBGGroup" runat="server" ClientInstanceName="ctxtBGGroup" Width="100%" MaxLength="50" CssClass="">
                            </dxe:ASPxTextBox>*@
                                        @Html.TextBoxFor(m => m.BankGuaranteeList, new { @class = "form-control percent", @id = "BG_BGGroup" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-2 col-sm-3">
                            <div class="form-group ">
                                <label for="" class=" col-form-label">BG Type</label>
                                <div class="">
                                    <div class="relative">
                                        @Html.TextBoxFor(m => m.BankGuaranteeList, new { @class = "form-control percent", @id = "BG_BGType" })
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="col-md-2">
                            <div class="form-group ">
                                <label for="" class=" col-form-label">Percentage</label>
                                <div class="">
                                    <div class="relative">
                                        @*<dxe:ASPxTextBox ID="txtPercentage" runat="server" ClientInstanceName="ctxtPercentage" Width="100%" MaxLength="50" CssClass="">*@
                                        @*<masksettings mask="&lt;0..999999999&gt;.&lt;00..99&gt;" />*@
                                        @*</dxe:ASPxTextBox>*@
                                        @Html.TextBoxFor(m => m.BankGuaranteeList, new { @class = "form-control percent", @id = "BG_Percentage" })
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="col-md-2">
                            <div class="form-group ">
                                <label for="" class=" col-form-label">Value </label>
                                <div class="">
                                    <div class="relative">
                                        @*<dxe:ASPxTextBox ID="txtValue" runat="server" ClientInstanceName="ctxtValue" Width="100%" MaxLength="50" CssClass="">*@
                                        @*<masksettings mask="&lt;0..999999999&gt;.&lt;00..99&gt;" />*@
                                        @*</dxe:ASPxTextBox>*@
                                        @Html.TextBoxFor(m => m.BankGuaranteeList, new { @class = "form-control percent", @id = "BG_BGValue" })
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="col-md-2">
                            <div class="form-group ">
                                <label for="" class=" col-form-label">Status</label>
                                <div class="">
                                    <div class="relative">
                                        @*<dxe:ASPxTextBox ID="txtStatus" runat="server" ClientInstanceName="ctxtStatus" Width="100%" MaxLength="50" CssClass="">
                            </dxe:ASPxTextBox>*@
                                        @Html.TextBoxFor(m => m.BankGuaranteeList, new { @class = "form-control percent", @id = "BG_BGStatus" })
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="col-md-2">
                            <div class="form-group ">
                                <label for="" class=" col-form-label">Validity From Date</label>
                                <div class="">
                                    <div class="relative">
                                        @*<dxe:ASPxDateEdit ID="dtBGValidFromD" runat="server" EditFormat="Custom" EditFormatString="dd-MM-yyyy" ClientInstanceName="cdtBGValidFromD" Width="100%">
                                <buttonstyle width="13px">
                                </buttonstyle>
                                <clientsideevents gotfocus="function(s,e){cdtBGValidFromD.ShowDropDown();}" />
                            </dxe:ASPxDateEdit>*@
                                        @Html.DevExpress().DateEdit(
                                            settings =>
                                            {
                                                settings.Name = "BG_BGValidfrom";
                                                settings.Properties.DisplayFormatString = "dd-MM-yyyy";
                                                settings.Properties.EditFormatString = "dd-MM-yyyy";
                                                settings.Width = Unit.Percentage(100);
                                                settings.ControlStyle.CssClass = "dateEditInput";
                                                settings.Properties.ClientSideEvents.GotFocus = "function(s, e) { s.ShowDropDown(); }";
                                                settings.Date = DateTime.Now;
                                            }
                                    ).GetHtml()
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="clear"></div>

                        <div class="col-md-2">
                            <div class="form-group ">
                                <label for="" class=" col-form-label">Validity To Date</label>
                                <div class="">
                                    <div class="relative">
                                        @*<dxe:ASPxDateEdit ID="dtBGValidToD" runat="server" EditFormat="Custom" EditFormatString="dd-MM-yyyy" ClientInstanceName="cdtBGValidToD" Width="100%">
                                <buttonstyle width="13px">
                                </buttonstyle>
                                <clientsideevents gotfocus="function(s,e){cdtBGValidToD.ShowDropDown();}" />
                            </dxe:ASPxDateEdit>*@
                                        @Html.DevExpress().DateEdit(
                                            settings =>
                                            {
                                                settings.Name = "BG_BGValidUpTo";
                                                settings.Properties.DisplayFormatString = "dd-MM-yyyy";
                                                settings.Properties.EditFormatString = "dd-MM-yyyy";
                                                settings.Width = Unit.Percentage(100);
                                                settings.ControlStyle.CssClass = "dateEditInput";
                                                settings.Properties.ClientSideEvents.GotFocus = "function(s, e) { s.ShowDropDown(); }";
                                                settings.Date = DateTime.Now;
                                            }
                                    ).GetHtml()
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="col-md-3 pdTop5">
                            <div class="mTop5">
                                <button type="button" class="btn btn-success btn-radius mTop5" id="btnSave" onclick="AddTermsDetails()">
                                    Add BG
                                </button>
                            </div>
                        </div>
                    </div>

                    
                </div>

                <div class="clearfix"></div>
                <div class="form-group">
                    <div id="refreshgrid" class="relative">
                        @{
                        Html.RenderAction("GetTermsConitionsPartial","Project");
                         }
                       
                    </div>
                    
                    @*<asp:HiddenField runat="server" ID="hdnGuid" />*@
                </div>
                <div class="clear"></div>
            
        </div>
        <div class="modal-footer">
            <button type="button" class="btn btn-primary" onclick="TermsConditionsSave();">Save</button>
            <button type="button" class="btn btn-danger" onclick="TermsConditionscancel();" data-dismis="modal">Cancel</button>
            <input type="hidden" id="hdnGuid">
            <input type="hidden" id="hdnTermsConditions">
        </div>
    </div>
</div>
</div>

@Html.DevExpress().PopupControl(
   settings =>
   {
       settings.Name = "AspxDirectAddCustPopup";
       settings.Width = 920;
       settings.Height = 650;
       //settings.ScrollBars.v
       settings.AllowDragging = true;
       settings.CloseAction = CloseAction.CloseButton;
       settings.CloseOnEscape = true;
       settings.PopupAnimationType = AnimationType.None;
       settings.HeaderText = "Add New Customer";
       settings.Modal = true;
       settings.AutoUpdatePosition = true;
       settings.Top = 50;
       settings.PopupHorizontalAlign = PopupHorizontalAlign.WindowCenter;
       settings.PopupVerticalAlign = PopupVerticalAlign.Above;
       //settings.SetContent(() =>
       //{
       //    Html.RenderPartial("_ShopReassignManualLogView");
       //});

       // settings.ClientSideEvents.CloseUp = "function(s, e){ ASPxClientEdit.ClearEditorsInContainer(null, '', true); }";
   }).GetHtml()

@*End*@