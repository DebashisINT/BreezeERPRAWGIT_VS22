<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="xrTable2.UserDesignerLocked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="xrTableRow2.UserDesignerLocked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="xrTableCell2.UserDesignerLocked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="xrTableCell4.UserDesignerLocked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="xrTableCell6.UserDesignerLocked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="xrTableCell5.UserDesignerLocked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="xrTableCell8.UserDesignerLocked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="xrTableCell9.UserDesignerLocked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="xrTableCell10.UserDesignerLocked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="sqlDataSource1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="customSqlQuery1.Sql" xml:space="preserve">
    <value>select h.Invoice_Id as 'Id',(select ISNULL(cnt_firstName,'')+' '+ISNULL(cnt_middleName,'')+'  '+ISNULL(cnt_lastName,'')
 from tbl_master_contact where cnt_internalId=h.Customer_Id) as 'Customer',h.Invoice_FinYear as 'Doc_FinYear',h.Invoice_Number as 'Doc_no',h.Invoice_Date as 'Doc_date',(select branch_description from tbl_master_branch where branch_id=h.Invoice_BranchId) as 'Branch'
--,h.Challan_TotalAmount as 'Total Net Amount' ,
,ISNULL((select sum(InvoiceDetails_TotalAmountInBaseCurrency) from tbl_trans_SalesInvoiceProducts where InvoiceDetails_OrderId=h.Invoice_Id),0) + ISNULL((select sum(InvoiceTax_Amount) from tbl_trans_SalesInvoiceTax  where InvoiceTax_InvoiceId=h.Invoice_Id),0) as 'Total Net Amount' ,
Cast(ISNULL((select sum(InvoiceDetails_TotalAmountInBaseCurrency) from tbl_trans_SalesInvoiceProducts where InvoiceDetails_OrderId=h.Invoice_Id),0) + ISNULL((select sum(InvoiceTax_Amount) from tbl_trans_SalesInvoiceTax  where InvoiceTax_InvoiceId=h.Invoice_Id),0) as decimal(18,2)) as 'Format Total Net Amount' ,

c.CNT_GSTIN,pan_no=(select crg_Number from tbl_master_contactRegistration where crg_cntId=c.cnt_internalId and crg_type ='Pan Card')
,(select user_name from tbl_master_user where user_id=h.CreatedBy) as 'user_name'
from tbl_trans_SalesInvoice h
inner join tbl_master_contact c on h.Customer_Id=c.cnt_internalId
where h.Invoice_Id=@Invoice_id






</value>
  </data>
  <data name="customSqlQuery2.Sql" xml:space="preserve">
    <value>
select Id,relation_Id,Product_Name,Product_Id,Product_Description,barcode_itemslno,Quantity,Unit,Rate,Amount,Total_Amount,Isnull(ProdWise_TaxAmt,0) as ProdWise_TaxAmt,(Total_Amount+Isnull(ProdWise_TaxAmt,0)) as prodTaxTotAmt
,Is_Taxpresent=ISNULL(( select top 1 ProductTax_TaxTypeId from tbl_trans_SalesInvoiceProductTax where ProductTax_InvoiceId=@Invoice_id and ProductTax_ProductId=Id),0)
 from 

(
select InvoiceDetails_Id as 'Id',InvoiceDetails_OrderId as 'relation_Id',(select sProducts_Name from Master_sProducts where sProducts_ID=InvoiceDetails_ProductId) as 'Product_Name',InvoiceDetails_ProductId as 'Product_Id',
InvoiceDetails_ProductDescription as 'Product_Description',
(select sProducts_barCode from Master_sProducts where sProducts_ID=tbl_trans_SalesInvoiceProducts.InvoiceDetails_ProductId) as 'barcode_itemslno',
InvoiceDetails_Quantity as 'Quantity',(select UOM_ShortName from Master_UOM where UOM_ID=tbl_trans_SalesInvoiceProducts.InvoiceDetails_UOMId) as 'Unit',InvoiceDetails_SalePrice as 'Rate',InvoiceDetails_Amount as 'Amount',InvoiceDetails_TotalAmountInBaseCurrency as 'Total_Amount',

ProdWise_TaxAmt=(select sum(ProductTax_Amount) from tbl_trans_SalesOrderProductTax where ProductTax_OrderId=@Invoice_id and ProductTax_ProductId=tbl_trans_SalesInvoiceProducts.InvoiceDetails_Id and (ProductTax_Percentage!=0 or  ProductTax_Amount!=0))

 from tbl_trans_SalesInvoiceProducts where InvoiceDetails_OrderId=@Invoice_id
 )  details

</value>
  </data>
  <data name="customSqlQuery3.Sql" xml:space="preserve">
    <value>select InvoiceAdd_OrderId as 'relation_Id',

(select InvoiceAdd_address1+case when InvoiceAdd_address2='' then '' else +','+InvoiceAdd_address2 end  
+case when InvoiceAdd_address3='' then '' else +','+InvoiceAdd_address3 end 
+case when InvoiceAdd_landMark='' then '' else +','+InvoiceAdd_landMark end  
) as 'Address',

InvoiceAdd_address1 as 'Address1',InvoiceAdd_address2 as 'Address2',InvoiceAdd_address3 as 'Address3',InvoiceAdd_landMark as 'landMark',(select cou_country from tbl_master_country where cou_id=tbl_trans_SalesInvoiceAddress.InvoiceAdd_countryId) as 'Country',
(select state from tbl_master_state where id=tbl_trans_SalesInvoiceAddress.InvoiceAdd_stateId) as 'State',(select RTrim(LTrim(city_name))+'  :' from tbl_master_city where city_id=tbl_trans_SalesInvoiceAddress.InvoiceAdd_cityId) as 'City',(select area_name from tbl_master_area where area_id=tbl_trans_SalesInvoiceAddress.InvoiceAdd_areaId) as 'Area',InvoiceAdd_pin as 'Pin' from tbl_trans_SalesInvoiceAddress where InvoiceAdd_OrderId=@Invoice_id and InvoiceAdd_addressType='Billing'</value>
  </data>
  <data name="customSqlQuery4.Sql" xml:space="preserve">
    <value>
select
ProductTax_Id as 'Id',ProductTax_InvoiceId as  'relation_Id',cast(ProductTax_ProductId as bigint) as 'ProductId',ProductTax_TaxTypeId,(select TaxRatesSchemeName from Config_TaxRates where TaxRates_ID=tbl_trans_SalesInvoiceProductTax.ProductTax_TaxTypeId) as 'ProductTax_TaxTypeName',ProductTax_Percentage,ProductTax_Amount,
(select TaxRatesSchemeName from Config_TaxRates where TaxRates_ID=tbl_trans_SalesInvoiceProductTax.ProductTax_TaxTypeId)+'      '+cast((CONVERT(DECIMAL(10,0),ProductTax_Percentage)) as varchar(20))+'%' +'        '+cast(ProductTax_Amount as varchar(50)) as 'Tax',(cast((CONVERT(DECIMAL(10,0),ProductTax_Percentage)) as varchar(20))+'%') as tax_percnt
from  tbl_trans_SalesInvoiceProductTax where ProductTax_InvoiceId=@Invoice_id and (ProductTax_Percentage!=0 or  ProductTax_Amount!=0)</value>
  </data>
  <data name="customSqlQuery5.Sql" xml:space="preserve">
    <value>select Id,relation_Id ,Percentage,Amount,TaxTypeId,Tax_Name=(select Taxes_Name from Master_Taxes where taxes_Id=(select TaxRates_TaxCode from Config_TaxRates where TaxRates_ID=TaxTypeId)) from 
(
select InvoiceTax_Id as 'Id',InvoiceTax_InvoiceId as 'relation_Id',InvoiceTax_Percentage as 'Percentage',InvoiceTax_Amount as 'Amount',InvoiceTax_TaxTypeId as 'TaxTypeId' from tbl_trans_SalesInvoiceTax where  (InvoiceTax_TaxTypeId&lt;&gt;0 or ProductTax_VatGstCstId&lt;&gt;0)) aa
where 
 relation_Id=@Invoice_id
and Amount&lt;&gt;0</value>
  </data>
  <data name="customSqlQuery6.Sql" xml:space="preserve">
    <value>select c.*,phone=(select top 1 phf_phoneNumber from tbl_master_phonefax where phf_cntId=c.cmp_internalid),email=(select top 1 eml_email from tbl_master_email where eml_cntId=c.cmp_internalid)  ,

ISNULL(a.add_address1,'')+', '+ISNULL(a.add_address2,'')+', '+ISNULL(a.add_address3,'')+', '+case when (select ISNULL(city_name,'') from tbl_master_city where city_id=a.add_city)&lt;&gt;'' then (select ISNULL(city_name,'') from tbl_master_city where city_id=a.add_city)+'-'+(select pin_code from tbl_master_pinzip where pin_id=a.add_pin)+'.' else '' end as 'Address',

(select city_name from tbl_master_city where city_id=a.add_city)as add_city,(select pin_code from tbl_master_pinzip where pin_id=a.add_pin) as add_pin  from tbl_master_company c  inner join tbl_master_address a on c.cmp_internalid=a.add_cntId  where c.cmp_internalid=@Company_Id



</value>
  </data>
  <data name="customSqlQuery7.Sql" xml:space="preserve">
    <value>
select ProductTax_InvoiceId as 'relation_Id',sum(ProductTax_Amount) as ProductTax_Amount,
mode=(select TaxCalculateMethods from Master_Taxes where Taxes_ID=(select  TaxRates_TaxCode from Config_TaxRates where TaxRates_ID=tbl_trans_SalesInvoiceProductTax.ProductTax_TaxTypeId)) ,
TaxRatesSchemeName=(select  TaxRatesSchemeName from Config_TaxRates where TaxRates_ID=tbl_trans_SalesInvoiceProductTax.ProductTax_TaxTypeId)
from tbl_trans_SalesInvoiceProductTax where ProductTax_InvoiceId=@Invoice_id  and (ProductTax_Percentage!=0 or  ProductTax_Amount!=0) group by ProductTax_TaxTypeId,ProductTax_InvoiceId</value>
  </data>
  <data name="sqlDataSource1.ResultSchemaSerializable" xml:space="preserve">
    <value>PERhdGFTZXQgTmFtZT0ic3FsRGF0YVNvdXJjZTEiPjxWaWV3IE5hbWU9IkFkZHJlc3MiPjxGaWVsZCBOYW1lPSJyZWxhdGlvbl9JZCIgVHlwZT0iSW50NjQiIC8+PEZpZWxkIE5hbWU9IkFkZHJlc3MiIFR5cGU9IlN0cmluZyIgLz48RmllbGQgTmFtZT0iQWRkcmVzczEiIFR5cGU9IlN0cmluZyIgLz48RmllbGQgTmFtZT0iQWRkcmVzczIiIFR5cGU9IlN0cmluZyIgLz48RmllbGQgTmFtZT0iQWRkcmVzczMiIFR5cGU9IlN0cmluZyIgLz48RmllbGQgTmFtZT0ibGFuZE1hcmsiIFR5cGU9IlN0cmluZyIgLz48RmllbGQgTmFtZT0iQ291bnRyeSIgVHlwZT0iU3RyaW5nIiAvPjxGaWVsZCBOYW1lPSJTdGF0ZSIgVHlwZT0iU3RyaW5nIiAvPjxGaWVsZCBOYW1lPSJDaXR5IiBUeXBlPSJTdHJpbmciIC8+PEZpZWxkIE5hbWU9IkFyZWEiIFR5cGU9IlN0cmluZyIgLz48RmllbGQgTmFtZT0iUGluIiBUeXBlPSJTdHJpbmciIC8+PC9WaWV3PjxWaWV3IE5hbWU9IkNvbXBhbnlNYXN0ZXIiPjxGaWVsZCBOYW1lPSJjbXBfaWQiIFR5cGU9IkRlY2ltYWwiIC8+PEZpZWxkIE5hbWU9ImNtcF9pbnRlcm5hbGlkIiBUeXBlPSJTdHJpbmciIC8+PEZpZWxkIE5hbWU9ImNtcF9OYW1lIiBUeXBlPSJTdHJpbmciIC8+PEZpZWxkIE5hbWU9ImNtcF9wYXJlbnRpZCIgVHlwZT0iU3RyaW5nIiAvPjxGaWVsZCBOYW1lPSJjbXBfbmF0dXJlT2ZCdXNpbmVzcyIgVHlwZT0iU3RyaW5nIiAvPjxGaWVsZCBOYW1lPSJjbXBfZGlyZWN0b3JzIiBUeXBlPSJTdHJpbmciIC8+PEZpZWxkIE5hbWU9ImNtcF9hdXRob3JpemVkU2lnbmF0b3JpZXMiIFR5cGU9IlN0cmluZyIgLz48RmllbGQgTmFtZT0iY21wX2V4Y2hhbmdlIiBUeXBlPSJTdHJpbmciIC8+PEZpZWxkIE5hbWU9ImNtcF9yZWdpc3RyYXRpb25ObyIgVHlwZT0iU3RyaW5nIiAvPjxGaWVsZCBOYW1lPSJjbXBfc2ViaVJlZ25ObyIgVHlwZT0iU3RyaW5nIiAvPjxGaWVsZCBOYW1lPSJjbXBfcGFuTm8iIFR5cGU9IlN0cmluZyIgLz48RmllbGQgTmFtZT0iY21wX3NlcnZpY2VUYXhObyIgVHlwZT0iU3RyaW5nIiAvPjxGaWVsZCBOYW1lPSJjbXBfc2FsZXNUYXhObyIgVHlwZT0iU3RyaW5nIiAvPjxGaWVsZCBOYW1lPSJDcmVhdGVEYXRlIiBUeXBlPSJEYXRlVGltZSIgLz48RmllbGQgTmFtZT0iQ3JlYXRlVXNlciIgVHlwZT0iRGVjaW1hbCIgLz48RmllbGQgTmFtZT0iTGFzdE1vZGlmeURhdGUiIFR5cGU9IkRhdGVUaW1lIiAvPjxGaWVsZCBOYW1lPSJMYXN0TW9kaWZ5VXNlciIgVHlwZT0iRGVjaW1hbCIgLz48RmllbGQgTmFtZT0iY21wX0RhdGVJbmNvcnBvcmF0aW9uIiBUeXBlPSJEYXRlVGltZSIgLz48RmllbGQgTmFtZT0iY21wX0NJTiIgVHlwZT0iU3RyaW5nIiAvPjxGaWVsZCBOYW1lPSJjbXBfQ0lOZHQiIFR5cGU9IkRhdGVUaW1lIiAvPjxGaWVsZCBOYW1lPSJjbXBfVnJlZ2lzTm8iIFR5cGU9IkRhdGVUaW1lIiAvPjxGaWVsZCBOYW1lPSJjbXBfVlBhbk5vIiBUeXBlPSJEYXRlVGltZSIgLz48RmllbGQgTmFtZT0iY21wX09mZlJvbGVTaG9ydE5hbWUiIFR5cGU9IlN0cmluZyIgLz48RmllbGQgTmFtZT0iY21wX09uUm9sZVNob3J0TmFtZSIgVHlwZT0iU3RyaW5nIiAvPjxGaWVsZCBOYW1lPSJjb21fQWRkIiBUeXBlPSJTdHJpbmciIC8+PEZpZWxkIE5hbWU9ImNvbV9sb2dvcGF0aCIgVHlwZT0iU3RyaW5nIiAvPjxGaWVsZCBOYW1lPSJjbXBfY3VycmVuY3lpZCIgVHlwZT0iQnl0ZSIgLz48RmllbGQgTmFtZT0iY21wX0tZQ1ByZWZpeCIgVHlwZT0iU3RyaW5nIiAvPjxGaWVsZCBOYW1lPSJjbXBfS1JBSW50ZXJtZWRpYXJ5SUQiIFR5cGU9IlN0cmluZyIgLz48RmllbGQgTmFtZT0iY21wX0xlZGdlclZpZXciIFR5cGU9IlN0cmluZyIgLz48RmllbGQgTmFtZT0iY21wX0NvbWJpbmVkQ250ckRhdGUiIFR5cGU9IkRhdGVUaW1lIiAvPjxGaWVsZCBOYW1lPSJjbXBfQ29tYkNudHJOdW1iZXIiIFR5cGU9IkludDMyIiAvPjxGaWVsZCBOYW1lPSJjbXBfQ29tYkNudHJSZXNldCIgVHlwZT0iU3RyaW5nIiAvPjxGaWVsZCBOYW1lPSJjbXBfQ29tYkNudHJPcmRlciIgVHlwZT0iU3RyaW5nIiAvPjxGaWVsZCBOYW1lPSJjbXBfdmF0X25vIiBUeXBlPSJTdHJpbmciIC8+PEZpZWxkIE5hbWU9ImNtcF9FUEZSZWdpc3RyYXRpb25ObyIgVHlwZT0iU3RyaW5nIiAvPjxGaWVsZCBOYW1lPSJjbXBfRVBGUmVnaXN0cmF0aW9uTm9WYWxpZGZyb20iIFR5cGU9IkRhdGVUaW1lIiAvPjxGaWVsZCBOYW1lPSJjbXBfRVBGUmVnaXN0cmF0aW9uTm9WYWxpZHVwdG8iIFR5cGU9IkRhdGVUaW1lIiAvPjxGaWVsZCBOYW1lPSJjbXBfRVNJQ1JlZ2lzdHJhdGlvbk5vIiBUeXBlPSJTdHJpbmciIC8+PEZpZWxkIE5hbWU9ImNtcF9FU0lDUmVnaXN0cmF0aW9uTm9WYWxpZGZyb20iIFR5cGU9IkRhdGVUaW1lIiAvPjxGaWVsZCBOYW1lPSJjbXBfRVNJQ1JlZ2lzdHJhdGlvbk5vVmFsaWR1cHRvIiBUeXBlPSJEYXRlVGltZSIgLz48RmllbGQgTmFtZT0ib25yb2xlX3NjaGVtYV9pZCIgVHlwZT0iSW50MzIiIC8+PEZpZWxkIE5hbWU9Im9mZnJvbGVfc2NoZW1hX2lkIiBUeXBlPSJJbnQzMiIgLz48RmllbGQgTmFtZT0iY21wX2JpZ0xvZ28iIFR5cGU9IlN0cmluZyIgLz48RmllbGQgTmFtZT0iY21wX3NtYWxsTG9nbyIgVHlwZT0iU3RyaW5nIiAvPjxGaWVsZCBOYW1lPSJjbXBfZ3N0aW4iIFR5cGU9IlN0cmluZyIgLz48RmllbGQgTmFtZT0icGhvbmUiIFR5cGU9IlN0cmluZyIgLz48RmllbGQgTmFtZT0iZW1haWwiIFR5cGU9IlN0cmluZyIgLz48RmllbGQgTmFtZT0iQWRkcmVzcyIgVHlwZT0iU3RyaW5nIiAvPjxGaWVsZCBOYW1lPSJhZGRfY2l0eSIgVHlwZT0iU3RyaW5nIiAvPjxGaWVsZCBOYW1lPSJhZGRfcGluIiBUeXBlPSJTdHJpbmciIC8+PC9WaWV3PjxWaWV3IE5hbWU9IkRldGFpbHMiPjxGaWVsZCBOYW1lPSJJZCIgVHlwZT0iSW50NjQiIC8+PEZpZWxkIE5hbWU9InJlbGF0aW9uX0lkIiBUeXBlPSJJbnQ2NCIgLz48RmllbGQgTmFtZT0iUHJvZHVjdF9OYW1lIiBUeXBlPSJTdHJpbmciIC8+PEZpZWxkIE5hbWU9IlByb2R1Y3RfSWQiIFR5cGU9IkludDY0IiAvPjxGaWVsZCBOYW1lPSJQcm9kdWN0X0Rlc2NyaXB0aW9uIiBUeXBlPSJTdHJpbmciIC8+PEZpZWxkIE5hbWU9ImJhcmNvZGVfaXRlbXNsbm8iIFR5cGU9IlN0cmluZyIgLz48RmllbGQgTmFtZT0iUXVhbnRpdHkiIFR5cGU9IkRlY2ltYWwiIC8+PEZpZWxkIE5hbWU9IlVuaXQiIFR5cGU9IlN0cmluZyIgLz48RmllbGQgTmFtZT0iUmF0ZSIgVHlwZT0iRGVjaW1hbCIgLz48RmllbGQgTmFtZT0iQW1vdW50IiBUeXBlPSJEZWNpbWFsIiAvPjxGaWVsZCBOYW1lPSJUb3RhbF9BbW91bnQiIFR5cGU9IkRlY2ltYWwiIC8+PEZpZWxkIE5hbWU9IlByb2RXaXNlX1RheEFtdCIgVHlwZT0iRGVjaW1hbCIgLz48RmllbGQgTmFtZT0icHJvZFRheFRvdEFtdCIgVHlwZT0iRGVjaW1hbCIgLz48RmllbGQgTmFtZT0iSXNfVGF4cHJlc2VudCIgVHlwZT0iSW50MzIiIC8+PC9WaWV3PjxWaWV3IE5hbWU9IkhlYWRlciI+PEZpZWxkIE5hbWU9IklkIiBUeXBlPSJJbnQ2NCIgLz48RmllbGQgTmFtZT0iQ3VzdG9tZXIiIFR5cGU9IlN0cmluZyIgLz48RmllbGQgTmFtZT0iRG9jX0ZpblllYXIiIFR5cGU9IlN0cmluZyIgLz48RmllbGQgTmFtZT0iRG9jX25vIiBUeXBlPSJTdHJpbmciIC8+PEZpZWxkIE5hbWU9IkRvY19kYXRlIiBUeXBlPSJEYXRlVGltZSIgLz48RmllbGQgTmFtZT0iQnJhbmNoIiBUeXBlPSJTdHJpbmciIC8+PEZpZWxkIE5hbWU9IlRvdGFsIE5ldCBBbW91bnQiIFR5cGU9IkRlY2ltYWwiIC8+PEZpZWxkIE5hbWU9IkZvcm1hdCBUb3RhbCBOZXQgQW1vdW50IiBUeXBlPSJEZWNpbWFsIiAvPjxGaWVsZCBOYW1lPSJDTlRfR1NUSU4iIFR5cGU9IlN0cmluZyIgLz48RmllbGQgTmFtZT0icGFuX25vIiBUeXBlPSJTdHJpbmciIC8+PEZpZWxkIE5hbWU9InVzZXJfbmFtZSIgVHlwZT0iU3RyaW5nIiAvPjwvVmlldz48VmlldyBOYW1lPSJIZWFkZXJNYWluVGF4Ij48RmllbGQgTmFtZT0iSWQiIFR5cGU9IkludDY0IiAvPjxGaWVsZCBOYW1lPSJyZWxhdGlvbl9JZCIgVHlwZT0iSW50NjQiIC8+PEZpZWxkIE5hbWU9IlBlcmNlbnRhZ2UiIFR5cGU9IkRlY2ltYWwiIC8+PEZpZWxkIE5hbWU9IkFtb3VudCIgVHlwZT0iRGVjaW1hbCIgLz48RmllbGQgTmFtZT0iVGF4VHlwZUlkIiBUeXBlPSJJbnQzMiIgLz48RmllbGQgTmFtZT0iVGF4X05hbWUiIFR5cGU9IlN0cmluZyIgLz48L1ZpZXc+PFZpZXcgTmFtZT0icHJvZHVjdHdpc2ViYXJjb2RlIj48RmllbGQgTmFtZT0iUXVvdGVfSWQiIFR5cGU9IkludDY0IiAvPjxGaWVsZCBOYW1lPSJQcm9kdWN0SWQiIFR5cGU9IkludDY0IiAvPjxGaWVsZCBOYW1lPSJTZXJpYWxObyIgVHlwZT0iU3RyaW5nIiAvPjwvVmlldz48VmlldyBOYW1lPSJQcm9kdWN0V2lzZVRheCI+PEZpZWxkIE5hbWU9IklkIiBUeXBlPSJJbnQ2NCIgLz48RmllbGQgTmFtZT0icmVsYXRpb25fSWQiIFR5cGU9IkludDY0IiAvPjxGaWVsZCBOYW1lPSJQcm9kdWN0SWQiIFR5cGU9IkludDY0IiAvPjxGaWVsZCBOYW1lPSJQcm9kdWN0VGF4X1RheFR5cGVJZCIgVHlwZT0iSW50MzIiIC8+PEZpZWxkIE5hbWU9IlByb2R1Y3RUYXhfVGF4VHlwZU5hbWUiIFR5cGU9IlN0cmluZyIgLz48RmllbGQgTmFtZT0iUHJvZHVjdFRheF9QZXJjZW50YWdlIiBUeXBlPSJEZWNpbWFsIiAvPjxGaWVsZCBOYW1lPSJQcm9kdWN0VGF4X0Ftb3VudCIgVHlwZT0iRGVjaW1hbCIgLz48RmllbGQgTmFtZT0iVGF4IiBUeXBlPSJTdHJpbmciIC8+PEZpZWxkIE5hbWU9InRheF9wZXJjbnQiIFR5cGU9IlN0cmluZyIgLz48L1ZpZXc+PFZpZXcgTmFtZT0iUHJvZFdpc2VUYXhXaXNlQW1udCI+PEZpZWxkIE5hbWU9InJlbGF0aW9uX0lkIiBUeXBlPSJJbnQ2NCIgLz48RmllbGQgTmFtZT0iUHJvZHVjdFRheF9BbW91bnQiIFR5cGU9IkRlY2ltYWwiIC8+PEZpZWxkIE5hbWU9Im1vZGUiIFR5cGU9IlN0cmluZyIgLz48RmllbGQgTmFtZT0iVGF4UmF0ZXNTY2hlbWVOYW1lIiBUeXBlPSJTdHJpbmciIC8+PC9WaWV3PjxSZWxhdGlvbiBNYXN0ZXI9IkRldGFpbHMiIERldGFpbD0iUHJvZHVjdFdpc2VUYXgiPjxLZXlDb2x1bW4gTWFzdGVyPSJJZCIgRGV0YWlsPSJQcm9kdWN0SWQiIC8+PC9SZWxhdGlvbj48UmVsYXRpb24gTWFzdGVyPSJIZWFkZXIiIERldGFpbD0iRGV0YWlscyI+PEtleUNvbHVtbiBNYXN0ZXI9IklkIiBEZXRhaWw9InJlbGF0aW9uX0lkIiAvPjwvUmVsYXRpb24+PFJlbGF0aW9uIE1hc3Rlcj0iSGVhZGVyIiBEZXRhaWw9IkFkZHJlc3MiPjxLZXlDb2x1bW4gTWFzdGVyPSJJZCIgRGV0YWlsPSJyZWxhdGlvbl9JZCIgLz48L1JlbGF0aW9uPjxSZWxhdGlvbiBNYXN0ZXI9IkhlYWRlciIgRGV0YWlsPSJIZWFkZXJNYWluVGF4Ij48S2V5Q29sdW1uIE1hc3Rlcj0iSWQiIERldGFpbD0icmVsYXRpb25fSWQiIC8+PC9SZWxhdGlvbj48UmVsYXRpb24gTWFzdGVyPSJIZWFkZXIiIERldGFpbD0iUHJvZFdpc2VUYXhXaXNlQW1udCI+PEtleUNvbHVtbiBNYXN0ZXI9IklkIiBEZXRhaWw9InJlbGF0aW9uX0lkIiAvPjwvUmVsYXRpb24+PC9EYXRhU2V0Pg==</value>
  </data>
  <data name="$this.ScriptsSource" xml:space="preserve">
    <value>
private void SubBand1_BeforePrint(object sender, System.Drawing.Printing.PrintEventArgs e) {
//GetCurrentColumnValue("RailName").ToString();
//xrLabel16.Text=((DataRowView)DetailsProductWiseTax.GetCurrentRow()).Row["Tax"].ToString();

}

double pagewiseTotalAmnt;
int serial_no=0;
int sn=0;
 public string CompanyName { get; set; }

private void xrTableCell26_AfterPrint(object sender, System.EventArgs e) {
}

private void xrTableCell19_BeforePrint(object sender, System.Drawing.Printing.PrintEventArgs e) {
serial_no++;
 XRLabel slno = sender as XRLabel;
 slno.Text = Convert.ToString(serial_no);

}

private void xrCompanyName_AfterPrint(object sender, System.EventArgs e) {
         }
</value>
  </data>
</root>