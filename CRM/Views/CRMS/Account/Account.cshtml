@model CRM.Models.crmAccount
@{
    ViewBag.Title = "Account";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link href="~/assests/pluggins/tagsinput/bootstrap-tagsinput.css" rel="stylesheet" />
<script src="~/assests/pluggins/tagsinput/bootstrap-tagsinput.js"></script>
<link href="~/assests/js/CRM/SearchPopup.css" rel="stylesheet" />
<script src="~/assests/js/CRM/SearchPopup.js"></script>

<script>
    var ActivityProduct = [];
    var ActivityProductCRM = [];
    var ActivityProductProductId = "";
</script>
<script src="~/assests/js/CRM/ActivityProducts.js"></script>
<script src="~/assests/js/CRM/crmProducts.js"></script>
<link href="~/assests/js/CRM/SearchPopup.css" rel="stylesheet" />
<script src="~/assests/js/CRM/ActivityProducts.js"></script>
<link href="~/assests/pluggins/DataTable/jquery.dataTables.min.css" rel="stylesheet" />
<script src="~/assests/pluggins/DataTable/jquery.dataTables.min.js"></script>

<script src="~/assests/js/CRM/crmMembers.js"></script>
<link href="~/assests/pluggins/tagsinput/bootstrap-tagsinput.css" rel="stylesheet" />
<script src="~/assests/pluggins/tagsinput/bootstrap-tagsinput.js"></script>
<script src="~/assests/pluggins/JqueryConfirm/jquery-confirm.min.js"></script>


<script src="~/assests/js/CRM/jquery.multi-select.min.js"></script>
<link href="~/assests/js/CRM/Multiselect.css" rel="stylesheet" />
@*Rev Mantis Issue 22801_Sushanta*@
<link href="~/assests/pluggins/TimePicker/bootstrap-timepicker.min.css" rel="stylesheet" />
<script src="~/assests/pluggins/TimePicker/bootstrap-timepicker.min.js"></script>
@* End of Rev Mantis Issue 22801_Sushanta*@


<style>
    .mutiFMbox {
        padding: 3px 15px 15px 15px;
    }

    .widgetizeForm > li .parentLabel:after {
        border-radius: 50% !important;
    }

    .widgetizeForm > li.on .parentLabel:after {
        background: #3bbf39;
        display: block;
        box-shadow: 0 0 0 3px #fff, 0 0 0 6px #ff9f3b;
    }

    .widgetizeForm > li:not(:first-child).on .parentLabel:before {
        background: #4dc1a1;
    }

    .Projectmodaltype .modal-dialog {
        margin-top: 5px !important;
    }

    .myAssignTarget {
        margin-bottom: 0;
    }
        /*#cmbPriority {
        border-radius: 3px;
    }*/
        .myAssignTarget > li {
            list-style-type: none;
            display: inline-block;
            font-size: 11px;
            text-align: center;
        }

            .myAssignTarget > li:not(:last-child) {
                margin-right: 15px;
            }

            .myAssignTarget > li.mainCircle {
                border: 1px solid #a2d3d8;
                border-radius: 8px;
                overflow: hidden;
            }

            .myAssignTarget > li .heading {
                padding: 2px 12px;
                background: #6d82c5;
                color: #fff;
            }

            .myAssignTarget > li .Num {
                font-size: 14px;
            }

            .myAssignTarget > li.mainHeadCenter {
                font-size: 12px;
                transform: translateY(-16px);
            }

    #myAssignTargetpopup {
        padding: 0;
    }

        #myAssignTargetpopup > li .heading {
            padding: 6px 12px;
            background: #7f96dc;
            font-weight: 600;
            color: #fff;
        }

        #myAssignTargetpopup li .Num {
            font-size: 14px;
            padding: 5px;
        }

    #cc, #bcc {
        display: none;
    }

    /*Rev Mantis Issue 22801_Sushanta*/
    .bootstrap-timepicker-widget table td input {
        margin: 0 auto !important;
    }

    .bootstrap-timepicker-meridian {
        font-size: 11px;
    }
    /*End of Rev Mantis Issue 22801_Sushanta*/
</style>
<style>
    .validclass {
        position: absolute;
        right: -5px;
        top: 5px;
    }
</style>
<script type="text/javascript">


    function fn_crmShowHistory() {

        $.ajax({
            type: "POST",
            url: "@Url.Action("CRMShowHistory", "CRMActivity")",
            // data: { ActivityId: s.GetValue() },
            success: function (response) {
                //$("#idshowhistory").html(response);
                //$("#cCRMShowHistory").modal('show');
                cCRMShowHistory.SetContentHtml(response);
                MVCxClientUtils.FinalizeCallback();
                cCRMShowHistory.Show();
            }
        });



    }



    function btn_ShowHistory() {
        var showhistory_Leadcode = $("#hdnAccount_Id").val();
        var showhistory_actiontype = 'ActivityShowAll';
        $.ajax({
            type: "POST",
            url: "@Url.Action("PopulateActivityAllShowHistoryGrid", "CRMActivity")",
            data: { frmdate: '1', action_type: showhistory_actiontype, entity_id: showhistory_Leadcode, Module: 'Account Activity' },
            success: function (response) {
                // $("#idshowhistory").html(response);
                //$("#cCRMShowHistory").modal('show');
                cCRMShowHistory.SetContentHtml(response);
                MVCxClientUtils.FinalizeCallback();
                cCRMShowHistory.Show();
            }
        });
    }
    function btn_ShowTopTenHistory() {
        var showhistory_Leadcode = $("#hdnAccount_Id").val();
        var showhistory_actiontype = 'ActivityShowTop10';
        $.ajax({
            type: "POST",
            url: "@Url.Action("PopulateActivityAllShowHistoryGrid", "CRMActivity")",
            data: { frmdate: '1', action_type: showhistory_actiontype, entity_id: showhistory_Leadcode, Module: 'Account Activity' },
            success: function (response) {
                cCRMShowHistory.SetContentHtml(response);
                MVCxClientUtils.FinalizeCallback();
                cCRMShowHistory.Show();
            }
        });
    }














    $(document).ready(function () {

        $("#Mandatoryfrm_AccountName").hide();
        $('#clsSMS').hide();
        ccountry.SetEnabled(false);
        cstate.SetEnabled(false);
        ccity.SetEnabled(false);
    });

    function OnAddActivitiesbuttonClick() {
        cActivity_Date.SetDate(new Date());
        cddlActivity.SetValue("");
        cddlActivityType.SetValue("");
        ctxt_Subject.SetText("");
        cmemo_Details.SetText("");
        // Rev Mantis Issue 22801
        $("#timepicker1").val("00:00:00");
        // End of Rev Mantis Issue 22801
        $("#ddlPriority").val(0);
        cDue_dt.SetDate(new Date());
        $("#btnClear").addClass('hide');
        $("#btnSave").removeClass('hide');
    }



    function LostFocusInAccountCode() {
        var obj = {};
        obj.column = "cnt_UCC";
        obj.value = cAccountCode.GetText();


        $.ajax({
            type: "POST",
            url: "/CRMAccount/checkValidation",
            data: JSON.stringify(obj),
            async: true,
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (response) {
                if (cAccountCode.GetText() != '') {
                    if (response == 1) {
                        jAlert("Unique ID is found Duplicate! Cannot Proceed.", 'Alert', function () {
                            cAccountCode.SetText('');
                            cAccountCode.SetFocus()
                        });
                    }
                }

            },
            error: function (response) {
                jAlert("please try again later!");
            }
        });
    }
    function ValidationAccounts() {
        var isvalid = false;
        if (cAccountName.GetText() == "") {
            isvalid = false;
            $("#Mandatoryfrm_AccountName").show();
            jAlert("Account Name is Mandatory"); return;
        }
        else {
            isvalid = true;
        }

        return isvalid;
    }
    function SaveAccount() {
        $("#btnsave").addClass('hide');
        if (ValidationAccounts()) {
            var obj = {};
            var address = {};
            $("#hdnAccount_Id").val() == ""

            if ($("#hdnAccount_Id").val() == "") {
                obj.Action = "Add";
                $("#hdnActionType").val('Add');
                obj.Account_Id = 0;
            }
            else {
                obj.Action = "Update";
                $("#hdnActionType").val('Update');
                obj.Account_Id = $("#hdnAccount_Id").val();
            }

            //$("#hdnLead_Id").val();

            obj.OwnerID = $("#OwnerID").val();
            obj.AssignedID = $("#AssignedID").val();
            obj.Status_Id = $("#Status_Id").val();

            obj.Est_Reveneu = cEst_Reveneu.GetText();
            obj.Est_Close_Date = cEst_Close_Date.GetDate();

            obj.Account_Name = cAccountName.GetText();
            obj.AccountCode = cAccountCode.GetText();
            obj.Mobile = cMobile.GetText();
            obj.Fax = cFax.GetText();
            obj.ParrentAccount = $("#hdfParentAccIDCRM").val();
            obj.TickerSymbol = cTickerSymbol.GetText();
            obj.Reletionship_Type = $("#Reletionship_Type").val();
            //obj.Product_PriceList = $("#ddlPricelist").val();
            obj.Product_PriceList = 0;

            address.add_Website = cWebsite.GetText();
            address.Address1 = cstree1.GetText();
            address.Address2 = cstree2.GetText();
            address.Address3 = cstree3.GetText();
            address.Landmark = cLandmark.GetText();
            address.PinId = $("#hdnpinid").val();
            address.CountryId = $("#hdncountryid").val();
            address.StateId = $("#hdnstateid").val();
            address.CityId = $("#hdncityid").val();

            obj.acccustdetails = address;
            obj.IndustryID = $("#IndustryID").val();
            obj.GSTIN_CODE = cgstincode.GetText();
            obj.OwnershipId = $("#OwnershipId").val();
            obj.Description = cDescription.GetText();

            obj.Credit_Limit = cCreditLimit.GetText();
            obj.Credit_holdId = $("#ddlCredit_hold").val();
            obj.Payment_Terms = $("#Payment_Terms").val();

            obj.Contact_Method = $("#Contact_Method").val();
            obj.Email = $("#Email").val();
            obj.Phone = $("#Phone").val();
            obj.CNTFax = $("#ddlFax").val();

            var contacts = gridLookupcontact.GetSelectedKeyFieldValues();
            obj.crmcontacts_id = contacts.join();


            var opportunity = gridLookupOpportunity.GetSelectedKeyFieldValues();
            obj.crmoportunity_id = opportunity.join();

            obj.Shipping_Method = $("#Shipping_Method").val();
            obj.Freight_Terms = $("#Freight_Terms").val();


            LoadingPanel.Show();
            $.ajax({
                type: "POST",
                url: "/CRMAccount/SaveCRMAccount",
                data: JSON.stringify(obj),
                async: true,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (response) {
                    console.log(response);
                    jAlert(response);
                    gridcrmAccount.Refresh();
                    gridcrmAccount.Refresh();
                    $("#btnsave").removeClass('hide')
                    $("#addaccount").modal('hide');
                    LoadingPanel.Hide();
                },
                error: function (response) {
                    jAlert("Please try again later");
                    LoadingPanel.Hide();
                }
            });
        }
        else
        {
            $("#btnsave").removeClass('hide')
        }

    }

    function EditClick(id, Status) {

        $("#Mandatoryfrm_AccountName").hide();
        $("#hdnAccount_Id").val(id);
        var obj = {};
        obj.Account_Id = id;
        LoadingPanel.Show();

        $.ajax({
            type: "POST",
            url: "/CRMAccount/EditCRMAccounts",
            data: JSON.stringify(obj),
            async: true,
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (response) {
                LoadingPanel.Hide();
                cAccountCode.SetEnabled(false);
                $("#hdnActionType").val('Update');
                $("#hdnAccount_Id").val(response.Account_Id);
                $("#OwnerID").val(response.OwnerID);
                $("#AssignedID").val(response.AssignedID);
                $("#Status_Id").val(response.Status_Id);
                $("#ddlCredit_hold").val(obj.Credit_holdId);
                cEst_Reveneu.SetValue(response.Est_Reveneu);
                if (response.Est_Close_Date != null)
                    cEst_Close_Date.SetDate(new Date(parseInt(response.Est_Close_Date.substr(6))));
                cAccountName.SetText(response.Account_Name);
                cAccountCode.SetText(response.AccountCode);
                cMobile.SetText(response.Mobile);
                cFax.SetText(response.Fax);
                ctxtParentAccount.SetText(response.ParrentAccountName);
                $("#hdfParentAccIDCRM").val(response.ParrentAccount);
                cTickerSymbol.SetText(response.TickerSymbol);
                $("#Reletionship_Type").val(response.Reletionship_Type);

                cWebsite.SetText(response.acccustdetails.add_Website);
                cstree1.SetText(response.acccustdetails.Address1);
                cstree2.SetText(response.acccustdetails.Address2);
                cstree3.SetText(response.acccustdetails.Address3);
                cLandmark.SetText(response.acccustdetails.Landmark);
                $("#hdnpinid").val(response.acccustdetails.PinId);
                cpin.SetText(response.acccustdetails.PinCode);
                $("#hdncountryid").val(response.acccustdetails.CountryId);
                ccountry.SetText(response.acccustdetails.CountryName);
                $("#hdnstateid").val(response.acccustdetails.StateId);
                cstate.SetText(response.acccustdetails.StateName);
                $("#hdncityid").val(response.acccustdetails.CityId);
                ccity.SetText(response.acccustdetails.CityName);

                gridLookupcontact.GetGridView().SelectRowsByKey(response.cntids);
                gridLookupOpportunity.GetGridView().SelectRowsByKey(response.oppids);


                $("#IndustryID").val(response.IndustryID);
                cgstincode.SetText(response.GSTIN_CODE);
                $("#OwnershipId").val(response.OwnershipId);
                cDescription.SetText(response.Description);
                $("#Contact_Method").val(response.Contact_Method);
                $("#Email").val(response.Email);
                $("#Phone").val(response.Phone);
                $("#ddlFax").val(response.CNTFax);

                cCreditLimit.SetValue(response.Credit_Limit);
                //ddlCredit_hold
                $("#Payment_Terms").val(response.Payment_Terms);

                $("#Shipping_Method").val(response.Shipping_Method);
                $("#Freight_Terms").val(response.Freight_Terms);

                $("#addaccount").modal('show');
            },
            error: function (response) {
                jAlert("Can not Edit");
                LoadingPanel.Hide();
            }
        });

    }

    function DeleteClick(id) {
        $("#hdnAccount_Id").val(id);
        var obj = {};
        obj.Account_Id = id;
        jConfirm('Confirm delete?', 'Confirmation Dialog', function (r) {
            if (r == true) {
                $.ajax({
                    type: "POST",
                    url: "/CRMAccount/DeleteCRMAccounts",
                    data: JSON.stringify(obj),
                    async: true,
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (response) {
                        jAlert(response);
                        gridcrmAccount.Refresh();
                        gridcrmAccount.Refresh();
                    },
                    error: function (response) {
                        jAlert("Can not Delete");
                        gridcrmAccount.Refresh();
                        gridcrmAccount.Refresh();
                        LoadingPanel.Hide();
                    }
                });
            }
        });
    }
</script>
<script type="text/javascript">
    function gridcrmAccountclick(s, e) {
        $('#gridcrmAccount').find('tr').removeClass('rowActive');
        $('.floatedBtnArea').removeClass('insideGrid');
        $(s.GetRow(e.visibleIndex)).find('.floatedBtnArea').addClass('insideGrid');
        $(s.GetRow(e.visibleIndex)).addClass('rowActive');
        setTimeout(function () {
            //alert('delay');
            var lists = $(s.GetRow(e.visibleIndex)).find('.floatedBtnArea a');
            $.each(lists, function (index, value) {
                //console.log(index);
                //console.log(value);
                setTimeout(function () {
                    console.log(value);
                    $(value).css({ 'opacity': '1' });
                }, 100);
            });
        }, 200);
    }
    $(document).ready(function () {

        $("#toinput").tagsinput('add', { preventPost: true });
        $('#toinput').on('beforeItemAdd', function (event) {
            var tag = event.item;
            // Do some processing here
            alert(tag)

        });
        $("#ccinput").tagsinput('add', { preventPost: true });
        $("#bccinput").tagsinput('add', { preventPost: true });


        $('.widgetizeForm li .parentLabel').click(function () {
            //alert($(this).attr('class'));
            if ($(this).parent('li').hasClass('ready')) {
                //$('.widgetDrop').hide();
                // $(this).parent('li').addClass('on');
                $('.widgetDrop').hide();
                $(this).parent('li').find('.widgetDrop').toggle();
            } else {
                $(this).parent('li').find('.widgetDrop').hide();
            }
        });
        $('.widgetDrop .nextStage').click(function () {
            //alert($(this).attr('class'));
            if ($(this).hasClass('act')) {
                $(this).closest('li.parentLi').next('.parentLi').addClass('ready');
                $(this).closest('li.parentLi').next('.parentLi').find('.widgetDrop').show();
                $(this).closest('li.parentLi').next('.parentLi').addClass('on');

                $(this).closest('li.parentLi').removeClass('on').addClass('visited');
                $(this).closest('li.parentLi').find('.widgetDrop').hide();
            } else {
                $(this).parent('li').find('.widgetDrop').hide();
            }
        });
        $('.closeDropCont').click(function () {
            $(this).closest('li.parentLi').find('.widgetDrop').hide();
        });

        $('#ccAnchor').click(function (e) {
            e.preventDefault();
            $('#cc').show();
            $(this).hide();
            setTimeout(function () { $('#cc').focus(); }, 5000);

        });
        $('#bccAnchor').click(function (e) {
            e.preventDefault();
            $('#bcc').show();
            $('#bcc').focus();
            $(this).hide();
        });
        $('.sms-template-area').hide();
    });
    function showEmail() {
        $('.sms-template-area').hide();
        $('.email-template-area').show();
    }
    function showSms() {
        $('.email-template-area').hide();
        $('.sms-template-area').show();
    }
</script>

<script>



    function PinChange() {

        var detailsByPin = cpin.GetText().trim();

        //cpin

        if (detailsByPin != '') {
            $.ajax({
                type: "POST",
                url: "/CRMOpportunities/AddressByPin",
                data: JSON.stringify({ PinCode: detailsByPin }),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (msg) {
                    var obj = msg;
                    var returnObj = obj[0];
                    if (returnObj) {
                        cpin.SetText(returnObj.PinCode);
                        ccountry.SetText(returnObj.CountryName);
                        cstate.SetText(returnObj.StateName);
                        ccity.SetText(returnObj.CityName);

                        $('#hdnpinid').val(returnObj.PinId);
                        $('#hdncountryid').val(returnObj.CountryId);
                        $('#hdnstateid').val(returnObj.StateId);
                        $('#hdncityid').val(returnObj.CityId);
                    }
                    else {
                        $('#hdnpinid').val('');
                        $('#hdncountryid').val('');
                        $('#hdnstateid').val('');
                        $('#hdncityid').val('');

                        cpin.SetText('');
                        ccountry.SetText('');
                        cstate.SetText('');
                        ccity.SetText('');

                    }
                }
            });
        }

    }





    function CompanyChange(id) {
        var detailsByPin = cpin.GetText().trim();
        //Address Fill From Companny
        if (id != '') {
            $.ajax({
                type: "POST",
                url: "/CRMOpportunities/AddressByCompany",
                data: JSON.stringify({ cntID: id }),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (msg) {
                    var obj = msg;
                    var returnObj = obj[0];
                    if (returnObj) {
                        cpin.SetText(returnObj.PinCode);
                        ccountry.SetText(returnObj.CountryName);
                        cstate.SetText(returnObj.StateName);
                        ccity.SetText(returnObj.CityName);
                        ctWebSite.SetText(returnObj.WebSite);
                        $("#txt_Address1").val(returnObj.Address1);
                        $("#txt_Address2").val(returnObj.Address2);
                        $("#txt_Landmark").val(returnObj.Landmark);

                        $('#hdnpinid').val(returnObj.PinId);
                        $('#hdncountryid').val(returnObj.CountryId);
                        $('#hdnstateid').val(returnObj.StateId);
                        $('#hdncityid').val(returnObj.CityId);
                    }
                    else {
                        $('#hdnpinid').val('');
                        $('#hdncountryid').val('');
                        $('#hdnstateid').val('');
                        $('#hdncityid').val('');

                        cpin.SetText('');
                        ccountry.SetText('');
                        cstate.SetText('');
                        ccity.SetText('');
                        ctWebSite.SetText('');
                        $("#txt_Address1").val('');
                        $("#txt_Address2").val('');
                        $("#txt_Landmark").val('');
                    }
                }
            });
        }
        else {
            $('#hdnpinid').val('');
            $('#hdncountryid').val('');
            $('#hdnstateid').val('');
            $('#hdncityid').val('');

            cpin.SetText('');
            ccountry.SetText('');
            cstate.SetText('');
            ccity.SetText('');
            ctWebSite.SetText('');
            $("#txt_Address1").val('');
            $("#txt_Address2").val('');
            $("#txt_Landmark").val('');
        }
    }

    function OpenQuatList() {
        $('#QuotationModel').modal('show');
    }

    function OnStartCallback(s, e) {
        e.customArgs["Account"] = $("#hdnAccountid").val();
    }
</script>

@*For Single selection when click on ok button*@
<script type="text/javascript">

    function ValueSelected(e, indexName) {
        if (e.code == "Enter" || e.code == "NumpadEnter") {
            if (indexName == "ParentAccountIndex") {
                var Id = e.target.parentElement.parentElement.cells[0].innerText;
                var name = e.target.parentElement.parentElement.cells[1].children[0].value;
                if (Id) {
                    SetParentAccount(Id, name);
                }
            }
        }
        else if (e.code == "ArrowDown") {
            thisindex = parseFloat(e.target.getAttribute(indexName));
            thisindex++;
            if (thisindex < 10)
                $("input[" + indexName + "=" + thisindex + "]").focus();
        }
        else if (e.code == "ArrowUp") {
            thisindex = parseFloat(e.target.getAttribute(indexName));
            thisindex--;
            if (thisindex > -1)
                $("input[" + indexName + "=" + thisindex + "]").focus();
            else {
                $('#txtParentAccountSearch').focus();
            }
        }
    }

</script>
@*For Single selection when click on ok button*@
@*For Parent Account Single Selection*@
<script type="text/javascript">
    $(document).ready(function () {
        $('#ParentAccModel').on('shown.bs.modal', function () {
            $('#txtParentAccountSearch').focus();
        })
    })
    function ParentAccountButnClick(s, e) {
        $('#ParentAccModel').modal('show');
    }

    function ParentAccount_KeyDown(s, e) {
        if (e.htmlEvent.key == "Enter") {
            $('#ParentAccModel').modal('show');
        }
    }

    function ParentAccountkeydown(e) {
        var OtherDetails = {}

        if ($.trim($("#txtParentAccountSearch").val()) == "" || $.trim($("#txtParentAccountSearch").val()) == null) {
            return false;
        }
        OtherDetails.SearchKey = $("#txtParentAccountSearch").val();

        if (e.code == "Enter" || e.code == "NumpadEnter") {
            var HeaderCaption = [];
            HeaderCaption.push("Account Name");
            HeaderCaption.push("Account Code");

            if ($("#txtParentAccountSearch").val() != "") {
                callonServer("../CRMAccount/GetcrmParentAccount", OtherDetails, "ParentAccountTable", HeaderCaption, "ParentAccountIndex", "SetParentAccount");
            }
        }
        else if (e.code == "ArrowDown") {
            if ($("input[ParentAccountIndex=0]"))
                $("input[ParentAccountIndex=0]").focus();
        }
    }

    function SetParentAccount(Id, Name) {
        debugger;
        var key = Id;
        if (key != null && key != '') {
            $('#ParentAccModel').modal('hide');
            ctxtParentAccount.SetText(Name);
            GetObjectID('hdfParentAccIDCRM').value = key;
            ctxtParentAccount.Focus();
        }
        else {
            ctxtParentAccount.SetText('');
            GetObjectID('hdfParentAccIDCRM').value = '';
        }
    }

</script>
@*For Parent Account  Single Selection*@

@*-----------------------Start Activities---------------------------------*@
<script type="text/javascript">
    function DoActivity(id) {
        $("#hdnAccount_Id").val(id);
        $.ajax({
            type: "POST",
            //url: "Url.Action("GetEmployeesTargetByCode", "EmployeesTarget")",
            url: "@Url.Action("DoActivity", "CRMActivity")",
            data: { Module_Name: "Account Activity", Module_id: id },
            success: function (response) {
                CRMpcControl.SetContentHtml(response);
                MVCxClientUtils.FinalizeCallback();
                CRMpcControl.SetHeaderText('Activities');
                CRMpcControl.Show();

                // Rev Mantis Issue 22801_Sushanta
                setTimeout(function () {
                $('#timepicker1').timepicker({
                    minuteStep: 1,
                    showSeconds: true,
                    showMeridian: false,
                    defaultTime: false,
                    explicitMode: true,
                    setTime: new Date()
                });
                }, 1000)
                // End of Rev Mantis Issue 22801
            }
        });
    }
    function CancelActivity() {
        CRMpcControl.Hide();
    }
    function SaveActivity() {
        if (validationsActivity()) {

            var obj = {};
            obj.activity = cddlActivity.GetValue();
            obj.activity_type = cddlActivityType.GetValue();
            obj.subject = ctxt_Subject.GetText();
            obj.details = cmemo_Details.GetText();
            obj.assignto = $("#ddlAssignTo").val();
            obj.duration = ddlDuration.GetText();
            obj.priority = $("#ddlPriority").val();
            obj.DtxtDue = cDue_dt.GetDate();
            obj.dtActivityDate = cActivity_Date.GetDate();
            obj.CRMactivityid = $("#hdnAccount_Id").val();
            obj.contacttype = $("#ddlContactType").val();
            obj.Module_Name = "Account Activity";
            // Rev Mantis Issue 22801
            obj.Duration_New = $("#timepicker1").val();
            // End of Mantis Issue 22801
            // Mantis Issue 24175
            obj.ActivityTypeNew = cddlActivityTypeNew.GetValue();
            // End of Mantis Issue 24175

            $.ajax({
                type: "POST",
                url: "@Url.Action("SaveActivity", "CRMActivity")",
                data: JSON.stringify(obj),
                async: true,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (response) {
                    jAlert(response, 'Alert');
                    CRMpcControl.Hide();
                }
            });
        }
    }
    function ActivityChange(s, e) {
        $.ajax({
            type: "POST",
            //url: "Url.Action("GetEmployeesTargetByCode", "EmployeesTarget")",
            url: "@Url.Action("ActivityChange", "CRMActivity")",
            data: { ActivityId: s.GetValue() },
            success: function (response) {
                cddlActivityType.ClearItems();
                cddlActivityType.AddItem("Select", "0");
                for (var i = 0; i < response.length; i++) {
                    cddlActivityType.AddItem(response[i].Lead_ActivityTypeName, response[i].Id);
                }
                cddlActivityType.SetSelectedIndex(0);
            }

        });

    }
</script>
@*-----------------------End Activities---------------------------------*@

@*-----------------------Start Members---------------------------------*@
<script type="text/javascript">
    function AddMember(id) {
        $("#Module_Name").val('Account');
        $("#hdnAccount_Id").val(id);
        $("#hdnCampaign_Id").val(id);
        $.ajax({
            type: "POST",
            //url: "Url.Action("GetEmployeesTargetByCode", "EmployeesTarget")",
            url: "@Url.Action("doAddMembers", "CRMMembers")",
            data: { Module_Name: "Account", Module_id: id },
            success: function (response) {
                CRMpcControl.SetContentHtml(response);
                MVCxClientUtils.FinalizeCallback();
                CRMpcControl.SetHeaderText('Members');

                CRMpcControl.Show();
            }
        });

    }

</script>
@*-----------------------End Members---------------------------------*@

@*-----------------------Start Sharing---------------------------------*@
<script type="text/javascript">
    function DoSharing(id) {
        $("#hdnAccount_Id").val(id);
        $("#hdnModule_Name").val("Account");
        $("#hdnModule_Id").val(id);
        $("#toinput").tagsinput('add', "", { preventPost: true });
        $("#PhoneInput").tagsinput('add', "", { preventPost: true });
        $.ajax({
            type: "POST",
            //url: "Url.Action("GetEmployeesTargetByCode", "EmployeesTarget")",
            url: "@Url.Action("GetEntityDetails", "CRMSharing")",
            data: { Module_Name: "Account", Module_id: id },
            async: false,
            success: function (response) {


                var emails = response.emails.map(function (elem) {
                    return elem.Entity_Email;
                }).join(",");

                $("#toinput").tagsinput('add', emails, { preventPost: true });

                var sms = response.phones.map(function (elem) {
                    return elem.Entity_Phone;
                }).join(",");

                $("#PhoneInput").tagsinput('add', sms, { preventPost: true });

            }

        });
        $("#sharingmodel").modal('show');

    }
</script>
@*-----------------------End Sharing---------------------------------*@
@*-----------------------Start Products---------------------------------*@
<script type="text/javascript">
    function DoProducts(id) {
        $("#hdnAccount_Id").val(id);
        $("#hdnCrmProductIdentityId").val(id);
        ShowProducts('ACPRD');

        ShowCRMProductsEditCRM('Account Products', id);
    }
</script>
@*-----------------------End Products---------------------------------*@

@*-----------------------Start AddLiterature---------------------------------*@
<script type="text/javascript">
    function AddLiterature(id, name, code) {


        $('#AttachmentModal').modal('show');

        $("#hdnAccount_Id").val(id);
        $('#hdnDocNo').val(id);
        $('#hdndoc_id').val(id);
        $("#docFileName").val(code);
        $("#docNumber").val(name);
        document.getElementById("docFileName").disabled = true;
        document.getElementById("docNumber").disabled = true;

        setTimeout(function () { $('#documentType').focus(); }, 1000);
    }

</script>
<script type="text/javascript">
    $(function () {
        $('#ddlExport').on('change', function () {
            if ($("#ddlExport option:selected").index() > 0) {
                var selectedValue = $(this).val();
                $('#ddlExport').prop("selectedIndex", 0);

                var url = $('#hdnExportLink').val();
                window.location.href = url.replace("_type_", selectedValue);
            }
        });
    });

    function AddAccount() {
        $("#hdnAccount_Id").val("");
        cAccountCode.SetEnabled(true);
        $("#Status_Id").val(0);
        $("#ddlCredit_hold").val(0);
        cEst_Reveneu.SetValue(0);
        cEst_Close_Date.SetDate(new Date());
        cAccountName.SetText("");
        cAccountCode.SetText("");
        cMobile.SetText("");
        cFax.SetText("");
        ctxtParentAccount.SetText("");
        $("#hdfParentAccIDCRM").val("");
        cTickerSymbol.SetText("");
        $("#Reletionship_Type").val(0);

        cWebsite.SetText("");
        cstree1.SetText("");
        cstree2.SetText("");
        cstree3.SetText("");
        cLandmark.SetText("");
        $("#hdnpinid").val(0);
        cpin.SetText("");
        $("#hdncountryid").val(0);
        ccountry.SetText("");
        $("#hdnstateid").val(0);
        cstate.SetText("");
        $("#hdncityid").val(0);
        ccity.SetText("");

        $("#IndustryID").val(0);
        $("#GSTIN_CODE").val("");
        $("#OwnershipId").val(0);
        cDescription.SetText("");
        $("#Contact_Method").val(0);
        $("#Email").val(0);
        $("#Phone").val(0);
        $("#ddlFax").val(0);

        cCreditLimit.SetValue(0);
        //ddlCredit_hold
        $("#Payment_Terms").val(0);

        $("#Shipping_Method").val(0);
        $("#Freight_Terms").val(0);

    }


    function ShowAllClick() {
        gridcrmAccount.Refresh();
        gridcrmAccount.Refresh();

    }

</script>
<input type="hidden" value="@Url.Action("ExportCRMAccountsList", "CRMAccount", new { type = "_type_" })" id="hdnExportLink" />
<div class="panel-heading">
    <div id="td_contact1" class="panel-title">
        <h3>
            <span id="lblHeadTitle">Account </span>
        </h3>
    </div>
</div>

<div class="form_main clearfix">
    <div class="mTop5">

        @{ if (ViewBag.CanAdd)
         {
            <button class="btn btn-success btn-radius " data-toggle="modal" data-target="#addaccount" onclick="AddAccount();" data-backdrop="static" data-keyboard="true">
                <span class="btn-icon"><i class="fa fa-plus"></i></span> Add Account
            </button>
         }
        }
        <button class="btn btn-info btn-radius  " onclick="ShowAllClick();">Show</button>
        @{ if (ViewBag.CanExport)
         {
            <select name="ddlExport" class="btn btn-primary btn-radius" onchange="Exportclick()" id="ddlExport">
                <option value="0">Export to</option>
                <option value="1">PDF</option>
                <option value="4">RTF</option>
                <option value="2">XLSX</option>
                <option value="3">XLS</option>
                <option value="5">CSV</option>
            </select>
         }
        }
    </div>
</div>


<div class="relative">
    @{
        Html.RenderAction("PopulateLeadGrid", "CRMAccount", new { @frmdate = "Ispageload" });
    }
</div>

<div class="modal fade pmsModal w90" id="addaccount" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Add Account</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body ">


                <div class="clearfix text-center" style="margin-bottom:7px;">
                    <div class="infoSection mRight20">
                        <ul class="list-inline">
                            <li class="list-inline-item" style="margin-right:0px;">
                                <div class="ico"><i class="fa fa-user"></i></div>
                            </li>
                            <li class="list-inline-item">
                                <div><b>Owner</b></div>
                                <div>
                                    <div>@Html.DropDownListFor(m => m.OwnerID, new System.Web.Mvc.SelectList(Model.Users, "user_id", "user_name"))</div>
                                </div>
                            </li>

                        </ul>
                    </div>
                    <div class="infoSection mRight20">
                        <ul class="list-inline">
                            <li class="list-inline-item" style="margin-right:0px;">
                                <div class="ico"><i class="fa fa-user"></i></div>
                            </li>
                            <li class="list-inline-item">
                                <div><b>Assign To</b></div>
                                <div>@Html.DropDownListFor(m => m.AssignedID, new System.Web.Mvc.SelectList(Model.Users, "user_id", "user_name"))</div>

                            </li>

                        </ul>
                    </div>
                    <div class="infoSection mRight20">
                        <ul class="list-inline">
                            <li class="list-inline-item ">
                                <div><b>Status</b></div>
                                <div>
                                    <div>@Html.DropDownListFor(m => m.Status_Id, new System.Web.Mvc.SelectList(Model.Status_Details, "Id", "Status_Code"))</div>
                                </div>
                            </li>

                        </ul>
                    </div>
                    <div class="infoSection mRight20">
                        <ul class="list-inline">
                            <li class="list-inline-item">
                                <div><b>Est. Revenue</b></div>
                                <div>
                                    @Html.DevExpress().TextBoxFor(m => m.Est_Reveneu,
                                            settings =>
                                            {
                                                settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                                                settings.Properties.ClientInstanceName = "cEst_Reveneu";
                                                settings.ControlStyle.CssClass = "DEvInput";
                                            }).GetHtml()
                                </div>
                            </li>

                        </ul>
                    </div>
                    <div class="infoSection mRight20 hide">
                        <ul class="list-inline">
                            <li class="list-inline-item">
                                <div><b>Est. Close Date</b></div>
                                <div>
                                    @Html.DevExpress().DateEditFor(model => model.Est_Close_Date,
                                        settings =>
                                        {
                                            settings.Properties.EditFormat = EditFormat.Custom;
                                            settings.Properties.EditFormatString = "dd-MM-yyyy";
                                            settings.Properties.DisplayFormatString = "dd-MM-yyyy";
                                            //settings.Properties.TimeSectionProperties.Visible = true;
                                            //settings.Properties.TimeSectionProperties.TimeEditProperties.EditFormat = EditFormat.Custom;
                                            //settings.Properties.TimeSectionProperties.TimeEditProperties.EditFormatString = "hh:mm tt";
                                            settings.Date = DateTime.Now;
                                            //settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                                            settings.Properties.ClientInstanceName = "cEst_Close_Date";
                                            settings.ControlStyle.CssClass = "dateEditInput";
                                        }).GetHtml()
                                </div>
                            </li>
                        </ul>
                    </div>

                </div>
                <div class="Vtabs pmsForm">
                    <div class="row">
                        <div class="col-sm-2 col-md-2 col-lg-1">
                            <ul class="nav nav-pills nav-stacked flex-column">
                                <li class="active"><a href="#tab_a" data-toggle="pill">Summary</a></li>
                                <li class=""><a href="#tab_b" data-toggle="pill">Details</a></li>
                            </ul>
                        </div>
                        <div class="col-sm-10 col-md-10 col-lg-11">
                            <div class="tab-content">
                                <div class="tab-pane active" id="tab_a">
                                    <div class="clearfix row">
                                        <div class="col-sm-6 col-md-6">
                                            <div class="crmTAbhd">Account Information <span class="bulet"></span></div>
                                            <div class=" pmsForm slick  bxStyle2 clearfix">
                                                <div class="col-md-6">
                                                    <div class="form-group row">
                                                        <label for="" class="col-sm-12 col-form-label">Account Name <span style="color:red">*</span></label>
                                                        <div class="col-sm-12">
                                                            @Html.DevExpress().TextBoxFor(m => m.Account_Name,
                                                                settings =>
                                                                {
                                                                    settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                                                                    settings.Properties.ClientInstanceName = "cAccountName";
                                                                    settings.Properties.MaxLength = 80;
                                                                    settings.ControlStyle.CssClass = "DEvInput";
                                                                }).GetHtml()
                                                            <span id="Mandatoryfrm_AccountName" style="display: none" class="validclass">
                                                                <img id="imgMandatoryName" class="dxEditors_edtError_PlasticBlue" src="/DXR.axd?r=1_36-tyKfc" title="Mandatory">
                                                            </span>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="col-md-6">
                                                    <div class="form-group row">
                                                        <label for="" class="col-sm-12 col-form-label">Unique ID </label>
                                                        <div class="col-sm-12 relative">
                                                            <div class="">
                                                                @Html.DevExpress().TextBoxFor(m => m.AccountCode,
                                                                settings =>
                                                                {
                                                                    settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                                                                    settings.Properties.ClientInstanceName = "cAccountCode";
                                                                    settings.Properties.MaxLength = 80;
                                                                    settings.ControlStyle.CssClass = "DEvInput";
                                                                    settings.Properties.ClientSideEvents.LostFocus = "LostFocusInAccountCode";
                                                                }).GetHtml()

                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="col-md-6">
                                                    <div class="form-group row">
                                                        <label for="" class="col-sm-12 col-form-label">Phone </label>
                                                        <div class="col-sm-12">
                                                            @Html.DevExpress().TextBoxFor(m => m.Mobile,
                                                                settings =>
                                                                {
                                                                    settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                                                                    settings.Properties.ClientInstanceName = "cMobile";
                                                                    settings.Properties.MaxLength = 80;
                                                                    settings.ControlStyle.CssClass = "DEvInput";
                                                                }).GetHtml()
                                                        </div>
                                                    </div>
                                                </div>

                                                <div class="col-md-6">
                                                    <div class="form-group row">
                                                        <label for="" class="col-sm-12 col-form-label">Fax </label>
                                                        <div class="col-sm-12">
                                                            @Html.DevExpress().TextBoxFor(m => m.Fax,
                                                                settings =>
                                                                {
                                                                    settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                                                                    settings.Properties.ClientInstanceName = "cFax";
                                                                    settings.Properties.MaxLength = 80;
                                                                    settings.ControlStyle.CssClass = "DEvInput";
                                                                }).GetHtml()
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="clear"></div>
                                                @*<div class="col-md-6">
                                                        <div class="form-group row">
                                                            <label for="" class="col-sm-12 col-form-label">Website </label>
                                                            <div class="col-sm-12">
                                                                <input type="text" class="form-control" />
                                                            </div>
                                                        </div>
                                                    </div>*@
                                                <div class="col-md-6">
                                                    <div class="form-group row">
                                                        <label for="" class="col-sm-12 col-form-label">Parent Account </label>
                                                        <div class="col-sm-12">
                                                            @Html.DevExpress().ButtonEdit(
                                                            settings =>
                                                            {
                                                                settings.Name = "btnParentAccCRM";
                                                                settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                                                                settings.Properties.ClientSideEvents.ButtonClick = "ParentAccountButnClick";
                                                                settings.Properties.ClientSideEvents.KeyDown = "ParentAccount_KeyDown";
                                                                settings.Properties.ClientInstanceName = "ctxtParentAccount";
                                                                settings.Properties.Buttons.Add("...");
                                                                settings.ControlStyle.CssClass = "dateEditInput";
                                                            }).GetHtml()
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="col-md-6">
                                                    <div class="form-group row">
                                                        <label for="" class="col-sm-12 col-form-label">Ticker Symbol</label>
                                                        <div class="col-sm-12">
                                                            @Html.DevExpress().TextBoxFor(m => m.TickerSymbol,
                                                                settings =>
                                                                {
                                                                    settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                                                                    settings.Properties.ClientInstanceName = "cTickerSymbol";
                                                                    settings.Properties.MaxLength = 80;
                                                                    settings.ControlStyle.CssClass = "DEvInput";
                                                                }).GetHtml()
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="clear"></div>
                                                <div class="col-md-6">
                                                    <div class="form-group row">
                                                        <label for="" class="col-sm-12 col-form-label">Relationship Type</label>
                                                        <div class="col-sm-12">
                                                            @Html.DropDownListFor(m => m.Reletionship_Type, new System.Web.Mvc.SelectList(Model.listRelationshipType, "ID", "Name"))
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="col-md-6">
                                                    <div class="form-group row">
                                                        <label for="" class="col-sm-12 col-form-label">Product Price List </label>
                                                        <div class="col-sm-12">
                                                            <select id="ddlPricelist" class="form-control">
                                                                <option value="0">Select</option>
                                                            </select>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="clear"></div>

                                            </div>
                                        </div>

                                        <div class="col-sm-6 col-md-6">
                                            <div class="crmTAbhd">Address Information <span class="bulet"></span></div>
                                            <div class=" pmsForm slick clearfix bxStyle2">
                                                <div class="col-md-12">
                                                    <div class="form-group row">
                                                        <label for="" class="col-sm-12 col-form-label">Website</label>
                                                        <div class="col-sm-12">

                                                            @Html.DevExpress().TextBoxFor(m => m.Website,
                                                            settings =>
                                                            {
                                                                settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                                                                settings.Properties.ClientInstanceName = "cWebsite";
                                                                settings.ControlStyle.CssClass = "DEvInput";
                                                            }).GetHtml()
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="clear"></div>
                                                <div class="col-md-6">
                                                    <div class="form-group row">
                                                        <label for="" class="col-sm-12 col-form-label">Address 1</label>
                                                        <div class="col-sm-12">
                                                            @Html.DevExpress().TextBoxFor(m => m.stree1,
                                                            settings =>
                                                            {
                                                                settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                                                                settings.Properties.ClientInstanceName = "cstree1";
                                                                settings.ControlStyle.CssClass = "DEvInput";
                                                            }).GetHtml()
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="col-md-6">
                                                    <div class="form-group row">
                                                        <label for="" class="col-sm-12 col-form-label">Address 2 </label>
                                                        <div class="col-sm-12">
                                                            @Html.DevExpress().TextBoxFor(m => m.stree2,
                                                            settings =>
                                                            {
                                                                settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                                                                settings.Properties.ClientInstanceName = "cstree2";
                                                                settings.ControlStyle.CssClass = "DEvInput";
                                                            }).GetHtml()
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="clear"></div>
                                                <div class="col-md-6">
                                                    <div class="form-group row">
                                                        <label for="" class="col-sm-12 col-form-label">Address 3 </label>
                                                        <div class="col-sm-12">
                                                            @Html.DevExpress().TextBoxFor(m => m.stree3,
                                                            settings =>
                                                            {
                                                                settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                                                                settings.Properties.ClientInstanceName = "cstree3";
                                                                settings.ControlStyle.CssClass = "DEvInput";
                                                            }).GetHtml()
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="col-md-6">
                                                    <div class="form-group row">
                                                        <label for="" class="col-sm-12 col-form-label">Landmark </label>
                                                        <div class="col-sm-12">
                                                            @Html.DevExpress().TextBoxFor(m => m.Landmark,
                                                            settings =>
                                                            {
                                                                settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                                                                settings.Properties.ClientInstanceName = "cLandmark";
                                                                settings.ControlStyle.CssClass = "DEvInput";
                                                            }).GetHtml()
                                                        </div>
                                                    </div>
                                                </div>

                                                <div class="clear"></div>
                                                <div class="col-md-6">
                                                    <div class="form-group row">
                                                        <label for="" class="col-sm-12 col-form-label">Postal/Zip Code </label>
                                                        <div class="col-sm-12">
                                                            @Html.DevExpress().TextBoxFor(m => m.acccustdetails.PinCode,
                                                            settings =>
                                                            {
                                                                settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                                                                settings.Properties.ClientInstanceName = "cpin";
                                                                settings.ControlStyle.CssClass = "DEvInput";
                                                                settings.Properties.ClientSideEvents.LostFocus = "PinChange";
                                                            }).GetHtml()
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="col-md-6">
                                                    <div class="form-group row">
                                                        <label for="" class="col-sm-12 col-form-label">Country </label>
                                                        <div class="col-sm-12">
                                                            @Html.DevExpress().TextBoxFor(m => m.country,
                                                            settings =>
                                                            {
                                                                settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                                                                settings.Properties.ClientInstanceName = "ccountry";
                                                                settings.ControlStyle.CssClass = "DEvInput";
                                                            }).GetHtml()
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="col-md-6">
                                                    <div class="form-group row">
                                                        <label for="" class="col-sm-12 col-form-label">State </label>
                                                        <div class="col-sm-12">
                                                            @Html.DevExpress().TextBoxFor(m => m.state,
                                                            settings =>
                                                            {
                                                                settings.Name = "state";
                                                                settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                                                                settings.Properties.ClientInstanceName = "cstate";
                                                                settings.ControlStyle.CssClass = "DEvInput";
                                                            }).GetHtml()
                                                        </div>
                                                    </div>
                                                </div>

                                                <div class="col-md-6">
                                                    <div class="form-group row">
                                                        <label for="" class="col-sm-12 col-form-label">City </label>
                                                        <div class="col-sm-12">
                                                            @Html.DevExpress().TextBoxFor(m => m.city,
                                                            settings =>
                                                            {
                                                                settings.Name = "city";
                                                                settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                                                                settings.Properties.ClientInstanceName = "ccity";
                                                                settings.ControlStyle.CssClass = "DEvInput";
                                                            }).GetHtml()
                                                        </div>
                                                    </div>
                                                </div>

                                            </div>
                                        </div>


                                    </div>
                                    <input type="hidden" id="hdnpinid" value="@Model.acccustdetails.PinId" />
                                    <input type="hidden" id="hdncountryid" value="@Model.acccustdetails.CountryId" />
                                    <input type="hidden" id="hdnstateid" value="@Model.acccustdetails.StateId" />
                                    <input type="hidden" id="hdncityid" value="@Model.acccustdetails.CityId" />
                                    <input type="hidden" id="hdnAccount_Id" value="@Model.Account_Id" />
                                    @*<input type="hidden" id="hdnOwnerAssignID" value="@ViewBag.OwnerAssignID" />*@
                                    <input type="hidden" id="hdnActionType" value="" />
                                </div>

                                <div class="tab-pane" id="tab_b">
                                    <div class="clearfix row">
                                        <div class="col-sm-6 col-md-6">
                                            <div class="crmTAbhd">Company Profile <span class="bulet"></span></div>
                                            <div class=" pmsForm slick  bxStyle2 clearfix">
                                                <div class="col-md-6">
                                                    <div class="form-group row">
                                                        <label for="" class="col-sm-12 col-form-label">Industry </label>
                                                        <div class="col-sm-12">
                                                            @Html.DropDownListFor(m => m.IndustryID, new System.Web.Mvc.SelectList(Model.Industries, "ind_id", "ind_industry"))
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="col-md-6">
                                                    <div class="form-group row">
                                                        <label for="" class="col-sm-12 col-form-label">GSTIN Code </label>
                                                        <div class="col-sm-12">
                                                            @Html.DevExpress().TextBoxFor(m => m.GSTIN_CODE,
                                                            settings =>
                                                            {
                                                                settings.Name = "cgstincode";
                                                                settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                                                                settings.Properties.ClientInstanceName = "cgstincode";
                                                                settings.ControlStyle.CssClass = "DEvInput";
                                                            }).GetHtml()
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="clear"></div>
                                                <div class="col-md-6">
                                                    <div class="form-group row">
                                                        <label for="" class="col-sm-12 col-form-label">Ownership</label>
                                                        <div class="col-sm-12">
                                                            @Html.DropDownListFor(m => m.OwnershipId, new System.Web.Mvc.SelectList(Model.listOwnership, "ID", "Name"))
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="clear"></div>
                                                <div class="col-md-6">
                                                    <div class="form-group row">
                                                        <label for="" class="col-sm-12 col-form-label">Description</label>
                                                        <div class="col-sm-12">
                                                            @Html.DevExpress().TextBoxFor(m => m.Description,
                                                            settings =>
                                                            {
                                                                settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                                                                settings.Properties.ClientInstanceName = "cDescription";
                                                                settings.ControlStyle.CssClass = "DEvInput";
                                                            }).GetHtml()
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>

                                        <div class="col-sm-6 col-md-6 ">
                                            <div class="crmTAbhd ">Contact Preferences <span class="bulet"></span></div>
                                            <div class=" pmsForm slick clearfix bxStyle2">
                                                <div class="col-md-12">
                                                    <div class="form-group row">
                                                        <label for="" class="col-sm-12 col-form-label">Contact Method</label>
                                                        <div class="col-sm-12">
                                                            @Html.DropDownListFor(m => m.Contact_Method, new System.Web.Mvc.SelectList(Model.listContactMethod, "ID", "Name"))
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="col-md-12">
                                                    <div class="form-group row">
                                                        <label for="" class="col-sm-12 col-form-label">Email </label>
                                                        <div class="col-sm-12">
                                                            @Html.DropDownListFor(m => m.Email, new System.Web.Mvc.SelectList(Model.listEmail, "ID", "Name"))
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="col-md-12">
                                                    <div class="form-group row">
                                                        <label for="" class="col-sm-12 col-form-label">Phone </label>
                                                        <div class="col-sm-12">
                                                            @Html.DropDownListFor(m => m.Phone, new System.Web.Mvc.SelectList(Model.listPhone, "ID", "Name"))
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="col-md-12">
                                                    <div class="form-group row">
                                                        <label for="" class="col-sm-12 col-form-label">Fax </label>
                                                        <div class="col-sm-12">
                                                            @Html.DropDownListFor(m => m.Fax, new System.Web.Mvc.SelectList(Model.listFax, "ID", "Name"), new { id="ddlFax" })
                                                        </div>
                                                    </div>
                                                </div>

                                            </div>
                                        </div>
                                        <div class="clear"></div>
                                        <div class="col-sm-6 col-md-6 ">
                                            <div class="crmTAbhd mTop5">Billing Information <span class="bulet"></span></div>
                                            <div class=" pmsForm slick clearfix bxStyle2">
                                                <div class="col-md-6 hide">
                                                    <div class="form-group row">
                                                        <label for="" class="col-sm-12 col-form-label">Currency</label>
                                                        <div class="col-sm-12">
                                                            <input type="text" class="form-control" />
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="col-md-6">
                                                    <div class="form-group row">
                                                        <label for="" class="col-sm-12 col-form-label">Credit Limit</label>
                                                        <div class="col-sm-12">
                                                            @Html.DevExpress().TextBoxFor(m => m.Credit_Limit,
                                                            settings =>
                                                            {
                                                                settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                                                                settings.Properties.ClientInstanceName = "cCreditLimit";
                                                                settings.ControlStyle.CssClass = "DEvInput";
                                                            }).GetHtml()
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="clear"></div>
                                                <div class="col-md-6">
                                                    <div class="form-group row">
                                                        <label for="" class="col-sm-12 col-form-label">Credit Hold</label>
                                                        <div class="col-sm-12">

                                                            <select class="form-control" id="ddlCredit_hold">
                                                                <option value="0">Select</option>
                                                                <option value="Y">Yes</option>
                                                                <option value="N">No</option>

                                                            </select>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="col-md-6">
                                                    <div class="form-group row">
                                                        <label for="" class="col-sm-12 col-form-label">Payment Terms</label>
                                                        <div class="col-sm-12">
                                                            @Html.DropDownListFor(m => m.Payment_Terms, new System.Web.Mvc.SelectList(Model.listPaymentTerm, "ID", "Name"))
                                                        </div>
                                                    </div>
                                                </div>

                                               



                                            </div>
                                            <div class="clearfix row">
                                                <div class="col-md-12">
                                                    <div class="crmTAbhd mTop5">Entity Details <span class="bulet"></span></div>
                                                    <div class="  bxStyle2 clearfix">
                                                        <div class="col-md-6">
                                                            <div class="form-group row ">
                                                                <label for="" class="col-sm-12 col-form-label">Contact Name </label>
                                                                <div class="col-sm-12 dateEditInput">

                                                                    @{
                                                                        Html.RenderAction("PopulateContactGrid", "CRMAccount");
                                                                    }

                                                                </div>
                                                            </div>
                                                        </div>

                                                        <div class="col-md-6">
                                                            <div class="form-group row ">
                                                                <label for="" class="col-sm-12 col-form-label">Opportunity Name </label>
                                                                <div class="col-sm-12 dateEditInput">

                                                                    @{
                                                                        Html.RenderAction("PopulateOpportunityGrid", "CRMAccount");
                                                                    }

                                                                </div>
                                                            </div>
                                                        </div>

                                                    </div>
                                                </div>
                                            </div>

                                        </div>
                                        <div class="col-sm-6 col-md-6 mTop5">
                                            <div class="crmTAbhd ">Shipping Information <span class="bulet"></span></div>
                                            <div class=" pmsForm slick clearfix bxStyle2">
                                                <div class="col-md-12">
                                                    <div class="form-group row">
                                                        <label for="" class="col-sm-12 col-form-label">Shipping Method </label>
                                                        <div class="col-sm-12">
                                                            @Html.DropDownListFor(m => m.Shipping_Method, new System.Web.Mvc.SelectList(Model.listShippingMethod, "ID", "Name"))
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="col-md-12">
                                                    <div class="form-group row">
                                                        <label for="" class="col-sm-12 col-form-label">Freight Terms </label>
                                                        <div class="col-sm-12">
                                                            @Html.DropDownListFor(m => m.Freight_Terms, new System.Web.Mvc.SelectList(Model.listFreight, "ID", "Name"))
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-danger btn-radius" data-dismiss="modal">Cancel</button>
                <button type="button" id="btnsave" class="btn btn-success btn-radius" onclick="SaveAccount()">Save & Exit</button>
            </div>
        </div>
    </div>
</div>
@Html.DevExpress().LoadingPanel(
    settings =>
    {
        settings.Name = "LoadingPanel";
        settings.Modal = true;
        settings.ContainerElementID = "dvStepOne";
    }
).GetHtml()

@Html.DevExpress().PopupControl(
    settings =>
    {
        settings.Name = "CRMpcControl";
        settings.Width = 600;
        settings.Height = 500;
        //settings.ScrollBars.v
        settings.AllowDragging = true;
        settings.CloseAction = CloseAction.CloseButton;
        settings.CloseOnEscape = true;
        settings.HeaderText = "Employees Target Setting";
        settings.Modal = true;
        settings.AutoUpdatePosition = true;
        settings.Top = 50;
        settings.PopupHorizontalAlign = PopupHorizontalAlign.WindowCenter;
        settings.PopupVerticalAlign = PopupVerticalAlign.Above;
        settings.SetContent(() =>
        { });

        //settings.ClientSideEvents.CloseUp = "function(s, e){ ASPxClientEdit.ClearEditorsInContainer(null, '', true); }";
    }).GetHtml()

<input type="hidden" value="@Url.Action("AttachmentDocument", "CRMAttachment", new { module = "Account" })" id="hdnAttachmentDocument" />

<div>
    @{
        Html.RenderAction("AttachmentDocument", "CRMAttachment", new { module = "Lead", DocNo = "" });
    }
</div>

<div>
    @{
        Html.RenderAction("AddProducts", "CRMProducts");
    }
</div>

<div>
    @{
        Html.RenderAction("DoSharing", "CRMSharing");
    }
</div>


<input type="hidden" id="hdnCrmProductIdentityId" />
<input type="hidden" id="hdnModule_Name" />
<input type="hidden" id="hdnModule_Id" />
<input type="hidden" id="hdnCampaign_Id" />
<input type="hidden" id="Module_Name" />

<!--Parent Account Modal -->
<div class="modal fade pmsModal w30" id="ParentAccModel" role="dialog">
    <div class="modal-dialog">
        <!-- Ledger content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Parent Account Search</h4>
            </div>
            <div class="modal-body">
                <input type="text" onkeydown="ParentAccountkeydown(event)" id="txtParentAccountSearch" autofocus width="100%" placeholder="Search By Parent Account" />
                <div id="ParentAccountTable">
                    <table border='1' width="100%" class="dynamicPopupTbl">
                        <tr class="HeaderStyle">
                            <th class="hide">id</th>
                            <th>Account Name</th>
                            <th>Account Code</th>
                        </tr>
                    </table>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>
<!--Parent Account Modal -->
<asp:HiddenField ID="hdfParentAccIDCRM" runat="server" />


@Html.DevExpress().PopupControl(
    settings =>
    {
        settings.Name = "cCRMShowHistory";
        settings.Width = 700;
        settings.Height = System.Web.UI.WebControls.Unit.Percentage(100);
        settings.AllowDragging = true;
        settings.CloseAction = CloseAction.CloseButton;
        settings.CloseOnEscape = true;
        settings.PopupAnimationType = AnimationType.None;
        settings.HeaderText = "Show History";
        settings.Modal = true;
        settings.AutoUpdatePosition = true;
        settings.Top = 50;
        settings.PopupHorizontalAlign = PopupHorizontalAlign.WindowCenter;
        settings.PopupVerticalAlign = PopupVerticalAlign.Above;
        settings.SetContent(() =>
        { });

        // settings.ClientSideEvents.CloseUp = "function(s, e){ ASPxClientEdit.ClearEditorsInContainer(null, '', true); }";
    }).GetHtml()

<script>
    $(document).ready(function () {
        gridLookupcontact.gridView.Refresh()
        gridLookupcontact.gridView.Refresh()
        gridLookupOpportunity.gridView.Refresh()
        gridLookupOpportunity.gridView.Refresh()

    });
</script>