@using System.Web.UI.WebControls
@using DevExpress.Web.Mvc
@using DevExpress.Web
@model Manufacturing.Models.ViewModel.FGReceivedViewModel

@{
    ViewBag.Title = "FG Received";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link href="~/assests/css/SearchPopup.css" rel="stylesheet" />
@*<script src="~/Scripts/SearchPopup.js"></script>*@
<link href="https://cdn.datatables.net/1.10.19/css/jquery.dataTables.min.css" rel="stylesheet" />
<script src="https://cdn.datatables.net/1.10.19/js/jquery.dataTables.min.js"></script>
<script src="https://cdn.datatables.net/fixedcolumns/3.3.0/js/dataTables.fixedColumns.min.js"></script>
<script src="~/Scripts/SearchPopupDatatable.js"></script>

<script>
    var TotalGridFinishQty = 0;
    var TotalRawAMountqty = 0;
    $(document).ready(function () {

        if ('@ViewBag.TaggedData' == "YES") {
            $('#btnSaveAndNew').hide();
            $('#saveandexit').hide();
            $('#lbltaggedsms').show();
        }
        else
        {
            $('#lbltaggedsms').hide();
        }


        var ProductionReceiptIDd = $('#ProductionReceiptID').val();
        //if (parseInt(ProductionReceiptIDd) > 0) {
        //    if (parseFloat($("#hdnOrder_QtyMax").val()) == 0 || $("#hdnOrder_QtyMax").val() == "") {
        //        $("#hdnOrder_QtyMax").val($('#Order_Qty').val());
        //    }
        //    else {
        //        $('#hdnOrder_QtyMax').val(parseFloat($('#Order_Qty').val()) + parseFloat($('#hdnOrder_QtyMax').val()));
        //    }
        //}
       // $('#hdnPendqty').val($('#Order_Qty').val());

       
      
        if (ProductionReceiptIDd != "" && ProductionReceiptIDd != null && ProductionReceiptIDd != undefined)
        {
            if (parseInt(ProductionReceiptIDd) > 0) {
                btnFinishedItem.SetEnabled(true);
                //Warehouse.SetEnabled(false);
                setTimeout(function () {
                   // SetFGPrice();
                }, 500);
            }
        }


        if ('@ViewBag.ProjectShow' == "Yes") {
            $("#divProj").removeClass("hidden");
        }
        else {
            $("#divProj").addClass("hidden");
        }

        if ('@ViewBag.Hierarchy' == "1") {
            $('#divHierarchy').removeClass('hidden');
        }
        else {
            $('#divHierarchy').addClass('hidden');
        }
    });
    function ChkDataDigitCount(e) {

        var data = $(e).val();
        if (data != "" || data == null) {
            $(e).val(parseFloat(data).toFixed(4));
        }
        if (data == '' || data == null) {
           // $(e).val(parseFloat(0).toFixed(4));
        }
    }


    function OpenWarehouseList(s, e) {
       
        var ProductName = btnFinishedItem.GetText();//$("#FinishedItem").val();
        if (ProductName == "") {
            jAlert("Please select Finish Item before select warehouse!");
            return false;
        }
        else {
            //GridWarehouselist();
            // warehousefocus = 1;
            Headergrid_WarehouseDetailsClick();
        }
    }



    function GridWarehouselist() {
        var BankBranchID = $('#ddlBankBranch').val();//$('#BRANCH_ID option:selected').val();
        if (BankBranchID > 0) {
            $.ajax({
                type: "POST",
                url: "@Url.Action("getWarehouseRecord", "BOMEntry")",
                data: { branchid: BankBranchID },
            success: function (response) {
                $('#ddlWarehouselist').html('');
                var html = "";
                for (var i = 0; i < response.length; i++) {
                    html = html + "<option value='" + response[i].WarehouseID + "'>" + response[i].WarehouseName + "</option>";
                }
                $('#ddlWarehouselist').html(html);
                $('#GridWarehouselistModel').modal('show');


            }
        });
    }
    else {
            jAlert('Please select branch!');
    $('#GridWarehouselistModel').modal('hide');
    return false;
    }
    }

    function UpdateSerialNo() {
        var productid = gridProductionBOMProductList.batchEditApi.GetCellValue(globalrowindex, 'BOMProductsID');
        var warehouse = $('#WHddlWarehouse').val();
        var Batch = $('#ddlBatch').val();
        var IssueDate = GetServerDateFormat(OrderDate_dt.GetValue());
        $.ajax({
            type: "POST",
            url: "@Url.Action("getProductSerialNo", "FGReceived")",
            data: { productid: productid, warehouse: warehouse, Batch: Batch, PostingDate: IssueDate },
        success: function (response) {

            $('#checkComboBox').html('');
            var html = "";
            for (var i = 0; i < response.length; i++) {
                html = html + "<option value='" + response[i].SerialValue + "'>" + response[i].SerialValue + "</option>";
            }
            $('#checkComboBox').html(html);
        }
    });
    }

    function HeaderUpdateSerialNo() {
        var productid = $('#hdnFinishedItem').val();//gridProductionBOMProductList.batchEditApi.GetCellValue(globalrowindex, 'BOMProductsID');
        var warehouse = $('#HeaderWHddlWarehouse').val();
        var Batch = $('#HeaderddlBatch').val();
        var IssueDate = GetServerDateFormat(OrderDate_dt.GetValue());
        $.ajax({
            type: "POST",
            url: "@Url.Action("getProductSerialNo", "FGReceived")",
            data: { productid: productid, warehouse: warehouse, Batch: Batch, PostingDate: IssueDate },
        success: function (response) {

            $('#HeadercheckComboBox').html('');
            var html = "";
            for (var i = 0; i < response.length; i++) {
                html = html + "<option value='" + response[i].SerialValue + "'>" + response[i].SerialValue + "</option>";
            }
            $('#HeadercheckComboBox').html(html);
        }
    });
    }


    function PopulateProductWareHouseDetailsData() {
        var BankBranchID = $('#ddlBankBranch option:selected').val();
        var ProductsID = gridProductionBOMProductList.batchEditApi.GetCellValue(globalrowindex, 'BOMProductsID');
        var WorkcenterId = $('#WorkCenterID').val();
        $.ajax({
            type: "POST",
            url: "@Url.Action("getProductWiseWarehouseRecord", "FGReceived")",
            data: { branchid: BankBranchID, productid: ProductsID, WorkcenterId: WorkcenterId },
        success: function (response) {
            $('#WHddlWarehouse').html('');
            var html = "";
            var hdnProductWarehouseID = $('#hdnProductWarehouseID').val();
            for (var i = 0; i < response.length; i++) {
                html = html + "<option value='" + response[i].WarehouseID + "'>" + response[i].WarehouseName + "</option>";
            }
            $('#WHddlWarehouse').html(html);

            UpdateSerialNo();
        }
    });
    }

    function HeaderPopulateProductWareHouseDetailsData() {
        var BankBranchID = $('#ddlBankBranch option:selected').val();
        var ProductsID = $('#hdnFinishedItem').val();//gridProductionBOMProductList.batchEditApi.GetCellValue(globalrowindex, 'BOMProductsID');
       // var WareHouseId = $('#hddnWarehouseID').val();
        $.ajax({
            type: "POST",
            url: "@Url.Action("HeadergetProductWiseWarehouseRecord", "FGReceived")",
            data: { branchid: BankBranchID, productid: ProductsID},
            success: function (response) {
            $('#HeaderWHddlWarehouse').html('');
            var html = "";
            var hdnProductWarehouseID = $('#hdnProductWarehouseID').val();
            for (var i = 0; i < response.length; i++) {
                html = html + "<option value='" + response[i].WarehouseID + "'>" + response[i].WarehouseName + "</option>";
            }
            $('#HeaderWHddlWarehouse').html(html);

            HeaderUpdateSerialNo();
        }
    });
    }

    function ddlWarehouse_ValueChange() {
        //var BankBranchID = $('#ddlBankBranch option:selected').val();
        var ProductsID = gridProductionBOMProductList.batchEditApi.GetCellValue(globalrowindex, 'BOMProductsID');
        var WarehouseID = $('#WHddlWarehouse option:selected').val();
        $.ajax({
            type: "POST",
            url: "@Url.Action("getBatchRecord", "FGReceived")",
            data: { warehouseid: WarehouseID, ProductID: ProductsID },
        success: function (response) {
            $('#ddlBatch').html('');
            var html = "";
            for (var i = 0; i < response.length; i++) {
                html = html + "<option value='" + response[i].BatchID + "'>" + response[i].BatchName + "</option>";
            }
            $('#ddlBatch').html(html);

            //ddlWarehouse_ValueChange();
            UpdateSerialNo();

        }
    });
    }


    function HeaderddlWarehouse_ValueChange() {
        //var BankBranchID = $('#ddlBankBranch option:selected').val();
        var ProductsID = $("#hdnFinishedItem").val();//gridProductionBOMProductList.batchEditApi.GetCellValue(globalrowindex, 'BOMProductsID');
        var WarehouseID = $('#HeaderWHddlWarehouse option:selected').val();
        $.ajax({
            type: "POST",
            url: "@Url.Action("HeadergetBatchRecord", "FGReceived")",
            data: { warehouseid: WarehouseID, ProductID: ProductsID },
        success: function (response) {
            $('#HeaderddlBatch').html('');
            var html = "";
            for (var i = 0; i < response.length; i++) {
                html = html + "<option value='" + response[i].BatchID + "'>" + response[i].BatchName + "</option>";
            }
            $('#HeaderddlBatch').html(html);

            //ddlWarehouse_ValueChange();
            HeaderUpdateSerialNo();

        }
    });
    }

    function sortByMultipleKey(keys) {
        return function (a, b) {
            if (keys.length == 0) return 0; // force to equal if keys run out
            key = keys[0]; // take out the first key
            if (a[key] < b[key]) return -1; // will be 1 if DESC
            else if (a[key] > b[key]) return 1; // will be -1 if DESC
            else return sortByMultipleKey(keys.slice(1))(a, b);
        }
    }

    function HeadersortByMultipleKey(keys) {
        return function (a, b) {
            if (keys.length == 0) return 0; // force to equal if keys run out
            key = keys[0]; // take out the first key
            if (a[key] < b[key]) return -1; // will be 1 if DESC
            else if (a[key] > b[key]) return 1; // will be -1 if DESC
            else return HeadersortByMultipleKey(keys.slice(1))(a, b);
        }
    }


    var StockOfProduct = [];
    function StockDeatils() {

        var IsBarcodeGenerator = $('#hdfIsBarcodeGenerator').val();
        var StockType = $('#hdfProductType').val();
        var ProductSrlNo = $('#hdfProductSerialID').val();
        var StockDetails = $.grep(StockOfProduct, function (element, index) { return element.Product_SrlNo == ProductSrlNo });
        var StockHearder = [];

        if (StockType == "W") {
            StockHearder = ["WarehouseName", "SalesQuantity"];
        }
        else if (StockType == "WC") {
            StockHearder = ["WarehouseName", "SerialNo", "Barcode", "SalesQuantity"];
        }
        else if (StockType == "B") {
            StockHearder = ["ViewBatch", "ViewMfgDate", "ViewExpiryDate", "SalesQuantity"];
        }
        else if (StockType == "S") {
            StockHearder = ["SalesQuantity", "SerialNo"];
        }
        else if (StockType == "WB") {
            StockHearder = ["WarehouseName", "ViewBatch", "SalesQuantity"];
        }
        else if (StockType == "WS") {
            StockHearder = ["WarehouseName", "SerialNo", "SalesQuantity"];
        }
        else if (StockType == "WBS") {
            StockHearder = ["WarehouseName", "ViewBatch", "SerialNo", "SalesQuantity"];
        }
        else if (StockType == "WSC") {
            StockHearder = ["WarehouseName", "SerialNo", "Barcode", "SalesQuantity"];
        }
        else if (StockType == "BS") {
            StockHearder = ["ViewBatch", "ViewMfgDate", "ViewExpiryDate", "SerialNo", "SalesQuantity"];
        }

        var IsRateExists = $('#hdfIsRateExists').value;
        if (IsRateExists == "Y") {
            var index = StockHearder.indexOf("SalesQuantity") + 1;
            StockHearder.splice(index, 0, "Rate");
        }

        StockDetails.sort(sortByMultipleKey(['LoopID', 'SrlNo']));
        var td_width = parseFloat(100 / StockHearder.length).toFixed(2) + "%";

        // EXTRACT VALUE FOR HTML HEADER.
        var col = [];

        if (StockDetails.length > 0) {
            var temp_col = [];

            for (var i = 0; i < StockDetails.length; i++) {
                for (var key in StockDetails[i]) {
                    if (temp_col.indexOf(key) === -1) {
                        if (StockHearder.indexOf(key) > -1) {
                            temp_col.push(key);
                        }
                    }
                }
            }

            for (var i = 0; i < StockHearder.length; i++) {
                var key = StockHearder[i];
                if (temp_col.indexOf(key) > -1) {
                    col.push(key);
                }
            }
        }
        else {
            var arrayLength = StockHearder.length;
            for (var i = 0; i < arrayLength; i++) {
                col.push(StockHearder[i]);
            }
        }
        col.push("Action");

        // CREATE DYNAMIC TABLE.
        var table = document.createElement("table");
        table.setAttribute("class", "GridtypeTable");

        // CREATE HTML TABLE HEADER ROW USING THE EXTRACTED HEADERS ABOVE.
        var tr = table.insertRow(-1);                   // TABLE ROW.

        var header = table.createTHead();
        var row = header.insertRow(0);
        for (var i = 0; i < col.length; i++) {
            //var cell = row.insertCell(parseInt(i));
            //cell.innerHTML = col[i];

            var th = document.createElement("th");      // TABLE HEADER.
            th.width = td_width;

            if (col[i] == "SalesQuantity") th.style.textAlign = "right";
            else if (col[i] == "Rate") th.style.textAlign = "right";

            if (col[i] == "WarehouseName") th.innerHTML = "Warehouse";
            else if (col[i] == "SalesQuantity") th.innerHTML = "Quantity";
            else if (col[i] == "ViewBatch") th.innerHTML = "Batch Number";
                //else if (col[i] == "Batch") th.innerHTML = "Batch Number";
            else if (col[i] == "ViewMfgDate") th.innerHTML = "Mfg Date";
            else if (col[i] == "ViewExpiryDate") th.innerHTML = "Expiry Date";
            else if (col[i] == "SerialNo") th.innerHTML = "Serial Number";
            else th.innerHTML = col[i];

            row.appendChild(th);
        }

        // ADD JSON DATA TO THE TABLE AS ROWS.
        if (StockDetails.length > 0) {
            for (var i = 0; i < StockDetails.length; i++) {
                tr = table.insertRow(-1);

                var ID = StockDetails[i]["SrlNo"];
                var style = StockDetails[i]["IsOutStatus"];

                for (var j = 0; j < col.length; j++) {
                    var tabCell = tr.insertCell(-1);
                    tabCell.width = td_width;

                    if (col[j] == "Action") {
                        //if (IsBarcodeGenerator == "N") {
                        //    if (style == "display:none") {
                        //        tabCell.innerHTML = "Used";
                        //    }
                        //  else {
                        var EVENT = "removeRow(" + ID + ")";
                        var anchor = document.createElement('a');
                        anchor.setAttribute('onclick', EVENT);
                        anchor.setAttribute('title', 'Delete');
                        anchor.href = '#';

                        var element = document.createElement("img");
                        element.setAttribute("src", "/assests/images/crs.png");
                        anchor.appendChild(element);

                        tabCell.appendChild(anchor);
                        // }
                        // }
                    }
                    else {
                        if (col[j] == "SalesQuantity") tabCell.style.textAlign = "right";
                        else if (col[j] == "Rate") tabCell.style.textAlign = "right";

                        tabCell.innerHTML = StockDetails[i][col[j]];
                    }
                }
            }
        }

        // FINALLY ADD THE NEWLY CREATED TABLE WITH JSON DATA TO A CONTAINER.
        var divContainer = document.getElementById("showData");
        divContainer.innerHTML = "";
        divContainer.appendChild(table);
    }


    function removeRow(ID) {
        var WarehouseID = ($('#WHddlWarehouse').val() != null) ? $('#WHddlWarehouse').val() : "0";
        var BatchID = ($('#ddlBatch').val() != null) ? $('#ddlBatch').val() : "0";

        var FifoExists = $("#hddnConfigVariable_Val").val();

        var Qty = $("#ctxtMatchQty").val();
        var hddnQty = $("#hddnWarehouseQty").val();

        removeStockJson(StockOfProduct, function () { return this.SrlNo == ID; });
        //cGrdWarehouse.PerformCallback('Delete~' + keyValue);
        //PopulateGridWarehouse();
        StockDeatils();
        //if (FifoExists == "0") {
        //   // checkListBox.PerformCallback('BindSerial~' + WarehouseID + '~' + BatchID + '~' + 'NoFIFO');
        //}
    }

    function HeaderremoveRow(ID) {
        var WarehouseID = ($('#HeaderWHddlWarehouse').val() != null) ? $('#HeaderWHddlWarehouse').val() : "0";
        var BatchID = ($('#HeaderddlBatch').val() != null) ? $('#HeaderddlBatch').val() : "0";

        var FifoExists = $("#hddnConfigVariable_Val").val();

        var Qty = $("#HeaderctxtMatchQty").val();
        var hddnQty = $("#HeaderhddnWarehouseQty").val();

        removeStockJson(HeaderStockOfProduct, function () { return this.SrlNo == ID; });
        //cGrdWarehouse.PerformCallback('Delete~' + keyValue);
        //PopulateGridWarehouse();
        HeaderStockDeatils();
        //if (FifoExists == "0") {
        //   // checkListBox.PerformCallback('BindSerial~' + WarehouseID + '~' + BatchID + '~' + 'NoFIFO');
        //}
    }



    function removeStockJson(arr, func) {
        for (var i = 0; i < arr.length; i++) {
            if (func.call(arr[i])) {
                arr.splice(i, 1);
                return arr;
            }
        }
    }


    var HeaderStockOfProduct = [];
    function HeaderStockDeatils() {

        var IsBarcodeGenerator = $('#hdfIsBarcodeGenerator').val();
        var StockType = $('#HeaderhdfProductType').val();
        var ProductSrlNo = 0;
        if ($('#HeaderhdnSrlNo').val() == null || $('#HeaderhdnSrlNo').val() == "")
        {
            ProductSrlNo=gridFGFinishItemList.GetVisibleRowsOnPage() + 1;
        }
        else
        {
            ProductSrlNo = $('#HeaderhdnSrlNo').val();
        }
       
        var StockDetails = $.grep(HeaderStockOfProduct, function (element, index) { return element.Product_SrlNo == ProductSrlNo });
        var StockHearder = [];

        if (StockType == "W") {
            StockHearder = ["WarehouseName", "SalesQuantity"];
        }
        else if (StockType == "WC") {
            StockHearder = ["WarehouseName", "SerialNo", "Barcode", "SalesQuantity"];
        }
        else if (StockType == "B") {
            StockHearder = ["ViewBatch", "ViewMfgDate", "ViewExpiryDate", "SalesQuantity"];
        }
        else if (StockType == "S") {
            StockHearder = ["SalesQuantity", "SerialNo"];
        }
        else if (StockType == "WB") {
            StockHearder = ["WarehouseName", "ViewBatch", "ViewMfgDate", "ViewExpiryDate", "SalesQuantity"];
        }
        else if (StockType == "WS") {
            StockHearder = ["WarehouseName", "SerialNo", "SalesQuantity"];
        }
        else if (StockType == "WBS") {
            StockHearder = ["WarehouseName", "ViewBatch", "ViewMfgDate", "ViewExpiryDate", "SerialNo", "SalesQuantity"];
        }
        else if (StockType == "WSC") {
            StockHearder = ["WarehouseName", "SerialNo", "Barcode", "SalesQuantity"];
        }
        else if (StockType == "BS") {
            StockHearder = ["ViewBatch", "ViewMfgDate", "ViewExpiryDate", "SerialNo", "SalesQuantity"];
        }

        var IsRateExists = $('#HeaderhdfIsRateExists').value;
        if (IsRateExists == "Y") {
            var index = StockHearder.indexOf("SalesQuantity") + 1;
            StockHearder.splice(index, 0, "Rate");
        }

        StockDetails.sort(HeadersortByMultipleKey(['LoopID', 'SrlNo']));
        var td_width = parseFloat(100 / StockHearder.length).toFixed(2) + "%";

        // EXTRACT VALUE FOR HTML HEADER.
        var col = [];

        if (StockDetails.length > 0) {
            var temp_col = [];

            for (var i = 0; i < StockDetails.length; i++) {
                for (var key in StockDetails[i]) {
                    if (temp_col.indexOf(key) === -1) {
                        if (StockHearder.indexOf(key) > -1) {
                            temp_col.push(key);
                        }
                    }
                }
            }

            for (var i = 0; i < StockHearder.length; i++) {
                var key = StockHearder[i];
                if (temp_col.indexOf(key) > -1) {
                    col.push(key);
                }
            }
        }
        else {
            var arrayLength = StockHearder.length;
            for (var i = 0; i < arrayLength; i++) {
                col.push(StockHearder[i]);
            }
        }
        col.push("Action");

        // CREATE DYNAMIC TABLE.
        var table = document.createElement("table");
        table.setAttribute("class", "GridtypeTable");

        // CREATE HTML TABLE HEADER ROW USING THE EXTRACTED HEADERS ABOVE.
        var tr = table.insertRow(-1);                   // TABLE ROW.

        var header = table.createTHead();
        var row = header.insertRow(0);
        for (var i = 0; i < col.length; i++) {
            //var cell = row.insertCell(parseInt(i));
            //cell.innerHTML = col[i];

            var th = document.createElement("th");      // TABLE HEADER.
            th.width = td_width;

            if (col[i] == "SalesQuantity") th.style.textAlign = "right";
            else if (col[i] == "Rate") th.style.textAlign = "right";

            if (col[i] == "WarehouseName") th.innerHTML = "Warehouse";
            else if (col[i] == "SalesQuantity") th.innerHTML = "Quantity";
            else if (col[i] == "ViewBatch") th.innerHTML = "Batch Number";
         // else if (col[i] == "Batch") th.innerHTML = "Batch Number";
            else if (col[i] == "ViewMfgDate") th.innerHTML = "Mfg Date";
            else if (col[i] == "ViewExpiryDate") th.innerHTML = "Expiry Date";
            else if (col[i] == "SerialNo") th.innerHTML = "Serial Number";
            else th.innerHTML = col[i];

            row.appendChild(th);
        }

        // ADD JSON DATA TO THE TABLE AS ROWS.
        if (StockDetails.length > 0) {
            for (var i = 0; i < StockDetails.length; i++) {
                tr = table.insertRow(-1);

                var ID = StockDetails[i]["SrlNo"];
                var style = StockDetails[i]["IsOutStatus"];

                for (var j = 0; j < col.length; j++) {
                    var tabCell = tr.insertCell(-1);
                    tabCell.width = td_width;

                    if (col[j] == "Action") {
                        //if (IsBarcodeGenerator == "N") {
                        //    if (style == "display:none") {
                        //        tabCell.innerHTML = "Used";
                        //    }
                        //  else {
                        var EVENT = "HeaderremoveRow(" + ID + ")";
                        var anchor = document.createElement('a');
                        anchor.setAttribute('onclick', EVENT);
                        anchor.setAttribute('title', 'Delete');
                        anchor.href = '#';

                        var element = document.createElement("img");
                        element.setAttribute("src", "/assests/images/crs.png");
                        anchor.appendChild(element);

                        tabCell.appendChild(anchor);
                        // }
                        // }
                    }
                    else {
                        if (col[j] == "SalesQuantity") tabCell.style.textAlign = "right";
                        else if (col[j] == "Rate") tabCell.style.textAlign = "right";

                        tabCell.innerHTML = StockDetails[i][col[j]];
                    }
                }
            }
        }

        // FINALLY ADD THE NEWLY CREATED TABLE WITH JSON DATA TO A CONTAINER.
        var divContainer = document.getElementById("HeadershowData");
        divContainer.innerHTML = "";
        divContainer.appendChild(table);
    }


    function PopulateWareHouseDetailsData() {
        var BankBranchID = $('#ddlBankBranch option:selected').val();
        var WorkCenterId = $('#WorkCenterID').val();
        $.ajax({
            type: "POST",
            url: "@Url.Action("getWarehouseRecord", "FGReceived")",
            data: { branchid: BankBranchID, WorkCenterId: WorkCenterId },
        success: function (response) {
            $('#WHddlWarehouse').html('');
            var html = "";
            var hdnProductWarehouseID = $('#hdnProductWarehouseID').val();
            for (var i = 0; i < response.length; i++) {
                html = html + "<option value='" + response[i].WarehouseID + "'>" + response[i].WarehouseName + "</option>";
            }
            $('#WHddlWarehouse').html(html);

            ddlWarehouse_ValueChange();
        }
    });
    }

    function HeaderPopulateWareHouseDetailsData() {
        var BankBranchID = $('#ddlBankBranch option:selected').val();
        var WarehouseId = $('#hddnWarehouseID').val();
        $.ajax({
            type: "POST",
            url: "@Url.Action("HeadergetWarehouseRecord", "FGReceived")",
            data: { branchid: BankBranchID},
        success: function (response) {
            $('#HeaderWHddlWarehouse').html('');
            var html = "";
            var hdnProductWarehouseID = $('#hdnProductWarehouseID').val();
            for (var i = 0; i < response.length; i++) {
                html = html + "<option value='" + response[i].WarehouseID + "'>" + response[i].WarehouseName + "</option>";
            }
            $('#HeaderWHddlWarehouse').html(html);

            HeaderddlWarehouse_ValueChange();
        }
    });
    }


    var SelectedWarehouseID = "0";
    function grid_WarehouseDetailsClick(e) {

        globalrowindex = e;
        PopulateProductWareHouseDetailsData();
        //Populate Data in Warehouse Modal//
        //Warehouseindex = globalrowindex;
        var SrlNo = gridProductionBOMProductList.batchEditApi.GetCellValue(globalrowindex, 'SlNO'); //(grid.GetEditor('SrlNo').GetValue() != null) ? grid.GetEditor('SrlNo').GetValue() : "";
        var ProductName = gridProductionBOMProductList.batchEditApi.GetCellValue(globalrowindex, 'ProductName');
        var ProductsID = gridProductionBOMProductList.batchEditApi.GetCellValue(globalrowindex, 'BOMProductsID');
        var UOM = gridProductionBOMProductList.batchEditApi.GetCellValue(globalrowindex, 'ProductUOM');
        var QuantityValue = gridProductionBOMProductList.batchEditApi.GetCellValue(globalrowindex, 'ProductQty'); //(grid.GetEditor('Quantity').GetValue() != null) ? grid.GetEditor('Quantity').GetValue() : "0";
        var InventoryType = gridProductionBOMProductList.batchEditApi.GetCellValue(globalrowindex, 'InventoryType');
        var ProductDescription = gridProductionBOMProductList.batchEditApi.GetCellValue(globalrowindex, 'ProductDescription');

        var Product_NegativeStock = gridProductionBOMProductList.batchEditApi.GetCellValue(globalrowindex, 'Product_NegativeStock');
        var AvlStk = gridProductionBOMProductList.batchEditApi.GetCellValue(globalrowindex, 'AvlStk');

        $('#hdfProductType').val(InventoryType);
        var Ptype = InventoryType;
        $('#hdfUOM').val(UOM);
        //var InventoryType = gridProductionBOMProductList.batchEditApi.GetCellValue(globalrowindex, 'InventoryType');
        var IsExits = true;

        $("#spnCmbWarehouse").hide();
        $("#spnCmbBatch").hide();
        $("#spncheckComboBox").hide();
        $("#spntxtQuantity").hide();
        var LastFinYear = $('#LastFinancialYear').val();
        var LastCompany = $('#LastCompany').val();
        var Branch = $('#ddlBatch option:selected').val();

        var data = '';

        if (ProductsID != "" && parseFloat(QuantityValue) != 0) {
            $.ajax({
                type: "POST",
                //url: "SalesChallanAdd.aspx/GetConfigSettingRights",
                url: "/FGReceived/GetConfigSettingRights",
                data: JSON.stringify({ VariableName: 'IsFIFOExistsInOutModule' }),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                async: false,
                success: function (msg) {
                    //
                    var data = msg;
                    $("#hddnConfigVariable_Val").val(data);
                    if (data == "1") {

                        if (Ptype == "W") {
                            $('#div_QtyMatch').hide();
                        }
                        else if (Ptype == "B") {
                            $('#div_QtyMatch').hide();
                        }
                        else if (Ptype == "S") {
                            $('#div_QtyMatch').show();
                        }
                        else if (Ptype == "WB") {
                            $('#div_QtyMatch').hide();
                        }
                        else if (Ptype == "WS") {
                            $('#div_QtyMatch').show();
                        }
                        else if (Ptype == "WBS") {
                            $('#div_QtyMatch').show();
                        }
                        else if (Ptype == "BS") {
                            $('#div_QtyMatch').show();
                        }

                    }
                    else {
                        $('#div_QtyMatch').hide();
                    }
                }
            });

            $('#lblProductName').text(ProductName);
            $('#txt_SalesAmount').text(QuantityValue);
            $('#txt_SalesUOM').text(UOM);
            $('#txt_StockAmount').text(QuantityValue);
            $('#txt_StockUOM').text(UOM);


            $('#hdfProductID').val(ProductsID);

            $('#hdfProductSerialID').val(SrlNo);
            //$('#<%=.ClientID %>').val(strProductID);
            $('#hdnProductQuantity').val(QuantityValue);
            //cacpAvailableStock.PerformCallback(strProductID);

            //SecondUOMProductId = strProductID;

            if (Ptype == "W") {
                ddlWarehouse_ValueChange();
                PopulateWareHouseDetailsData();
                $('#div_Warehouse').show();
                $('#div_Batch').hide();
                $('#div_Serial').hide();
                $('#div_Quantity').show();

                $("#ADelete").css("display", "block");
                SelectedWarehouseID = "0";
                $('#WarehouseDetailsModal').modal('show');
                StockDeatils();
                $('#ctxtQuantity').val('');
            }
            else if (Ptype == "B") {
                ddlWarehouse_ValueChange();
                PopulateWareHouseDetailsData();

                $('#div_Warehouse').hide();
                $('#div_Batch').show();
                $('#div_Serial').hide();
                $('#div_Quantity').show();

                $("#ADelete").css("display", "block");
                SelectedWarehouseID = "0";
                $('#WarehouseDetailsModal').modal('show');
                StockDeatils();
                $('#ctxtQuantity').val('');
            }
            else if (Ptype == "S") {
                // checkListBox.PerformCallback('BindSerial~' + "0" + '~' + "0");



                $('#div_Warehouse').hide();
                $('#div_Batch').hide();
                $('#div_Serial').show();
                $('#div_Quantity').show();

                $("#ADelete").css("display", "none");
                SelectedWarehouseID = "0";
                $('#WarehouseDetailsModal').modal('show');
                StockDeatils();
                $('#ctxtQuantity').val('');
                UpdateSerialNo();
            }
            else if (Ptype == "WB") {

                $('#div_Warehouse').show();
                $('#div_Batch').show();
                $('#div_Serial').hide();
                $('#div_Quantity').show();

                $("#ADelete").css("display", "block");
                SelectedWarehouseID = "0";
                $('#WarehouseDetailsModal').modal('show');
                StockDeatils();
                $('#ctxtQuantity').val('');

                ddlWarehouse_ValueChange();
                PopulateWareHouseDetailsData();
            }
            else if (Ptype == "WS") {
                $('#div_Warehouse').show();
                $('#div_Batch').hide();
                $('#div_Serial').show();
                $('#div_Quantity').hide();

                ddlWarehouse_ValueChange();
                PopulateWareHouseDetailsData();

                $("#ADelete").css("display", "none");
                SelectedWarehouseID = "0";
                $('#WarehouseDetailsModal').modal('show');
                StockDeatils();
                $('#ctxtQuantity').val('');
                UpdateSerialNo();
            }
            else if (Ptype == "WBS") {

                $('#div_Warehouse').show();
                $('#div_Batch').show();
                $('#div_Serial').show();
                $('#div_Quantity').hide();

                ddlWarehouse_ValueChange();
                PopulateWareHouseDetailsData();

                //checkListBox.PerformCallback('BindSerialAfterCross~');
                //checkComboBox.SetText(0 + " Items");

                SelectedWarehouseID = "0";
                $("#ADelete").css("display", "none");
                $('#WarehouseDetailsModal').modal('show');
                StockDeatils();
                $('#ctxtQuantity').val('');
                UpdateSerialNo();

            }
            else if (Ptype == "BS") {

                $('#div_Warehouse').hide();
                $('#div_Batch').show();
                $('#div_Serial').show();
                $('#div_Quantity').hide();

                ddlWarehouse_ValueChange();
                PopulateWareHouseDetailsData();

                $("#ADelete").css("display", "none");
                SelectedWarehouseID = "0";
                $('#WarehouseDetailsModal').modal('show');
                StockDeatils();
                $('#ctxtQuantity').val('');
                UpdateSerialNo();
            }
            else {

                jAlert("No Warehouse or Batch or Serial is actived.");
            }
        }
        else if (ProductsID != "" && parseFloat(QuantityValue) == 0) {
            jAlert('Qty is ZERO. Cannot select Stk Details');
        }
       
    }

    function WareHouseData(values) {
        if (values != null && values != "" && values != undefined) {
            $.ajax({
                type: "POST",
                url: "@Url.Action("EditWarehouseData", "FGReceived")",
                data: { SrlNO: values },
                async:false,
                success: function (response) {
                    if (response != null) {
                       

                      //  $('#ProductionIssueID').val(response.MaterialIssue_ID);
                      //  btnFinishedItem.SetText(response.FinishItemName);
                      //  $("#FinishedItem").val(response.FinishItemName),
                       
                      //   $("#Description").val(response.FinishItemDescription),
                      //  $("#Order_Qty").val(response.Qty),
                      //     $("#DesignNo").val(response.FinishDrawingNo);
                      //  $('#ItemRevNo').val(response.FinishItemRevNo);
                      //  //$('#FinishedUom').val)(response.FinishUOM);
                      //  $('#JobWorkRate').val(response.FinishPrice),
                      //,
                      //$("#GuiIDS").val(response.Guids),
                      //  $('#hdnFinishedItemUOM').val(response.FinishUOMId);
                      //  $('#OldFGQuantity').val(response.OldFGQuantity),
                      //  $('#MaxBalFGQuantity').val(response.MaxBalFGQuantity)
                      //  $('#hddnWarehouseID').val(response.FinishWareHouseId);
                      //  //Warehouse.SetText(response.FGWareHouseName);


                      //  var ProductionReceiptID = $('#ProductionReceiptID').val();

                        //var hdnIssue_QtyMax = $('#hdnOrder_QtyMax').val();
                        //if (parseInt(ProductionReceiptID) > 0) {
                        //    var OldBalQty = $('#OldFGQuantity').val();
                        //    var MaxBalQty = $('#MaxBalFGQuantity').val();
                        //    var TotalBalQty = parseFloat($('#OldFGQuantity').val()) + parseFloat($('#MaxBalFGQuantity').val());
                        //    $('#hdnOrder_QtyMax').val(parseFloat(TotalBalQty));


                        //}
                        //else {
                        //    var OldBalQty = $('#OldFGQuantity').val();
                        //    var MaxBalQty = $('#MaxBalFGQuantity').val();
                        //    var TotalBalQty = parseFloat($('#OldFGQuantity').val()) + parseFloat($('#MaxBalFGQuantity').val());
                        //    $('#hdnOrder_QtyMax').val(parseFloat(MaxBalQty));
                        //}

                        $('#hddneditfinishedname').val(response.FinishItemName);
                        $('#HeaderInventoryType').val(response.FinishInventoryType);
                        $('#HeaderhdfProductType').val(response.FinishInventoryType);


                        $("#hdnFinishedItem").val(response.FinishProductsID);
                        var BankBranchID = $('#ddlBankBranch option:selected').val();
                        var ProductsID = $('#hdnFinishedItem').val();
                        $('#HeaderhdnSrlNo').val(response.SrlNO);
                        $('#HeaderlblProductName').text(response.FinishItemName);
                        //$("#FinishedUom").val(response.FinishUOM);
                        $('#hddneditUOM').val(response.FinishUOM);
                        $("#hddnqunatityValue").val(response.Qty);
                        HeaderEditgrid_WarehouseDetailsClick();

                    }
                }
            });
        }
    }


    var HeaderEditSelectedWarehouseID = "0";
    function HeaderEditgrid_WarehouseDetailsClick(e) {
        $('#HeadertxtBatch').val('');
        //globalrowindex = e;
        HeaderPopulateProductWareHouseDetailsData();
        //Populate Data in Warehouse Modal//
        //Warehouseindex = globalrowindex;
        var SrlNo = $('#HeaderhdnSrlNo').val();//gridProductionBOMProductList.batchEditApi.GetCellValue(globalrowindex, 'SlNO'); //(grid.GetEditor('SrlNo').GetValue() != null) ? grid.GetEditor('SrlNo').GetValue() : "";
        var ProductName = $('#hddneditfinishedname').val(); //gridProductionBOMProductList.batchEditApi.GetCellValue(globalrowindex, 'ProductName');
        var ProductsID = $("#hdnFinishedItem").val();//gridProductionBOMProductList.batchEditApi.GetCellValue(globalrowindex, 'BOMProductsID');
        var UOM = $("#hddneditUOM").val();//gridProductionBOMProductList.batchEditApi.GetCellValue(globalrowindex, 'ProductUOM');
        var QuantityValue = $("#hddnqunatityValue").val();// gridProductionBOMProductList.batchEditApi.GetCellValue(globalrowindex, 'ProductQty'); //(grid.GetEditor('Quantity').GetValue() != null) ? grid.GetEditor('Quantity').GetValue() : "0";
        var InventoryType = $('#HeaderInventoryType').val(); //gridProductionBOMProductList.batchEditApi.GetCellValue(globalrowindex, 'InventoryType');
        var ProductDescription = $("#Description").val(); //gridProductionBOMProductList.batchEditApi.GetCellValue(globalrowindex, 'ProductDescription');

        var Product_NegativeStock = 0; //gridProductionBOMProductList.batchEditApi.GetCellValue(globalrowindex, 'Product_NegativeStock');
        var AvlStk = 0; //gridProductionBOMProductList.batchEditApi.GetCellValue(globalrowindex, 'AvlStk');

        $('#HeaderhdfProductType').val(InventoryType);
        var Ptype = InventoryType;
        $('#HeaderhdfUOM').val(UOM);
        //var InventoryType = gridProductionBOMProductList.batchEditApi.GetCellValue(globalrowindex, 'InventoryType');
        var IsExits = true;

        $("#HeaderspnCmbWarehouse").hide();
        $("#HeaderspnCmbBatch").hide();
        $("#HeaderspncheckComboBox").hide();
        $("#HeaderspntxtQuantity").hide();
        var LastFinYear = $('#LastFinancialYear').val();
        var LastCompany = $('#LastCompany').val();
        var Branch = $('#HeaderddlBatch option:selected').val();

        var data = '';

        if (ProductsID != "" && parseFloat(QuantityValue) != 0) {
            $.ajax({
                type: "POST",
                //url: "SalesChallanAdd.aspx/GetConfigSettingRights",
                url: "/FGReceived/GetConfigSettingRights",
                data: JSON.stringify({ VariableName: 'IsFIFOExistsInOutModule' }),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                async: false,
                success: function (msg) {
                    //
                    var data = msg;
                    $("#hddnConfigVariable_Val").val(data);
                    if (data == "1") {

                        if (Ptype == "W") {
                            $('#Headerdiv_QtyMatch').hide();
                        }
                        else if (Ptype == "B") {
                            $('#Headerdiv_QtyMatch').hide();
                        }
                        else if (Ptype == "S") {
                            $('#Headerdiv_QtyMatch').show();
                        }
                        else if (Ptype == "WB") {
                            $('#Headerdiv_QtyMatch').hide();
                        }
                        else if (Ptype == "WS") {
                            $('#Headerdiv_QtyMatch').show();
                        }
                        else if (Ptype == "WBS") {
                            $('#Headerdiv_QtyMatch').show();
                        }
                        else if (Ptype == "BS") {
                            $('#Headerdiv_QtyMatch').show();
                        }

                    }
                    else {
                        $('#Headerdiv_QtyMatch').hide();
                    }
                }
            });

            $('#HeaderlblProductName').text(ProductName);
            $('#Headertxt_SalesAmount').text(QuantityValue);
            $('#Headertxt_SalesUOM').text(UOM);
            $('#Headertxt_StockAmount').text(QuantityValue);
            $('#Headertxt_StockUOM').text(UOM);


            $('#HeaderhdfProductID').val(ProductsID);

            $('#HeaderhdfProductSerialID').val(SrlNo);
            //$('#<%=.ClientID %>').val(strProductID);
            $('#HeaderhdnProductQuantity').val(QuantityValue);
            //cacpAvailableStock.PerformCallback(strProductID);

            //SecondUOMProductId = strProductID;
            
            if (Ptype == "W") {
                HeaderddlWarehouse_ValueChange();
                HeaderPopulateWareHouseDetailsData();
                $('#Headerdiv_Warehouse').show();
                $('#Headerdiv_Batch').hide();
                $('#Headerdiv_Serial').hide();
                $('#Headerdiv_Quantity').show();
                $("#Header_div_Expiry").hide();
                $("#Header_div_Manufacture").hide();
                $("#ADelete").css("display", "block");
                HeaderEditSelectedWarehouseID = "0";
                $('#HeaderWarehouseDetailsModal').modal('show');
                HeaderStockDeatils();
                $('#HeaderctxtQuantity').val('');
            }
            else if (Ptype == "B") {
                HeaderddlWarehouse_ValueChange();
                HeaderPopulateWareHouseDetailsData();

                $('#Headerdiv_Warehouse').hide();
                $('#Headerdiv_Batch').show();
                $('#Headerdiv_Serial').hide();
                $('#Headerdiv_Quantity').show();
                $("#Header_div_Manufacture").show();
                $("#Header_div_Expiry").show();
                $("#ADelete").css("display", "block");
                HeaderEditSelectedWarehouseID = "0";
                $('#HeaderWarehouseDetailsModal').modal('show');
                HeaderStockDeatils();
                $('#HeaderctxtQuantity').val('');
            }
            else if (Ptype == "S") {
                // checkListBox.PerformCallback('BindSerial~' + "0" + '~' + "0");



                $('#Headerdiv_Warehouse').hide();
                $('#Headerdiv_Batch').hide();
                $('#Headerdiv_Serial').show();
                $('#Headerdiv_Quantity').show();
                $("#Header_div_Manufacture").hide();
                $("#Header_div_Expiry").hide();
                $("#ADelete").css("display", "none");
                HeaderEditSelectedWarehouseID = "0";
                $('#HeaderWarehouseDetailsModal').modal('show');
                HeaderStockDeatils();
                $('#HeaderctxtQuantity').val('');
                HeaderUpdateSerialNo();
            }
            else if (Ptype == "WB") {

                $('#Headerdiv_Warehouse').show();
                $('#Headerdiv_Batch').show();
                $('#Headerdiv_Serial').hide();
                $('#Headerdiv_Quantity').show();
                $("#Header_div_Manufacture").show();
                $("#Header_div_Expiry").show();
                $("#ADelete").css("display", "block");
                HeaderEditSelectedWarehouseID = "0";
                $('#HeaderWarehouseDetailsModal').modal('show');
                HeaderStockDeatils();
                $('#HeaderctxtQuantity').val('');

                HeaderddlWarehouse_ValueChange();
                HeaderPopulateWareHouseDetailsData();
            }
            else if (Ptype == "WS") {
                $('#Headerdiv_Warehouse').show();
                $('#Headerdiv_Batch').hide();
                $('#Headerdiv_Serial').show();
                $('#Headerdiv_Quantity').hide();
                $("#Header_div_Manufacture").chide();
                $("#Header_div_Expiry").hide();
                HeaderddlWarehouse_ValueChange();
                HeaderPopulateWareHouseDetailsData();

                $("#ADelete").css("display", "none");
                HeaderEditSelectedWarehouseID = "0";
                $('#HeaderWarehouseDetailsModal').modal('show');
                HeaderStockDeatils();
                $('#HeaderctxtQuantity').val('');
                HeaderUpdateSerialNo();
            }
            else if (Ptype == "WBS") {

                $('#Headerdiv_Warehouse').show();
                $('#Headerdiv_Batch').show();
                $('#Headerdiv_Serial').show();
                $('#Headerdiv_Quantity').hide();
                $("#Header_div_Manufacture").show();
                $("#Header_div_Expiry").show();
                HeaderddlWarehouse_ValueChange();
                HeaderPopulateWareHouseDetailsData();

                //checkListBox.PerformCallback('BindSerialAfterCross~');
                //checkComboBox.SetText(0 + " Items");

                HeaderEditSelectedWarehouseID = "0";
                $("#ADelete").css("display", "none");
                $('#HeaderWarehouseDetailsModal').modal('show');
                HeaderStockDeatils();
                $('#HeaderctxtQuantity').val('');
                HeaderUpdateSerialNo();

            }
            else if (Ptype == "BS") {

                $('#Headerdiv_Warehouse').hide();
                $('#Headerdiv_Batch').show();
                $('#Headerdiv_Serial').show();
                $('#Headerdiv_Quantity').hide();
                $("#Header_div_Manufacture").show();
                
                $("#Header_div_Expiry").show();
                HeaderddlWarehouse_ValueChange();
                HeaderPopulateWareHouseDetailsData();

                $("#ADelete").css("display", "none");
                HeaderEditSelectedWarehouseID = "0";
                $('#HeaderWarehouseDetailsModal').modal('show');
                HeaderStockDeatils();
                $('#HeaderctxtQuantity').val('');
                HeaderUpdateSerialNo();
            }
            else {

                jAlert("No Warehouse or Batch or Serial is actived.");
            }
        }
        else if (ProductsID != "" && parseFloat(QuantityValue) == 0) {
            jAlert('Qty is ZERO. Cannot select Stk Details');
        }
        $('#btnheaderadd').hide();
        $('#btnheaderSave').hide();
    }


    var HeaderSelectedWarehouseID = "0";
    function Headergrid_WarehouseDetailsClick(e) {

        //globalrowindex = e;
        HeaderPopulateProductWareHouseDetailsData();
        //Populate Data in Warehouse Modal//
        //Warehouseindex = globalrowindex;
        var SrlNo = $('#HeaderhdnSrlNo').val();//gridProductionBOMProductList.batchEditApi.GetCellValue(globalrowindex, 'SlNO'); //(grid.GetEditor('SrlNo').GetValue() != null) ? grid.GetEditor('SrlNo').GetValue() : "";
        var ProductName = btnFinishedItem.GetText(); //gridProductionBOMProductList.batchEditApi.GetCellValue(globalrowindex, 'ProductName');
        var ProductsID = $("#hdnFinishedItem").val();//gridProductionBOMProductList.batchEditApi.GetCellValue(globalrowindex, 'BOMProductsID');
        var UOM = $("#FinishedUom").val();//gridProductionBOMProductList.batchEditApi.GetCellValue(globalrowindex, 'ProductUOM');
        var QuantityValue = $("#Order_Qty").val();// gridProductionBOMProductList.batchEditApi.GetCellValue(globalrowindex, 'ProductQty'); //(grid.GetEditor('Quantity').GetValue() != null) ? grid.GetEditor('Quantity').GetValue() : "0";
        var InventoryType = $('#HeaderInventoryType').val(); //gridProductionBOMProductList.batchEditApi.GetCellValue(globalrowindex, 'InventoryType');
        var ProductDescription = $("#Description").val(); //gridProductionBOMProductList.batchEditApi.GetCellValue(globalrowindex, 'ProductDescription');

        var Product_NegativeStock = 0; //gridProductionBOMProductList.batchEditApi.GetCellValue(globalrowindex, 'Product_NegativeStock');
        var AvlStk = 0; //gridProductionBOMProductList.batchEditApi.GetCellValue(globalrowindex, 'AvlStk');

        $('#HeaderhdfProductType').val(InventoryType);
        var Ptype = InventoryType;
        $('#HeaderhdfUOM').val(UOM);
        //var InventoryType = gridProductionBOMProductList.batchEditApi.GetCellValue(globalrowindex, 'InventoryType');
        var IsExits = true;

        $("#HeaderspnCmbWarehouse").hide();
        $("#HeaderspnCmbBatch").hide();
        $("#HeaderspncheckComboBox").hide();
        $("#HeaderspntxtQuantity").hide();
        var LastFinYear = $('#LastFinancialYear').val();
        var LastCompany = $('#LastCompany').val();
        var Branch = $('#HeaderddlBatch option:selected').val();

        var data = '';

        if (ProductsID != "" && parseFloat(QuantityValue) != 0) {
            $.ajax({
                type: "POST",
                //url: "SalesChallanAdd.aspx/GetConfigSettingRights",
                url: "/FGReceived/GetConfigSettingRights",
                data: JSON.stringify({ VariableName: 'IsFIFOExistsInOutModule' }),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                async: false,
                success: function (msg) {
                    //
                    var data = msg;
                    $("#hddnConfigVariable_Val").val(data);
                    if (data == "1") {

                        if (Ptype == "W") {
                            $('#Headerdiv_QtyMatch').hide();
                        }
                        else if (Ptype == "B") {
                            $('#Headerdiv_QtyMatch').hide();
                        }
                        else if (Ptype == "S") {
                            $('#Headerdiv_QtyMatch').show();
                        }
                        else if (Ptype == "WB") {
                            $('#Headerdiv_QtyMatch').hide();
                        }
                        else if (Ptype == "WS") {
                            $('#Headerdiv_QtyMatch').show();
                        }
                        else if (Ptype == "WBS") {
                            $('#Headerdiv_QtyMatch').show();
                        }
                        else if (Ptype == "BS") {
                            $('#Headerdiv_QtyMatch').show();
                        }

                    }
                    else {
                        $('#Headerdiv_QtyMatch').hide();
                    }
                }
            });

            $('#HeaderlblProductName').text(ProductName);
            $('#Headertxt_SalesAmount').text(QuantityValue);
            $('#Headertxt_SalesUOM').text(UOM);
            $('#Headertxt_StockAmount').text(QuantityValue);
            $('#Headertxt_StockUOM').text(UOM);


            $('#HeaderhdfProductID').val(ProductsID);

            $('#HeaderhdfProductSerialID').val(SrlNo);
            //$('#<%=.ClientID %>').val(strProductID);
            $('#HeaderhdnProductQuantity').val(QuantityValue);
            //cacpAvailableStock.PerformCallback(strProductID);

            //SecondUOMProductId = strProductID;

            if (Ptype == "W") {
                HeaderddlWarehouse_ValueChange();
                HeaderPopulateWareHouseDetailsData();
                $('#Headerdiv_Warehouse').show();
                $('#Headerdiv_Batch').hide();
                $('#Headerdiv_Serial').hide();
                $('#Headerdiv_Quantity').show();
                $("#Header_div_Expiry").hide();
                $("#Header_div_Manufacture").hide();
                $("#ADelete").css("display", "block");
                HeaderSelectedWarehouseID = "0";
                $('#HeaderWarehouseDetailsModal').modal('show');
                HeaderStockDeatils();
                $('#HeaderctxtQuantity').val('');
            }
            else if (Ptype == "B") {
                HeaderddlWarehouse_ValueChange();
                HeaderPopulateWareHouseDetailsData();

                $('#Headerdiv_Warehouse').hide();
                $('#Headerdiv_Batch').show();
                $("#Header_div_Expiry").show();
                $("#Header_div_Manufacture").show();
                $('#Headerdiv_Serial').hide();
                $('#Headerdiv_Quantity').show();

                $("#ADelete").css("display", "block");
                HeaderSelectedWarehouseID = "0";
                $('#HeaderWarehouseDetailsModal').modal('show');
                HeaderStockDeatils();
                $('#HeaderctxtQuantity').val('');
            }
            else if (Ptype == "S") {
                // checkListBox.PerformCallback('BindSerial~' + "0" + '~' + "0");



                $('#Headerdiv_Warehouse').hide();
                $('#Headerdiv_Batch').hide();
                $("#Header_div_Expiry").hide();
                $("#Header_div_Manufacture").hide();
                $('#Headerdiv_Serial').show();
                $('#Headerdiv_Quantity').show();

                $("#ADelete").css("display", "none");
                HeaderSelectedWarehouseID = "0";
                $('#HeaderWarehouseDetailsModal').modal('show');
                HeaderStockDeatils();
                $('#HeaderctxtQuantity').val('');
                HeaderUpdateSerialNo();
            }
            else if (Ptype == "WB") {

                $('#Headerdiv_Warehouse').show();
                $('#Headerdiv_Batch').show();
                $("#Header_div_Expiry").show();
                $("#Header_div_Manufacture").show();
                $('#Headerdiv_Serial').hide();
                $('#Headerdiv_Quantity').show();

                $("#ADelete").css("display", "block");
                HeaderSelectedWarehouseID = "0";
                $('#HeaderWarehouseDetailsModal').modal('show');
                HeaderStockDeatils();
                $('#HeaderctxtQuantity').val('');

                HeaderddlWarehouse_ValueChange();
                HeaderPopulateWareHouseDetailsData();
            }
            else if (Ptype == "WS") {
                $('#Headerdiv_Warehouse').show();
                $('#Headerdiv_Batch').hide();
                $("#Header_div_Expiry").hide();
                $("#Header_div_Manufacture").hide();
                $('#Headerdiv_Serial').show();
                $('#Headerdiv_Quantity').hide();

                HeaderddlWarehouse_ValueChange();
                HeaderPopulateWareHouseDetailsData();

                $("#ADelete").css("display", "none");
                HeaderSelectedWarehouseID = "0";
                $('#HeaderWarehouseDetailsModal').modal('show');
                HeaderStockDeatils();
                $('#HeaderctxtQuantity').val('');
                HeaderUpdateSerialNo();
            }
            else if (Ptype == "WBS") {

                $('#Headerdiv_Warehouse').show();
                $('#Headerdiv_Batch').show();
                $("#Header_div_Expiry").show();
                $("#Header_div_Manufacture").show();
                $('#Headerdiv_Serial').show();
                $('#Headerdiv_Quantity').hide();

                HeaderddlWarehouse_ValueChange();
                HeaderPopulateWareHouseDetailsData();

                //checkListBox.PerformCallback('BindSerialAfterCross~');
                //checkComboBox.SetText(0 + " Items");

                HeaderSelectedWarehouseID = "0";
                $("#ADelete").css("display", "none");
                $('#HeaderWarehouseDetailsModal').modal('show');
                HeaderStockDeatils();
                $('#HeaderctxtQuantity').val('');
                HeaderUpdateSerialNo();

            }
            else if (Ptype == "BS") {

                $('#Headerdiv_Warehouse').hide();
                $('#Headerdiv_Batch').show();
                $("#Header_div_Expiry").show();
                $("#Header_div_Manufacture").show();
                $('#Headerdiv_Serial').show();
                $('#Headerdiv_Quantity').hide();

                HeaderddlWarehouse_ValueChange();
                HeaderPopulateWareHouseDetailsData();

                $("#ADelete").css("display", "none");
                HeaderSelectedWarehouseID = "0";
                $('#HeaderWarehouseDetailsModal').modal('show');
                HeaderStockDeatils();
                $('#HeaderctxtQuantity').val('');
                HeaderUpdateSerialNo();
            }
            else {

                jAlert("No Warehouse or Batch or Serial is actived.");
            }
        }
        else if (ProductsID != "" && parseFloat(QuantityValue) == 0) {
            jAlert('Qty is ZERO. Cannot select Stk Details');
        }
        $('#btnheaderadd').show();
        $('#btnheaderSave').show();
    }


    function flexFilter(arr, info) {
        var matchesFilter, matches = [];

        matchesFilter = function (item) {
            var count = 0;
            for (var n = 0; n < info.length; n++) {
                //if (info[n]["Values"].indexOf(item[info[n]["Field"]]) > -1) {
                if (info[n]["Values"] == item[info[n]["Field"]]) {
                    count++;
                }
            }

            return count == info.length;
        }

        // Loop through each item in the array
        for (var i = 0; i < arr.length; i++) {
            // Determine if the current item matches the filter criteria
            if (matchesFilter(arr[i])) {
                matches.push(arr[i]);
            }
        }

        // Give us a new array containing the objects matching the filter criteria
        return matches;
    }

    function HeaderflexFilter(arr, info) {
        var matchesFilter, matches = [];

        matchesFilter = function (item) {
            var count = 0;
            for (var n = 0; n < info.length; n++) {
                //if (info[n]["Values"].indexOf(item[info[n]["Field"]]) > -1) {
                if (info[n]["Values"] == item[info[n]["Field"]]) {
                    count++;
                }
            }

            return count == info.length;
        }

        // Loop through each item in the array
        for (var i = 0; i < arr.length; i++) {
            // Determine if the current item matches the filter criteria
            if (matchesFilter(arr[i])) {
                matches.push(arr[i]);
            }
        }

        // Give us a new array containing the objects matching the filter criteria
        return matches;
    }



    function SaveStock() {
        var Avalstock=0;
        var WarehouseName = $("option:selected", '#WHddlWarehouse').text();
        var WarehouseID = $('#WHddlWarehouse').val();
        var Qty = $('#ctxtQuantity').val();
        var Batch = $("#ddlBatch").val();
        var ViewBatch = $("option:selected", '#ddlBatch').text();
        var Branch = $('#hdfBranch').val();
        var ProductID = $('#hdfProductID').val();
        var ProductSrlNo = $('#hdfProductSerialID').val();
        var StockType = $('#hdfProductType').val();
        var UOM = $('#hdfUOM').val();
        var Serial = $("option:selected", '#checkComboBox').val();
        var unitId = $('#ddlBankBranch').val();
        var BatchId = $('#ddlBatch').val();
        if (Qty != "0" && Qty != "" && Qty != null && WarehouseID != "0" && WarehouseID != "" && WarehouseID != null) {
            $.ajax({
                type: "POST",
                url: "@Url.Action("GetAvalStockValue", "FGReceived")",
                data: { branchid: unitId, productid: ProductID, WarehouseId: WarehouseID, BatchId: BatchId },
            async:false,
            success: function (response) {
                Avalstock = response;
               
            }
        });

    }
    if (parseFloat(Avalstock) < parseFloat(Qty)) {

        jAlert("Product entered quantity more than stock quantity.Can not proceed.");
        return false;
    }

    else {


        if (StockType == "W" || StockType == "WS" || StockType == "WBS" || StockType == "WB" || StockType == "WC" || StockType == "WSC") {
            if (WarehouseName == null || WarehouseName == "") {
                $("#rfvWarehouse").css("display", "block");
                return false;
            }
            else {
                $("#rfvWarehouse").css("display", "none");
            }
        }

        if (StockType == "B" || StockType == "BS" || StockType == "WBS" || StockType == "WB") {
            if (Batch == "") {
                $("#rfvBatch").css("display", "block");
                return false;
            }
            else {
                $("#rfvBatch").css("display", "none");
            }
        }

        if (StockType == "BS" || StockType == "WBS" || StockType == "WS" || StockType == "S" || StockType == "WSC") {
            if (Serial == "") {
                $("#rfvSerial").css("display", "block");
                return false;
            }
            else {
                $("#rfvSerial").css("display", "none");
            }
        }

        var productqty = gridProductionBOMProductList.batchEditApi.GetCellValue(globalrowindex, 'ProductQty'); //$("#Order_Qty").val();

        if (StockType == "W" || StockType == "WB" || StockType == "B" || StockType == "WC") {
            if (parseFloat(Qty) == 0 || Qty == "") {
                $("#rfvQuantity").css("display", "block");
                return false;
            }
            else {
                if (parseFloat(Qty) > parseFloat(productqty)) {
                    jAlert("Enter quantity is grater than Product quantity.");
                    $("#rfvQuantity").css("display", "none");
                    return false;
                }
                else {
                    $("#rfvQuantity").css("display", "none");
                }
            }
        }

        var totalProductQty = 0;

        var serialCriteria = [{ Field: "Product_SrlNo", Values: "" + (globalrowindex + 1) + "" }];
        var tempStockOfProduct = flexFilter(StockOfProduct, serialCriteria);


        for (var i = 0; i < tempStockOfProduct.length; i++) {
            var objprod = {};
            objprod = tempStockOfProduct[i];
            if (objprod.Quantity != "") {
                totalProductQty = totalProductQty + parseFloat(objprod.Quantity);
            }
        }
        totalProductQty = (parseFloat(totalProductQty) + parseFloat(Qty));

        if (parseFloat(totalProductQty) <= parseFloat(productqty)) {

            if (StockType == "W" || StockType == "WC" || StockType == "WB" || StockType == "B" || StockType == "WBS") {
                if (StockType == "WBS") {
                    var serialCriteria = [{ Field: "SerialNo", Values: Serial }];
                    var serialfilteredJson = HeaderflexFilter(StockOfProduct, serialCriteria);

                    if (serialfilteredJson.length == 0) {
                        saveStockData(StockType, ProductSrlNo, ProductID, UOM, WarehouseID, WarehouseName, Batch, ViewBatch, Qty, Serial);
                    }
                    else {
                        jAlert("Duplicate Serial. Cannot Proceed.", "Alert", function () { SetFocus("Save"); });
                    }
                }
                else {

                    saveStockData(StockType, ProductSrlNo, ProductID, UOM, WarehouseID, WarehouseName, Batch, ViewBatch, Qty, Serial);
                }
            }
        }
        else {
            jAlert("Product quantity balance excess!");
            return false;
        }
    }
    }

    function GetDateFormat(today) {
        if (today != "") {
            var dd = today.getDate();
            var mm = today.getMonth() + 1; //January is 0!

            var yyyy = today.getFullYear();
            if (dd < 10) {
                dd = '0' + dd;
            }
            if (mm < 10) {
                mm = '0' + mm;
            }
            today = dd + '-' + mm + '-' + yyyy;
        }

        return today;
    }
    function HeaderSaveStock() {
        var Avalstock=0;
        var WarehouseName = $("option:selected", '#HeaderWHddlWarehouse').text();
        var WarehouseID = $('#HeaderWHddlWarehouse').val();
        var Qty = $('#HeaderctxtQuantity').val();
        var Batch = $("#HeadertxtBatch").val().trim(); //$("#HeaderddlBatch").val();
        var ViewBatch = $("#HeadertxtBatch").val().trim();//$("option:selected", '#HeaderddlBatch').text();
        var Branch = $('#ddlBankBranch').val();
        var ProductID = $('#HeaderhdfProductID').val();
        var ProductSrlNo=0;
        if ($('#HeaderhdnSrlNo').val() == null || $('#HeaderhdnSrlNo').val() == "")
        {
            ProductSrlNo=gridFGFinishItemList.GetVisibleRowsOnPage() + 1 ;
        }
        else
        {
            ProductSrlNo = $('#HeaderhdnSrlNo').val();
        }
        
        var StockType = $('#HeaderhdfProductType').val();
        var UOM = $('#FinishedUom').val(); 
        var Serial = $("option:selected", '#HeadercheckComboBox').val();
        var unitId = $('#ddlBankBranch').val();
           $('#HeaderddlBatch').val('0');
        var BatchId = $('#HeaderddlBatch').val();
        var MfgDate = (HeaderWareManufactureDate.GetValue() != null) ? HeaderWareManufactureDate.GetValue() : "";
        var ExprieyDate = (HeaderWareExpiryDate.GetValue() != null) ? HeaderWareExpiryDate.GetValue() : "";

        MfgDate = GetDateFormat(MfgDate);
        ExprieyDate = GetDateFormat(ExprieyDate);

        @*if (Qty != "0" && Qty != "" && Qty != null && WarehouseID != "0" && WarehouseID != "" && WarehouseID != null) {
            $.ajax({
                type: "POST",
                url: "@Url.Action("GetAvalStockValue", "FGReceived")",
                data: { branchid: unitId, productid: ProductID, WarehouseId: WarehouseID, BatchId: BatchId },
            async:false,
            success: function (response) {
                Avalstock = response;
               
            }
        });

    }*@
    //if (parseFloat(Avalstock) < parseFloat(Qty)) {

    //    jAlert("Product entered quantity more than stock quantity.Can not proceed.");
    //    return false;
    //}

    //else {


        if (StockType == "W" || StockType == "WS" || StockType == "WBS" || StockType == "WB" || StockType == "WC" || StockType == "WSC") {
            if (WarehouseName == null || WarehouseName == "") {
                $("#rfvWarehouse").css("display", "block");
                return false;
            }
            else {
                $("#rfvWarehouse").css("display", "none");
            }
        }

        if (StockType == "B" || StockType == "BS" || StockType == "WBS" || StockType == "WB") {
            if (Batch == "") {
                $("#rfvBatch").css("display", "block");
                return false;
            }
            else {
                $("#rfvBatch").css("display", "none");
            }
        }

        if (StockType == "BS" || StockType == "WBS" || StockType == "WS" || StockType == "S" || StockType == "WSC") {
            if (Serial == "") {
                $("#rfvSerial").css("display", "block");
                return false;
            }
            else {
                $("#rfvSerial").css("display", "none");
            }
        }

        var productqty = $("#Order_Qty").val();//gridProductionBOMProductList.batchEditApi.GetCellValue(globalrowindex, 'ProductQty');

        if (StockType == "W" || StockType == "WB" || StockType == "B" || StockType == "WC") {
            if (parseFloat(Qty) == 0 || Qty == "") {
                $("#rfvQuantity").css("display", "block");
                return false;
            }
            else {
                if (parseFloat(Qty) > parseFloat(productqty)) {
                    jAlert("Enter quantity is grater than Product quantity.");
                    $("#rfvQuantity").css("display", "none");
                    return false;
                }
                else {
                    $("#rfvQuantity").css("display", "none");
                }
            }
        }

        var totalProductBalkQty = 0;
        var totalProductQty = 0;

        var serialCriteria = [{ Field: "Product_SrlNo", Values: "" + ProductSrlNo + "" }];
        var tempStockOfProduct = HeaderflexFilter(HeaderStockOfProduct, serialCriteria);


        for (var i = 0; i < tempStockOfProduct.length; i++) {
            var objprod = {};
            objprod = tempStockOfProduct[i];
            if (objprod.Quantity != "") {
                totalProductQty = totalProductQty + parseFloat(objprod.Quantity);
            }
        }
        totalProductBalkQty = (parseFloat(totalProductQty) + parseFloat(Qty));

        if (parseFloat(totalProductBalkQty) <= parseFloat(productqty)) {

            if (StockType == "W" || StockType == "WC" || StockType == "WB" || StockType == "B" || StockType == "WBS") {
                if (StockType == "WBS") {
                    var serialCriteria = [{ Field: "SerialNo", Values: Serial }];
                    var serialfilteredJson = HeaderflexFilter(HeaderStockOfProduct, serialCriteria);

                    if (serialfilteredJson.length == 0) {
                        HeadersaveStockData(StockType, ProductSrlNo, ProductID, UOM, WarehouseID, WarehouseName, Batch, ViewBatch, Qty, Serial, MfgDate, ExprieyDate);
                    }
                    else {
                        jAlert("Duplicate Serial. Cannot Proceed.", "Alert", function () { SetFocus("Save"); });
                    }
                }
                else {

                    HeadersaveStockData(StockType, ProductSrlNo, ProductID, UOM, WarehouseID, WarehouseName, Batch, ViewBatch, Qty, Serial, MfgDate, ExprieyDate);
                }
            }
        }
        else {
            jAlert("Product quantity balance excess!");
            return false;
        }
    }
    //}



    function getMax(array, propName) {
        var max = 0;
        var maxItem = null;
        for (var i = 0; i < array.length; i++) {
            var item = array[i];
            if (item[propName] > max) {
                max = item[propName];
                maxItem = item;
            }
        }
        return max;
    }

    function HeadergetMax(array, propName) {
        var max = 0;
        var maxItem = null;
        for (var i = 0; i < array.length; i++) {
            var item = array[i];
            if (item[propName] > max) {
                max = item[propName];
                maxItem = item;
            }
        }
        return max;
    }

    function saveStockData(StockType, ProductSrlNo, ProductID, UOM, WarehouseID, WarehouseName, Batch, ViewBatch, Qty, Serial) {

        if (Serial == undefined || Serial == null) {
            Serial = '';
        }

        var criteria = [
                        { Field: "Product_SrlNo", Values: ProductSrlNo },
                        { Field: "WarehouseID", Values: WarehouseID },
                        { Field: "Batch", Values: Batch },
                        { Field: "Serial", Values: Serial }
        ];
        var filteredJson = flexFilter(StockOfProduct, criteria);

        var productid = $('#hdfProductID').val();


        if (filteredJson.length == 0) {
            // Save Data In Json
            var _SrlNo = parseInt(getMax(StockOfProduct, "SrlNo")) + 1;
            var _LoopID = parseInt(getMax(StockOfProduct, "LoopID")) + 1;
            var _Quantity = "1.0000";

            if (StockType == "WS" || StockType == "WBS" || StockType == "BS" || StockType == "S" || StockType == "WSC") {
                _Quantity = "1.0000";
            }
            else {
                _Quantity = Qty;
            }

            var ProductStock = {
                Product_SrlNo: ProductSrlNo, SrlNo: _SrlNo, WarehouseID: WarehouseID, WarehouseName: WarehouseName,
                Quantity: _Quantity, SalesQuantity: _Quantity + " " + UOM, Batch: Batch, ViewBatch: ViewBatch, SerialNo: Serial, //MfgDate: MfgDate, ExpiryDate: ExprieyDate, Rate: Rate,
                //SerialNo: Serial, Barcode: "", ViewBatch: Batch, //ViewMfgDate: MfgDate, ViewExpiryDate: ExprieyDate, ViewRate: Rate,
                IsOutStatus: "1", IsOutStatusMsg: "", LoopID: _LoopID, Status: "D", ProductID: productid
            }
            StockOfProduct.push(ProductStock);
        }
        else {
            // Save Data In Json
            var _SrlNo = parseInt(getMax(StockOfProduct, "SrlNo")) + 1;
            var _LoopID = parseInt(getMax(filteredJson, "LoopID"));
            var _Quantity = parseFloat(getMax(filteredJson, "Quantity")) + 1;

            if (StockType == "WS" || StockType == "WSC" || StockType == "WBS" || StockType == "BS" || StockType == "S") {
                $.grep(filteredJson, function (e) { e.Quantity = _Quantity; });
                //$.grep(filteredJson, function (e) { e.Rate = Rate; });

                var ProductStock = {
                    Product_SrlNo: ProductSrlNo, SrlNo: _SrlNo, WarehouseID: WarehouseID, WarehouseName: "",
                    Quantity: _Quantity, SalesQuantity: "", Batch: Batch, ViewBatch: ViewBatch, SerialNo: Serial,//MfgDate: MfgDate, ExpiryDate: ExprieyDate, Rate: Rate,
                    //SerialNo: Serial, Barcode: "", ViewBatch: "", ViewMfgDate: "", ViewExpiryDate: "", ViewRate: "",
                    IsOutStatus: "1", IsOutStatusMsg: "", LoopID: _LoopID, Status: "D", ProductID: productid
                }
                StockOfProduct.push(ProductStock);

                $.grep(filteredJson, function (e) { if (e.SalesQuantity != "") e.SalesQuantity = _Quantity + " " + UOM; });
                $.grep(filteredJson, function (e) { if (e.SalesQuantity != "") e.ViewRate = Rate; });
            }
            else if (StockType == "WC") {
                _Quantity = (parseFloat(getMax(filteredJson, "Quantity")) + parseFloat(Qty));

                if (filteredJson.length == 1) {
                    //$.grep(filteredJson, function (e) { e.Rate = Rate; });
                    // $.grep(filteredJson, function (e) { e.ViewRate = Rate; });
                    $.grep(filteredJson, function (e) { e.Quantity = _Quantity });
                    $.grep(filteredJson, function (e) { e.SalesQuantity = _Quantity + " " + UOM;; });
                }
                else {
                    $.grep(filteredJson, function (e) { if (e.SalesQuantity != "") e.SalesQuantity = _Quantity + " " + UOM; });
                    $.grep(filteredJson, function (e) { if (e.SalesQuantity != "") e.ViewRate = Rate; });

                    // $.grep(filteredJson, function (e) { e.Rate = Rate; });
                    $.grep(filteredJson, function (e) { e.Quantity = _Quantity });
                }
            }
            else {
                _Quantity = (parseFloat(getMax(filteredJson, "Quantity")) + parseFloat(Qty));
                var QuantityValue = gridProductionBOMProductList.batchEditApi.GetCellValue(globalrowindex, 'ProductQty');

                if (_Quantity <= parseFloat(QuantityValue)) {

                    // $.grep(filteredJson, function (e) { e.Rate = Rate; });
                    // $.grep(filteredJson, function (e) { e.ViewRate = Rate; });
                    $.grep(filteredJson, function (e) { e.Quantity = _Quantity });
                    $.grep(filteredJson, function (e) { e.SalesQuantity = _Quantity + " " + UOM;; });
                }
                else {
                    jAlert("Entered quantity exceeds!");
                    return;
                }
            }
        }

        StockDeatils();
        SetFocus("Save");

    }


    function HeadersaveStockData(StockType, ProductSrlNo, ProductID, UOM, WarehouseID, WarehouseName, Batch, ViewBatch, Qty, Serial, MfgDate, ExprieyDate) {

        if (Serial == undefined || Serial == null) {
            Serial = '';
        }

        var criteria = [
                        { Field: "Product_SrlNo", Values: ProductSrlNo },
                        { Field: "WarehouseID", Values: WarehouseID },
                        { Field: "Batch", Values: Batch },
                        { Field: "Serial", Values: Serial }
        ];
        var filteredJson = HeaderflexFilter(HeaderStockOfProduct, criteria);

        var productid = $("#hdnFinishedItem").val();


        if (filteredJson.length == 0) {
            // Save Data In Json
            var _SrlNo = parseInt(HeadergetMax(HeaderStockOfProduct, "SrlNo")) + 1;
            var _LoopID = parseInt(HeadergetMax(HeaderStockOfProduct, "LoopID")) + 1;
            var _Quantity = "1.0000";

            if (StockType == "WS" || StockType == "WBS" || StockType == "BS" || StockType == "S" || StockType == "WSC") {
                _Quantity = "1.0000";
            }
            else {
                _Quantity = Qty;
            }

            var ProductStock = {
                Product_SrlNo: ProductSrlNo, SrlNo: _SrlNo, WarehouseID: WarehouseID, WarehouseName: WarehouseName,
                Quantity: _Quantity, SalesQuantity: _Quantity + " " + UOM, Batch: Batch, ViewBatch: ViewBatch, SerialNo: Serial, //MfgDate: MfgDate, ExpiryDate: ExprieyDate, Rate: Rate,
                //SerialNo: Serial, Barcode: "", ViewBatch: Batch, //ViewMfgDate: MfgDate, ViewExpiryDate: ExprieyDate, ViewRate: Rate,
                IsOutStatus: "1", IsOutStatusMsg: "", LoopID: _LoopID, Status: "D", ProductID: productid, MfgDate: MfgDate, ExpiryDate: ExprieyDate, ViewMfgDate: MfgDate, ViewExpiryDate: ExprieyDate
            }
            HeaderStockOfProduct.push(ProductStock);
        }
        else {
            // Save Data In Json
            var _SrlNo = parseInt(HeadergetMax(HeaderStockOfProduct, "SrlNo")) + 1;
            var _LoopID = parseInt(HeadergetMax(filteredJson, "LoopID"));
            var _Quantity = parseFloat(HeadergetMax(filteredJson, "Quantity")) + 1;

            if (StockType == "WS" || StockType == "WSC" || StockType == "WBS" || StockType == "BS" || StockType == "S") {
                $.grep(filteredJson, function (e) { e.Quantity = _Quantity; });
                //$.grep(filteredJson, function (e) { e.Rate = Rate; });

                var ProductStock = {
                    Product_SrlNo: ProductSrlNo, SrlNo: _SrlNo, WarehouseID: WarehouseID, WarehouseName: "",
                    Quantity: _Quantity, SalesQuantity: "", Batch: Batch, ViewBatch: ViewBatch, SerialNo: Serial,//MfgDate: MfgDate, ExpiryDate: ExprieyDate, Rate: Rate,
                    //SerialNo: Serial, Barcode: "", ViewBatch: "", ViewMfgDate: "", ViewExpiryDate: "", ViewRate: "",
                    IsOutStatus: "1", IsOutStatusMsg: "", LoopID: _LoopID, Status: "D", ProductID: productid, MfgDate: MfgDate, ExpiryDate: ExprieyDate, ViewMfgDate: "", ViewExpiryDate: ""
                }
                HeaderStockOfProduct.push(ProductStock);

                $.grep(filteredJson, function (e) { if (e.SalesQuantity != "") e.SalesQuantity = _Quantity + " " + UOM; });
                $.grep(filteredJson, function (e) { if (e.SalesQuantity != "") e.ViewRate = Rate; });
            }
            else if (StockType == "WC") {
                _Quantity = (parseFloat(getMax(filteredJson, "Quantity")) + parseFloat(Qty));

                if (filteredJson.length == 1) {
                    //$.grep(filteredJson, function (e) { e.Rate = Rate; });
                    // $.grep(filteredJson, function (e) { e.ViewRate = Rate; });
                    $.grep(filteredJson, function (e) { e.Quantity = _Quantity });
                    $.grep(filteredJson, function (e) { e.SalesQuantity = _Quantity + " " + UOM;; });
                }
                else {
                    $.grep(filteredJson, function (e) { if (e.SalesQuantity != "") e.SalesQuantity = _Quantity + " " + UOM; });
                    $.grep(filteredJson, function (e) { if (e.SalesQuantity != "") e.ViewRate = Rate; });

                    // $.grep(filteredJson, function (e) { e.Rate = Rate; });
                    $.grep(filteredJson, function (e) { e.Quantity = _Quantity });
                }
            }
            else {
                _Quantity = (parseFloat(getMax(filteredJson, "Quantity")) + parseFloat(Qty));
                var QuantityValue = $("#Order_Qty").val();//gridProductionBOMProductList.batchEditApi.GetCellValue(globalrowindex, 'ProductQty');

                if (_Quantity <= parseFloat(QuantityValue)) {

                    // $.grep(filteredJson, function (e) { e.Rate = Rate; });
                    // $.grep(filteredJson, function (e) { e.ViewRate = Rate; });
                    $.grep(filteredJson, function (e) { e.Quantity = _Quantity });
                    $.grep(filteredJson, function (e) { e.SalesQuantity = _Quantity + " " + UOM;; });
                }
                else {
                    jAlert("Entered quantity exceeds!");
                    return;
                }
            }
        }

        HeaderStockDeatils();
        HeaderSetFocus("Save");

    }

    function FullnFinalSave() {

        var productqty = gridProductionBOMProductList.batchEditApi.GetCellValue(globalrowindex, 'ProductQty');
        var totalProductQtycheck = 0;

        var serialCriteriacheck = [{ Field: "Product_SrlNo", Values: "" + (globalrowindex + 1) + "" }];
        var tempStockOfProduct = flexFilter(StockOfProduct, serialCriteriacheck);


        for (var i = 0; i < tempStockOfProduct.length; i++) {
            var objprod = {};
            objprod = tempStockOfProduct[i];
            if (objprod.Quantity != "") {
                totalProductQtycheck = totalProductQtycheck + parseFloat(objprod.Quantity);
            }
        }
        totalProductQtycheck = (parseFloat(totalProductQtycheck));

        if (parseFloat(totalProductQtycheck) != parseFloat(productqty)) {

            jAlert("Enter Product quantity will be same with grid product qunatity.");
            return false;
        }
        else {
            if (StockOfProduct.length > 0) {
                var tempindex = globalrowindex;
                var SrlNo = gridProductionBOMProductList.batchEditApi.GetCellValue(globalrowindex, 'SlNO');
                var Unit = $('#ddlBankBranch option:selected').val();
                $.ajax({
                    type: "POST",
                    async: false,
                    url: "@Url.Action("setStockWarehouseList", "FGReceived")",
                    data: { items: StockOfProduct, SrlNo: SrlNo, Unit: Unit },
                success: function (response) {

                    var data = response.split('|');
                    if (data[1] == "False") {
                        gridProductionBOMProductList.batchEditApi.SetCellValue(tempindex, 'StkMsg', '0', '');
                    }
                    if (data[0] == "True") {
                        $('#WarehouseDetailsModal').modal('hide');
                    }
                    else {
                        jAlert("Please try again later!");
                    }
                }
            });
        }
    }
    }


    function HeaderFullnFinalSave() {

        var productqty = $("#Order_Qty").val(); //gridProductionBOMProductList.batchEditApi.GetCellValue(globalrowindex, 'ProductQty');
        var totalProductQtycheck = 0;
        var ProductSrlNo = 0;
        if ($('#HeaderhdnSrlNo').val() == null || $('#HeaderhdnSrlNo').val() == "") {
            ProductSrlNo = gridFGFinishItemList.GetVisibleRowsOnPage() + 1;
        }
        else {
            ProductSrlNo = $('#HeaderhdnSrlNo').val();
        }
        var serialCriteriacheck = [{ Field: "Product_SrlNo", Values: "" + ProductSrlNo + "" }];
        var tempStockOfProduct = flexFilter(HeaderStockOfProduct, serialCriteriacheck);


        for (var i = 0; i < tempStockOfProduct.length; i++) {
            var objprod = {};
            objprod = tempStockOfProduct[i];
            if (objprod.Quantity != "") {
                totalProductQtycheck = totalProductQtycheck + parseFloat(objprod.Quantity);
            }
        }
        totalProductQtycheck = (parseFloat(totalProductQtycheck));

        if (parseFloat(totalProductQtycheck) != parseFloat(productqty)) {

            jAlert("Enter Product quantity will be same with grid product qunatity.");
            return false;
        }
        else {
            if (HeaderStockOfProduct.length > 0) {
                var tempindex = globalrowindex;
                var SrlNo = ProductSrlNo;// gridProductionBOMProductList.batchEditApi.GetCellValue(globalrowindex, 'SlNO');
                var Unit = $('#ddlBankBranch option:selected').val();
                $.ajax({
                    type: "POST",
                    async: false,
                    url: "@Url.Action("HeadersetStockWarehouseList", "FGReceived")",
                    data: { items: HeaderStockOfProduct, SrlNo: SrlNo, Unit: Unit },
                success: function (response) {

                    var data = response.split('|');
                    if (data[1] == "False") {
                        //gridProductionBOMProductList.batchEditApi.SetCellValue(tempindex, 'StkMsg', '0', '');
                    }
                    if (data[0] == "True") {
                        $('#HeaderWarehouseDetailsModal').modal('hide');
                    }
                    else {
                        jAlert("Please try again later!");
                    }
                }
            });
        }
    }
    }

    function SetFocus(Time) {
        var Warehousetype = $('#hdfProductType').val();

        if (Time == "Add") {
            if (Warehousetype == "W" || Warehousetype == "WB" || Warehousetype == "WBS" || Warehousetype == "WS" || Warehousetype == "WSC" || Warehousetype == "WC") {
                setTimeout(function () { $("#WHddlWarehouse").focus(); }, 500);
            }
            else if (Warehousetype == "BS" || Warehousetype == "B") {
                setTimeout(function () { $("#ddlBatch").focus(); }, 500);
            }
            else if (Warehousetype == "S") {
                //setTimeout(function () { $("#txtSerial").focus(); }, 500);
            }
        }
        else if (Time == "Save") {
            if (Warehousetype == "W" || Warehousetype == "B" || Warehousetype == "WB" || Warehousetype == "WC") {
                $('#ctxtQty').val(0);
                setTimeout(function () { $('#ctxtQuantity').focus(); }, 500);
            }
            else if (Warehousetype == "WS" || Warehousetype == "WBS" || Warehousetype == "BS" || Warehousetype == "S" || Warehousetype == "WSC") {
               
            }
        }
    }

    function HeaderSetFocus(Time) {
        var Warehousetype = $('#HeaderhdfProductType').val();

        if (Time == "Add") {
            if (Warehousetype == "W" || Warehousetype == "WB" || Warehousetype == "WBS" || Warehousetype == "WS" || Warehousetype == "WSC" || Warehousetype == "WC") {
                setTimeout(function () { $("#HeaderWHddlWarehouse").focus(); }, 500);
            }
            else if (Warehousetype == "BS" || Warehousetype == "B") {
                setTimeout(function () { $("#HeaderddlBatch").focus(); }, 500);
            }
            else if (Warehousetype == "S") {
                //setTimeout(function () { $("#txtSerial").focus(); }, 500);
            }
        }
        else if (Time == "Save") {
            if (Warehousetype == "W" || Warehousetype == "B" || Warehousetype == "WB" || Warehousetype == "WC") {
                $('#HeaderHeaderctxtQty').val(0);
                setTimeout(function () { $('#HeaderctxtQuantity').focus(); }, 500);
            }
            else if (Warehousetype == "WS" || Warehousetype == "WBS" || Warehousetype == "BS" || Warehousetype == "S" || Warehousetype == "WSC") {

            }
        }
    }


    function SetWarehouseInGrid() {

        var Warehouseid = $('#ddlWarehouselist option:selected').val();
        var Warehousetxt = $('#ddlWarehouselist option:selected').text();
        if (Warehousetxt != "") {
            
            Warehouse.SetText(Warehousetxt);
            $('#hddnWarehouseID').val(Warehouseid);
            $('#GridWarehouselistModel').modal('hide');
           
        }
        else {
            jAlert("Please select warehouse!");
        }
    }



    //function HeaderSetWarehouseInGrid() {

    //    var Warehouseid = $('#HeaderddlWarehouselist option:selected').val();
    //    var Warehousetxt = $('#HeaderddlWarehouselist option:selected').text();
    //    if (Warehousetxt != "") {

    //        Warehouse.SetText(Warehousetxt);
    //        $('#hddnWarehouseID').val(Warehouseid);
    //        $('#HeaderGridWarehouselistModel').modal('hide');

    //    }
    //    else {
    //        jAlert("Please select warehouse!");
    //    }
    //}


    function Scheme_ValueChange() {
        var val = $('#ddlSchema option:selected').val();
        var schemetypeValue = val;
        var schemetype = schemetypeValue.toString().split('~')[1];
        var schemelength = schemetypeValue.toString().split('~')[2];
        var branchID = (schemetypeValue.toString().split('~')[3] != null) ? schemetypeValue.toString().split('~')[3] : "";
        var SchemaID = schemetypeValue.toString().split('~')[0];
        $('#hdnSchemaId').val(SchemaID);
        $('#ddlBankBranch').val(branchID);

         var fromdate = (schemetypeValue.toString().split('~')[5] != null) ? schemetypeValue.toString().split('~')[5] : "";
         var todate = (schemetypeValue.toString().split('~')[6] != null) ? schemetypeValue.toString().split('~')[6] : "";

         var dt = new Date();
         OrderDate_dt.SetDate(dt);


         if (dt < new Date(fromdate)) {
             OrderDate_dt.SetDate(new Date(fromdate));
         }

         if (dt > new Date(todate)) {
             OrderDate_dt.SetDate(new Date(todate));
         }
         OrderDate_dt.SetMinDate(new Date(fromdate));
         OrderDate_dt.SetMaxDate(new Date(todate));


        document.getElementById("OrderNo").maxLength = schemelength;
        if (schemetype == '0') {
            $('#OrderNo').removeAttr("disabled");
            $('#OrderNo').val('');

            $('#OrderNo').focus();
        }
        else if (schemetype == '1') {
            $('#OrderNo').attr("disabled", "disabled");
            $('#OrderNo').val('Auto');
        }
        else if (schemetype == '2') {
            $('#OrderNo').attr("disabled", "disabled");
            $('#OrderNo').val('Datewise');
        }
        else if (schemetype == 'n') {
            $('#OrderNo').attr("disabled", "disabled");
            $('#OrderNo').val('');
        }
        else {
            $('#OrderNo').attr("disabled", "disabled");
            $('#OrderNo').val('');
        }
        //var lookup = ASPxClientControl.GetControlCollection().GetByName("ProductionIssueGridLookup");
        //lookup.GetGridView().Refresh();
        //lookup.GetGridView().Refresh();
    }

    function SetBOMFocusGrid() {
        var indexfocus = gridProductionBOMProductList.batchEditApi.GetColumnIndex('Warehouse');

        var pricevalue = gridProductionBOMProductList.batchEditApi.GetCellValue(globalrowindex + 1, 'Price');
        if (pricevalue != null) {
            gridProductionBOMProductList.batchEditApi.StartEdit(globalrowindex + 1, indexfocus);
        }
        else {
            $('#saveandexit').focus();
        }
    }


    function PopulateNumberingSchemeData() {
        $.ajax({
            type: "POST",
            url: "@Url.Action("getNumberingSchemeRecord", "FGReceived")",
            success: function (response) {

                var ProductionReceiptID = $('#ProductionReceiptID').val();
                var hdnSchemaId = $('#hdnSchemaId').val();
                var html = "";
                for (var i = 0; i < response.length; i++) {
                    if (ProductionReceiptID > 0) {
                        if (hdnSchemaId == response[i].SchemaID.split('~')[0]) {
                            html = html + "<option selected value='" + response[i].SchemaID + "'>" + response[i].SchemaName + "</option>";
                        }
                        else {
                            html = html + "<option value='" + response[i].SchemaID + "'>" + response[i].SchemaName + "</option>";
                        }
                    }
                    else {
                        html = html + "<option value='" + response[i].SchemaID + "'>" + response[i].SchemaName + "</option>";
                    }
                }
                $('#ddlSchema').html(html);
                $('#ddlSchema').focus();


            }
        });
    }

    var globalindexcheck = 0;
    var globalindexcheck2 = 0;
    var cpSelectedKeys = "";
    var cpSelectedKeys2 = "";

    function ProductionIssueStartCallback(s, e) {
    
        var OrderDate = GetServerDateFormat(OrderDate_dt.GetValue());
       

        if (e != undefined) {
           
            e.customArgs["WorkOrderDate"] = OrderDate;
            e.customArgs["dtOrderDate"] = OrderDate;

        }
    }

    function ProductissueGotFocus(s,e)
    {
        var lookup = ASPxClientControl.GetControlCollection().GetByName("ProductionIssueGridLookup");
        lookup.GetGridView().Refresh();
        lookup.GetGridView().Refresh();
    }

    function btnProductList_Click(s, e) {
        Productlist('', null,$('#ProductionIssueID').val());
        setTimeout(function () { $("#txtProductName").focus(); }, 500);
        $('#ProductlistModel').modal('show');
    }
    function ProductListkeydown(e) {
        if (e.code == "Enter" || e.code == "NumpadEnter") {
            if ($("#txtProductName").val() != '' && $('#ProductionIssueID').val() !='' && $('#ProductionIssueID').val() !=null) {
                Productlist($("#txtProductName").val(), null,$('#ProductionIssueID').val());
            }
        }
        else if (e.code == "ArrowDown") {
            if ($("input[ProductIndex=0]"))
                $("input[ProductIndex=0]").focus();
        }
    }

    function ValueSelected(e, indexName) {
        if (e.code == "Enter") {
            var Id = e.target.parentElement.parentElement.cells[0].innerText;
            var name = e.target.parentElement.parentElement.cells[1].children[0].value;
            if (Id) {
                if (indexName == "ProductIndex") {
                    SetProduct(Id, name, null);
                }

            }
        }
        else if (e.code == "ArrowDown") {
            thisindex = parseFloat(e.target.getAttribute(indexName));
            thisindex++;
            if (thisindex < 10)
                $("input[" + indexName + "=" + thisindex + "]").focus();
        }
        else if (e.code == "ArrowUp") {
            thisindex = parseFloat(e.target.getAttribute(indexName));
            thisindex--;
            if (thisindex > -1)
                $("input[" + indexName + "=" + thisindex + "]").focus();
            else {
                if (indexName == "ProductIndex")
                    $('#txtProductName').focus();

            }
        }

    }


    var finishedproductlist = 0;
    function SetProduct(Id, Name, e) {
        finishedproductlist = 0;
        var ProductID = Id;
        var ProductName = Name;

        if (ProductID != "") {

            var data = ProductID.split('|');
            ProductID = data[0];
            var ReceiptQty = data[7];
            var Description = data[2];
            var DesignNo = data[4];
            var RevisionNo = data[5];
            $('#FinishedItem').val(ProductName);
            $('#hdnFinishedItem').val(ProductID);
            $('#Order_Qty').val(ReceiptQty);
            $('#FinishedUom').val(data[1]);
            $('#hdnFinishedItemUOM').val(data[6]);
            $('#JobWorkRate').val(data[8]);
            $('#Description').val(Description);
            btnFinishedItem.SetText(ProductName);
            $('#hdnOrder_QtyMax').val(data[10]);
            $("#Description").val(Description);
            $("#DesignNo").val(DesignNo);
            $('#ItemRevNo').val(RevisionNo);
            $('#OldFGQuantity').val(data[9]);
            $('#MaxBalFGQuantity').val(data[10]);
            $('#HeaderInventoryType').val(data[11]);
            $('#ProductlistModel').modal('hide');
          

        }
    }


    function Productlist(SearchKey, type) {
        finishedproductlist = 1;
        var OtherDetails = {}
        OtherDetails.SearchKey = SearchKey;
        OtherDetails.Type = type;
        OtherDetails.IssueId = $('#ProductionIssueID').val();

        var HeaderCaption = [];
        // HeaderCaption.push("Product ID");
        HeaderCaption.push("Product Code");
        HeaderCaption.push("Product Name");
        HeaderCaption.push("UOM");
        HeaderCaption.push("Inventory");
        HeaderCaption.push("HSN/SAC");
        HeaderCaption.push("Brand");
        HeaderCaption.push("Class");

        callonServer("../Models/pManufacturing_WebServiceList.asmx/GetBalanceFGProductDetailsList", OtherDetails, "ProductTable", HeaderCaption, "ProductIndex", "SetProduct");
    }

    function ProductionIssueSelectionChanged(s, e) {

        if (e.isChangedOnServer) return;
        globalindexcheck2 = ProductionIssueGridLookup.gridView.focusedRowIndex;
        var key = ProductionIssueGridLookup.gridView.GetRowKey(globalindexcheck2)

        $("#FinishedItem").val(''),
        $('#hdnFinishedItem').val(0),
        $("#Description").val(''),
        $("#Order_Qty").val('0.0000'),
        $("#DesignNo").val('');
        $('#ItemRevNo').val('');
        $('#JobWorkRate').val('0.00');
        $("#FinishedUom").val('');
        $("#GuiIDS").val('');
        $('#OldFGQuantity').val('0.0000');
        $('#MaxBalFGQuantity').val('0.0000');
        $('#hddnWarehouseID').val(0);
        $('#hdnFinishedItemUOM').val(0);
        //Warehouse.SetText('');
        btnFinishedItem.SetText('');
        $('#hdnOrder_QtyMax').val(0);
        $('#HeaderInventoryType').val('');
        $('#HeaderhdnSrlNo').val('');

        if (key != null && globalindexcheck2 > -1) {
            cpSelectedKeys2 = "";
            var Issue_No = ProductionIssueGridLookup.gridView.GetRow(globalindexcheck2).children[1].innerHTML;
            var WorkOrderName = ProductionIssueGridLookup.gridView.GetRow(globalindexcheck2).children[4].innerHTML;
          //  var ProductionOrderNo = ProductionIssueGridLookup.gridView.GetRow(globalindexcheck2).children[5].innerHTML;
          //  var BOMNo = ProductionIssueGridLookup.gridView.GetRow(globalindexcheck2).children[6].innerHTML;
          //  var RevNo = ProductionIssueGridLookup.gridView.GetRow(globalindexcheck2).children[7].innerHTML;
            var FinishedItem = ProductionIssueGridLookup.gridView.GetRow(globalindexcheck2).children[5].innerHTML;
            var FinishedUom = ProductionIssueGridLookup.gridView.GetRow(globalindexcheck2).children[8].innerHTML;
            var Order_Qty = ProductionIssueGridLookup.gridView.GetRow(globalindexcheck2).children[3].innerHTML;
            var Warehouse = ProductionIssueGridLookup.gridView.GetRow(globalindexcheck2).children[10].innerHTML;
            var Details_ID = ProductionIssueGridLookup.gridView.GetRow(globalindexcheck2).children[6].innerHTML;
          //  var productionorderdate = ProductionIssueGridLookup.gridView.GetRow(globalindexcheck2).children[14].innerHTML;
            var workorderdate = ProductionIssueGridLookup.gridView.GetRow(globalindexcheck2).children[7].innerHTML;
           // var ProductionOrderID = ProductionIssueGridLookup.gridView.GetRow(globalindexcheck2).children[15].innerHTML;

            var ProductionIssueID = ProductionIssueGridLookup.gridView.GetRow(globalindexcheck2).children[11].innerHTML;
            var WorkCenterID = ProductionIssueGridLookup.gridView.GetRow(globalindexcheck2).children[12].innerHTML;
            var WorkCenterCode = ProductionIssueGridLookup.gridView.GetRow(globalindexcheck2).children[13].innerHTML;
            var WorkCenterDescription = ProductionIssueGridLookup.gridView.GetRow(globalindexcheck2).children[14].innerHTML;

            var WorkOrderID = ProductionIssueGridLookup.gridView.GetRow(globalindexcheck2).children[15].innerHTML;

            var BalQty = ProductionIssueGridLookup.gridView.GetRow(globalindexcheck2).children[3].innerHTML;



            var PartNoName = ProductionIssueGridLookup.gridView.GetRow(globalindexcheck2).children[17].innerHTML;
            var ItemRev_No = ProductionIssueGridLookup.gridView.GetRow(globalindexcheck2).children[18].innerHTML;
            var DEsign = ProductionIssueGridLookup.gridView.GetRow(globalindexcheck2).children[19].innerHTML;
            var Product_Name = ProductionIssueGridLookup.gridView.GetRow(globalindexcheck2).children[20].innerHTML;

            var Proj_Code = ProductionIssueGridLookup.gridView.GetRow(globalindexcheck2).children[21].innerHTML;
            var Hierarchy = ProductionIssueGridLookup.gridView.GetRow(globalindexcheck2).children[22].innerHTML;

            // Rev Sanchita
            var ProjectID = ProductionIssueGridLookup.gridView.GetRow(globalindexcheck2).children[23].innerHTML;
            // End of Rev Sanhcita
            
           
            //$('#hdnPendqty').val(Order_Qty);
          


            //if (PartNoName == '&nbsp;') {
            //    $('#PartNoName').val('');
            //}
            //else {
            //    $('#PartNoName').val(PartNoName);
            //}
            //if (DEsign == '&nbsp;') {
            //    $('#DesignNo').val('');
            //}
            //else {
            //    $('#DesignNo').val(DEsign);
            //}
            //if (ItemRev_No == '&nbsp;') {
            //    $('#ItemRevNo').val('');
            //}
            //else {
            //    $('#ItemRevNo').val(ItemRev_No);
            //}
            //if (Product_Name == '&nbsp;') {
            //    $('#Description').val('');
            //}
            //else {
            //    $('#Description').val(Product_Name);
            //}

            if (Proj_Code == '&nbsp;') {
                $('#Proj_Code').val('');
            }
            else {
                $('#Proj_Code').val(Proj_Code);
            }

            if (Hierarchy == '&nbsp;') {
                $('#Hierarchy').val('');
            }
            else {
                $('#Hierarchy').val(Hierarchy);
            }

            // Rev Sanchita
            if (ProjectID == '&nbsp;') {
                $('#ProjectID').val('');
            }
            else {
                $('#ProjectID').val(ProjectID);
            }
            // End of Rev Sanchita

            var fromdate = new Date(workorderdate.replace(/(\d{2})-(\d{2})-(\d{4})/, "$2/$1/$3"));
            $('#IssueDate').val(workorderdate);
            OrderDate_dt.SetMinDate(fromdate);
            if (OrderDate_dt.GetValue() < new Date(fromdate)) {
                OrderDate_dt.SetDate(new Date(fromdate));
            }

            //if (RevNo == "&nbsp;" || RevNo == undefined) {
            //    RevNo = "";
            //}
           
            $('#ProductionIssueID').val(key);
            $('#WorkOrderNo').val(WorkOrderName);
         
          
            //$('#FinishedItem').val(FinishedItem);
            //$('#FinishedUom').val(FinishedUom);
            //$('#Order_Qty').val(Order_Qty);
            //$('#hdnProductQty').val(Order_Qty);
            //$('#Warehouse').val(Warehouse);
            $('#Details_ID').val(Details_ID);
            $('#WorkOrderID').val(WorkOrderID);
            cpSelectedKeys2 = key;
            //$('#Order_Qty').select();
            //$('#Order_Qty').focus();
          
            $('#WorkCenterID').val(WorkCenterID);
           // $('#hdnOrder_QtyMax').val(BalQty);
            ProductionIssueGridLookup.SetTextWithoutApply(Issue_No);

            WorkCenterGridLookup.SetTextWithoutApply(WorkCenterCode);

            setTimeout(function () {
                WorkCenterGridLookup.SetEnabled(false);

                $('#lblWorkCenterName').text(WorkCenterDescription);
                totalAmountSetLogic();
                SetFGPrice();
            }, 500);
        }
        else {
            $('#ProductionIssueID').val(0);
            cpSelectedKeys2 = "";
            $('#WorkOrderNo').val('');
            $('#WorkOrderID').val(0);
            $('#Details_ID').val(0);
           // $('#ProductionOrderDate').val('');
            //$('#ProductionOrderNo').val('');
           // $('#ProductionOrderID').val('');
           // $('#BOMNo').val('');
           // $('#RevNo').val('');
            $('#FinishedItem').val('');
            $('#FinishedUom').val('');
            $('#Order_Qty').val('');
            $('#Warehouse').val('');
            $('#IssueDate').val('');
            $('#hdnProductQty').val(parseFloat(0).toFixed(4));
            $('#lblWorkCenterName').text('');
            WorkCenterGridLookup.SetTextWithoutApply('');
            $('#WorkCenterID').val(0);

            $('#PartNoName').val('');
            $('#DesignNo').val('');
            $('#ItemRevNo').val('');
            $('#Description').val('');


            $('#Proj_Code').val('');
            $('#Hierarchy').val('');
            // Rev Sanchita
            $('#ProjectID').val(0);
            // End ofREv Sanchita
        }

        populatePIBOMProductList();
    }


    function EditData(values) {
        $('#HeaderhdnSrlNo').val('');
        $.ajax({
            type: "POST",
            url: "@Url.Action("EditData", "FGReceived")",
            data: { HiddenID: values },
        success: function (response) {
            if (response != null) {


               // $('#ProductionIssueID').val(response.MaterialIssue_ID);
                btnFinishedItem.SetText(response.FinishItemName);
                $("#FinishedItem").val(response.FinishItemName),
                $("#hdnFinishedItem").val(response.FinishProductsID),
                 $("#Description").val(response.FinishItemDescription),
                $("#Order_Qty").val(response.Qty),
                   $("#DesignNo").val(response.FinishDrawingNo);
                $('#ItemRevNo').val(response.FinishItemRevNo);
                //$('#FinishedUom').val)(response.FinishUOM);
                $('#JobWorkRate').val(response.FinishPrice),
               $("#FinishedUom").val(response.FinishUOM),
              $("#GuiIDS").val(response.Guids),
                $('#hdnFinishedItemUOM').val(response.FinishUOMId);
                $('#OldFGQuantity').val(response.OldFGQuantity),
                $('#MaxBalFGQuantity').val(response.MaxBalFGQuantity)
                $('#hddnWarehouseID').val(response.FinishWareHouseId);
                //Warehouse.SetText(response.FGWareHouseName);


                var ProductionReceiptID = $('#ProductionReceiptID').val();
              
                var hdnIssue_QtyMax = $('#hdnOrder_QtyMax').val();
                if (parseInt(ProductionReceiptID) > 0) {
                    var OldBalQty = $('#OldFGQuantity').val();
                    var MaxBalQty = $('#MaxBalFGQuantity').val();
                    var TotalBalQty = parseFloat($('#OldFGQuantity').val()) + parseFloat($('#MaxBalFGQuantity').val());
                    $('#hdnOrder_QtyMax').val(parseFloat(TotalBalQty));


                }
                else {
                    var OldBalQty = $('#OldFGQuantity').val();
                    var MaxBalQty = $('#MaxBalFGQuantity').val();
                    var TotalBalQty = parseFloat($('#OldFGQuantity').val()) + parseFloat($('#MaxBalFGQuantity').val());
                    $('#hdnOrder_QtyMax').val(parseFloat(MaxBalQty));
                }

                $('#HeaderhdnSrlNo').val(response.SrlNO);
                $('#HeaderInventoryType').val(response.FinishInventoryType);
                $('#HeaderhdfProductType').val(response.FinishInventoryType);

            }
        }
    });
    }


    function DeleteData(values) {
        $('#HeaderhdnSrlNo').val('');
        

        $.ajax({
            type: "POST",
            url: "@Url.Action("DeleteData", "FGReceived")",
            data: { HiddenID: values },
            async:false,
            success: function (response) {
                var d=response.split('~');
                if (d[0] != null) {

                //FinishProductWarehousedelete(HeaderStockOfProduct, function () { return this.Product_SrlNo == values; });
                //HeaderStockOfProduct = HeaderStockOfProduct.filter(this.Product_SrlNo => element.value != '')
                var newArr = [];

                for (var i = 0; i < HeaderStockOfProduct.length; i++) {
                    if (HeaderStockOfProduct[i]['Product_SrlNo'] != parseInt(response)) {
                        newArr.push(HeaderStockOfProduct[i]);
                    }
                }
                HeaderStockOfProduct = newArr;



                   gridFGFinishItemList.Refresh();
                }
                //if(d[1] !=null)
                //{
                //    TotalGridFinishQty=TotalGridFinishQty-parseFloat(d[1]).toFixed(2);
                //}
        }
    });
    }
    function FinishProductWarehousedelete(arr, func) {
        for (var i = 0; i < arr.length; i++) {
            if (func.call(arr[i])) {
                arr.splice(i, 1);
                return arr;
            }
        }
    }

    function ChkJobworkrateDigitCount(e) {
        var data = $(e).val();
        $(e).val(parseFloat(data).toFixed(2));
        if (data == '' || data == null) {
            $(e).val(parseFloat(0).toFixed(2));
        }
    }

    function btnAdd_ProductClick() {
        var Order_Qty = $('#Order_Qty').val();
        var JobWorkRate = $('#JobWorkRate').val();
        if (JobWorkRate == null || JobWorkRate == "")
        {
            JobWorkRate = "0.00";
        }
        // var workcenter = $('#WorkCenterID').val();//WorkCenterGridLookup.gridView.currentSelectionState.InputText;
        var PartNo = $("#hdnFinishedItem").val();
        //if ($("#hdnPartNo").val() == "") {
        //    PartNo = $("#HdnPartProductId").val();
        //}
        if (btnFinishedItem.GetValue() == null) {
            jAlert("Please select Product");
            return;
        }
        var OrderQuantity = $('#Order_Qty').val();
        if (OrderQuantity == "" || parseFloat($('#Order_Qty').val()) == 0) {
            jAlert("Please enter Receipt Qty.");
            return false;
        }

        var ProductionReceiptID = $('#ProductionReceiptID').val();
        if (parseInt(ProductionReceiptID) > 0)
        {
            var OldBalQty = $('#OldFGQuantity').val();
            var MaxBalQty = $('#MaxBalFGQuantity').val();
            var TotalBalQty=parseFloat($('#OldFGQuantity').val())+parseFloat($('#MaxBalFGQuantity').val());
            if(parseFloat($('#Order_Qty').val())>parseFloat(TotalBalQty))
            {
                jAlert("FG QTY not greater than balance qty");
                false;
            }

        }
        else
        {
            var OldBalQty = $('#OldFGQuantity').val();
            var MaxBalQty = $('#MaxBalFGQuantity').val();
            var TotalBalQty = parseFloat($('#OldFGQuantity').val()) + parseFloat($('#MaxBalFGQuantity').val());
            if (parseFloat($('#Order_Qty').val()) > parseFloat(MaxBalQty)) {
                jAlert("Receipt QTY not greater than balance qty");
                false;
            }
        }

        //var pendingQty = $('#hdnOrder_QtyMax').val();
        //var WarehouseID = $('#hddnWarehouseID').val();
        //var ddlSchema = $('#ddlSchema option:selected').val();
        

        //if (parseFloat(pendingQty) < parseFloat(Order_Qty)) {
        //    jAlert("Receipt QTY not greater than balance qty");
        //    return false;
        //}

        //if (Warehouse.GetText() == "") {
        //    jAlert("Please select warehouse.");
        //    return false;
        //}

        //if (parseFloat(Order_Qty) == "" || parseFloat(Order_Qty) == 0) {
        //    jAlert("Please enter Receipt QTY.");
        //    return false;
        //}

        //var visiablerow = gridFGFinishItemList.GetVisibleRowsOnPage();
        //    for (var i = 0; i < visiablerow; i++) {
        //        if (gridFGFinishItemList.GetRow(i)) {
        //            gridFGFinishItemList.batchEditApi.EndEdit();
        //            gridFGFinishItemList.batchEditApi.StartEdit(Finishglobalrowindex);
        //            gridFGFinishItemList.batchEditApi.StartEdit(0, 1)
        //            var ProductId = gridFGFinishItemList.batchEditApi.GetCellValue(i, 'SrlNO');
                    
        //            if (ProductId == $("#hdnFinishedItem").val()) {
        //                jAlert('Duplicate Finished Item not allow.');
        //                return;
        //                }
        //           }
        //    }
        

      
        var requireddataforwarehouse = 0;
        //if (HeaderStockOfProduct.length == 0 || HeaderStockOfProduct.length < 0) {
        //    jAlert("Please select warehouse.");
        //    return false;
        //}


        var warehouseTotalProductQty = 0;
        var warehouseProductQty = 0;
        var IsInventory //= //gridProductionBOMProductList.batchEditApi.GetCellValue(i, 'IsInventory');
        var GridProductQty = Order_Qty; //gridProductionBOMProductList.batchEditApi.GetCellValue(i, 'ProductQty');
        //var SlNO = //gridProductionBOMProductList.batchEditApi.GetCellValue(i, 'SlNO');
        var SlNO=0;
        if ($('#HeaderhdnSrlNo').val() == null || $('#HeaderhdnSrlNo').val() == "")
        {
            SlNO = gridFGFinishItemList.GetVisibleRowsOnPage() + 1;
        }
        else
        {
            SlNO = $('#HeaderhdnSrlNo').val();
        }
        var invtory = $('#HeaderInventoryType').val();
        if (invtory != "" && invtory != null && invtory != undefined)
        {
            IsInventory = 'yes';
        }
        else
        {
            IsInventory = 'No';
        }
        var serialCriteria = [{ Field: "Product_SrlNo", Values: "" + SlNO + "" }];
        var tempStockOfProduct = flexFilter(HeaderStockOfProduct, serialCriteria);
        if (IsInventory != 'No') {
            if (tempStockOfProduct == undefined || tempStockOfProduct.length == 0) {
                requireddataforwarehouse = 1;
                //break;
            }
            else if (tempStockOfProduct.length > 0) {
                for (var i = 0; i < tempStockOfProduct.length; i++) {
                    var objprod = {};
                    objprod = tempStockOfProduct[i];
                    if (objprod.Quantity != "") {
                        warehouseTotalProductQty = warehouseTotalProductQty + parseFloat(objprod.Quantity);
                    }
                }
            }
            if (parseFloat(warehouseTotalProductQty) != parseFloat(GridProductQty)) {
                requireddataforwarehouse = 1;
                //break;
            }
        }

        if (requireddataforwarehouse==1) {
            jAlert("Please enter warehouse quantity.");
            return false;
        }


     

        if (btnFinishedItem.GetValue() == null || btnFinishedItem.GetValue() == "") {
            jAlert("Empty FinishItem.");
            return;
        }
       
        else {

            var Amount = parseFloat(Order_Qty).toFixed(4) * parseFloat(JobWorkRate).toFixed(4);

            var data = {
                Guids: $("#GuiIDS").val(),
                FinishItemName: btnFinishedItem.GetValue(),
                FinishItemDescription: $("#Description").val(),
                FinishDrawingNo: $("#DesignNo").val(),
                FinishItemRevNo: $('#ItemRevNo').val(),
                Qty: parseFloat(Order_Qty).toFixed(4),
                FinishUOM: $("#FinishedUom").val(),
                FinishPrice: JobWorkRate,
                FinishAmount: parseFloat(Amount).toFixed(2),
                FinishUpdateEdit: "1",
                MaterialIssue_ID: $('#ProductionIssueID').val(),
                FGReceivedID: $('#ProductionReceiptID').val(),
                FinishUOMId: $('#hdnFinishedItemUOM').val(),
                FinishProductsID: PartNo,
                FinishWareHouseId:$('#hddnWarehouseID').val(),
                OldFGQuantity: $('#OldFGQuantity').val(),
                MaxBalFGQuantity:$('#MaxBalFGQuantity').val(),
                FGWareHouseName:'', //Warehouse.GetText(),
                FinishInventoryType: $('#HeaderInventoryType').val(),

            }
            $.ajax({
                type: "POST",
                url: "@Url.Action("AddProduct", "FGReceived")",
                data: "{prod:" + JSON.stringify(data) + "}",
            async: true,
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (response) {
                var d = response.split('~');
                if (d[0] == "Duplicate") {
                    //gridFGFinishItemList.Refresh();
                    //gridFGFinishItemList.Refresh();

                    $("#FinishedItem").val(''),
                    $('#hdnFinishedItem').val(0),
                    $("#Description").val(''),
                    $("#Order_Qty").val('0.0000'),
                    $("#DesignNo").val('');
                    $('#ItemRevNo').val('');
                    $('#JobWorkRate').val('0.00');
                    $("#FinishedUom").val('');
                    $("#GuiIDS").val('');
                    $('#OldFGQuantity').val('0.0000');
                    $('#MaxBalFGQuantity').val('0.0000');
                    $('#hddnWarehouseID').val(0);
                    $('#hdnFinishedItemUOM').val(0);
                    //Warehouse.SetText('');
                    btnFinishedItem.SetText('');
                    $('#hdnOrder_QtyMax').val(0);
                    $('#HeaderInventoryType').val('');
                    $('#HeaderhdnSrlNo').val('');
                    jAlert('Duplicate product not allow.');
                }
                else if (d[0] == "Success")
                {
                    gridFGFinishItemList.Refresh();
                    gridFGFinishItemList.Refresh();

                    $("#FinishedItem").val(''),
                    $('#hdnFinishedItem').val(0),
                    $("#Description").val(''),
                    $("#Order_Qty").val('0.0000'),
                    $("#DesignNo").val('');
                    $('#ItemRevNo').val('');
                    $('#JobWorkRate').val('0.00');
                    $("#FinishedUom").val('');
                    $("#GuiIDS").val('');
                    $('#OldFGQuantity').val('0.0000');
                    $('#MaxBalFGQuantity').val('0.0000');
                    $('#hddnWarehouseID').val(0);
                    $('#hdnFinishedItemUOM').val(0);
                    //Warehouse.SetText('');
                    btnFinishedItem.SetText('');
                    $('#HeaderInventoryType').val('');
                    $('#HeaderhdnSrlNo').val('');
                    $('#hdnOrder_QtyMax').val(0);
                }
                $('#FinishTotalQty').val(d[1]);
                //var value = (parseFloat(TotalRawAMountqty).toFixed(2) / parseFloat(TotalGridFinishQty).toFixed(2));
                //$('#lblFGPrice').text(parseFloat(value).toFixed(2));
                RawitemTotalamount();

            }
        });
    }


    }


    function SetFGPrice() {
        var txtGridProductEntryTotalAmount = $('#txtGridProductEntryTotalAmount').val();
       
        var Order_Qty = $('#Order_Qty').val();
        var calc = (parseFloat(txtGridProductEntryTotalAmount) / parseFloat(Order_Qty));
        calc = 0;
        $('#lblFGPrice').text(calc.toFixed(2));
    }

    function checkMaxValue(e) {
        var Qty = $(e).val();
        var hdnIssue_QtyMax = $('#hdnOrder_QtyMax').val();
        if (parseFloat(Qty) > parseFloat(hdnIssue_QtyMax) && hdnIssue_QtyMax != "") {

            $(e).val(hdnIssue_QtyMax);

        }
        if (Qty <= 0) {
            $(e).val(parseFloat(1).toFixed(4));
            //changeQtyValue($('#Order_Qty'));
        }
        //changeQtyValue($('#Order_Qty'));
        SetFGPrice();

    }

    function populatePIBOMProductList() {

        if (cpSelectedKeys2 > 0 && cpSelectedKeys2 != "" && cpSelectedKeys2 != null) {
            var Details_ID = $('#Details_ID').val();
            $.ajax({
                type: "POST",
                url: "@Url.Action("SetTempID", "FGReceived")",
                data: { DetailsID: Details_ID, ProductionIssueID: cpSelectedKeys2 },
                success: function (response) {
                    if (response) {
                        gridProductionBOMProductList.Refresh();
                    }
                }
            });
        }
        else {
            var Details_ID = 0;
            $.ajax({
                type: "POST",
                url: "@Url.Action("SetTempID", "FGReceived")",
                data: { DetailsID: Details_ID, ProductionIssueID: 0 },
                success: function (response) {
                    if (response) {
                        gridProductionBOMProductList.Refresh();
                    }
                }
            });
        }
    }

    function WorkCenterSelectionChanged(s, e) {

        $('#lblWorkCenterName').text('');
        if (e.isChangedOnServer) return;
        globalindexcheck2 = WorkCenterGridLookup.gridView.focusedRowIndex;
        var key = WorkCenterGridLookup.gridView.GetRowKey(globalindexcheck2)

        if (key != null && globalindexcheck2 > -1) {

            cpSelectedKeys2 = "";
            var WorkCenterName = WorkCenterGridLookup.gridView.GetRow(globalindexcheck2).children[1].innerHTML;
            var WorkCenterDesc = WorkCenterGridLookup.gridView.GetRow(globalindexcheck2).children[2].innerHTML;

            $('#WorkCenterID').val(key);
            cpSelectedKeys2 = key;
            WorkCenterGridLookup.SetTextWithoutApply(WorkCenterName);
            $('#lblWorkCenterName').text(WorkCenterDesc);
        }
        else {
            cpSelectedKeys2 = "";
            $('#WorkCenterID').val(0);
            $('#lblWorkCenterName').text('');
        }
    }

    function ProductionOrderSelectionChanged(s, e) {

        if (e.isChangedOnServer) return;
        globalindexcheck = ProductionOrderGridLookup.gridView.focusedRowIndex;
        var key = ProductionOrderGridLookup.gridView.GetRowKey(globalindexcheck);

        if (key != null && globalindexcheck > -1) {
            cpSelectedKeys = "";

            var ProductionOrderno = ProductionOrderGridLookup.gridView.GetRow(globalindexcheck).children[1].innerHTML;
            var bomno = ProductionOrderGridLookup.gridView.GetRow(globalindexcheck).children[2].innerHTML;
            var revno = ProductionOrderGridLookup.gridView.GetRow(globalindexcheck).children[3].innerHTML;

            var productitem = ProductionOrderGridLookup.gridView.GetRow(globalindexcheck).children[5].innerHTML;
            var finisheduom = ProductionOrderGridLookup.gridView.GetRow(globalindexcheck).children[6].innerHTML;
            var productqty = ProductionOrderGridLookup.gridView.GetRow(globalindexcheck).children[7].innerHTML;

            var unit = ProductionOrderGridLookup.gridView.GetRow(globalindexcheck).children[8].innerHTML;
            var warehouse = ProductionOrderGridLookup.gridView.GetRow(globalindexcheck).children[9].innerHTML;

            cpSelectedKeys = ProductionOrderGridLookup.gridView.GetRow(globalindexcheck).children[11].innerHTML;

            POdate = ProductionOrderGridLookup.gridView.GetRow(globalindexcheck).children[12].innerHTML;

            var BalQty = ProductionOrderGridLookup.gridView.GetRow(globalindexcheck).children[13].innerHTML;

            var fromdate = new Date(POdate.replace(/(\d{2})-(\d{2})-(\d{4})/, "$2/$1/$3"));
            OrderDate_dt.SetMinDate(fromdate);
            if (OrderDate_dt.GetValue() < new Date(fromdate)) {
                OrderDate_dt.SetDate(new Date(fromdate));
            }

            if (revno == "&nbsp;" || revno == undefined) {
                revno = "";
            }
            $('#BOMNo').val(bomno);
            $('#RevNo').val(revno);
            $('#FinishedItem').val(productitem);
            $('#FinishedUom').val(finisheduom);
            $('#hdnProductQty').val(parseFloat(productqty).toFixed(4));

            $('#hdnBalQty').val(parseFloat(BalQty).toFixed(4));
            $('#Order_Qty').val(parseFloat(BalQty).toFixed(4));
            $('#Warehouse').val(warehouse);
            $('#Production_ID').val(key);
            OrderDate_dt.SetFocus();
            ProductionOrderGridLookup.SetTextWithoutApply(ProductionOrderno);
            $('#BRANCH_ID').val(unit);
        }
        else {
            cpSelectedKeys = "";
            $('#BOMNo').val('');
            $('#RevNo').val('');
            $('#FinishedItem').val('');
            $('#FinishedUom').val('');
            $('#Production_ID').val(0);
            $('#hdnProductQty').val(parseFloat(0).toFixed(4));
            $('#hdnBalQty').val(parseFloat(0).toFixed(4));
            $('#Order_Qty').val(parseFloat(0).toFixed(4));
        }
        populateWOBOMProductList();
    }

    function populateWOBOMProductList() {
        if (cpSelectedKeys > 0 && cpSelectedKeys != "" && cpSelectedKeys != null) {
            var production_id = $('#Production_ID').val()
            $.ajax({
                type: "POST",
                url: "@Url.Action("SetTempID", "FGReceived")",
                data: { DetailsID: cpSelectedKeys, Production_ID: production_id },
                success: function (response) {
                    if (response) {
                        gridProductionBOMProductList.Refresh();
                    }
                }
            });
        }
    }

    $(function () {
        PopulateNumberingSchemeData();
        ChkDataDigitCount($('#Order_Qty'));

        var lookup = ASPxClientControl.GetControlCollection().GetByName("ProductionIssueGridLookup");
        lookup.GetGridView().Refresh();
        lookup.GetGridView().Refresh();

        var lookup2 = ASPxClientControl.GetControlCollection().GetByName("WorkCenterGridLookup");
        lookup2.GetGridView().Refresh();
        lookup2.GetGridView().Refresh();


        $(".decimalCheck").on("keypress keyup blur", function (event) {

            $(this).val($(this).val().replace(/[^0-9\.]/g, ''));
            if ((event.which != 46 || $(this).val().indexOf('.') != -1) && (event.which < 48 || event.which > 57)) {
                event.preventDefault();
            }
        });


        $("body").bind("keydown", function (event) {
            if (event.keyCode == 88 && event.altKey == true) { //  && myModal.GetVisible() == true
                ProductionReceiptSave('Exit');
            }
            if (event.keyCode == 83 && event.altKey == true) { //  && myModal.GetVisible() == true
                ProductionReceiptSave('New');
            }
        });
        PopulateDataInEditMode();
    });

    function ProductionOrderGotFocus(s, e) {
        ProductionOrderGridLookup.ShowDropDownArea();
    }

    function WorkCenterGotFocus(s, e) {
        WorkCenterGridLookup.ShowDropDownArea();
    }


    function LoadWarehouseList() {

        var ProductionIssueID = $('#ProductionReceiptID').val();
        $.ajax({
            type: "POST",
            url: "@Url.Action("GetWarehouseList", "FGReceived")",
            data: { ProductionIssueID: ProductionIssueID },
            async:false,
        success: function (response) {
            if (response.length > 0) {

                //GetBatchName(response[0].WarehouseID, response[0].Batch, response);
                //var ProductStock = {
                //    Product_SrlNo: response[0].Product_SrlNo, SrlNo: response[0].SrlNo, WarehouseID: response[0].WarehouseID, WarehouseName: response[0].WarehouseName,
                //    Quantity: response[0].Quantity, SalesQuantity: response[0].SalesQuantity, Batch: response[0].Batch, ViewBatch: GetBatchName(response[0].WarehouseID,response[0].Batch), SerialNo: response[0].SerialNo, //MfgDate: MfgDate, ExpiryDate: ExprieyDate, Rate: Rate,
                //    //SerialNo: Serial, Barcode: "", ViewBatch: Batch, //ViewMfgDate: MfgDate, ViewExpiryDate: ExprieyDate, ViewRate: Rate,
                //    IsOutStatus: response[0].IsOutStatus, IsOutStatusMsg: "", LoopID: response[0].LoopID, Status: response[0].Status, ProductID: response[0].ProductID
                //}
                //StockOfProduct.push(ProductStock);
                



                for (var i = 0; i < response.length; i++) {
                    var BatchName = '';
                    if (parseInt(response[i].ProductID) > 0 && parseInt(response[i].WarehouseID) > 0 && parseInt(response[i].Batch)>0)
                    {
                        $.ajax({
                            type: "POST",
                            url: "@Url.Action("getBatchRecordForProduct", "FGReceived")",
                            data: { warehouseid: parseInt(response[i].WarehouseID), ProductID: parseInt(response[i].ProductID), BatchID: parseInt(response[i].Batch) },
                            async:false,
                        success: function (response1) {
                           
                            if (response1.length > 0) {
                                for (var j = 0; j < response1.length; j++) {
                                    if (response1[j].BatchID == response[i].Batch) {
                                        BatchName = response1[j].BatchName;
                                    }
                                }
                            }

                        }
                    });
                    }


                    var ProductStock = {
                        Product_SrlNo: response[i].Product_SrlNo, SrlNo: response[i].SrlNo, WarehouseID: response[i].WarehouseID, WarehouseName: response[i].WarehouseName,
                        Quantity: response[i].Quantity, SalesQuantity: response[i].SalesQuantity, Batch: response[i].Batch, ViewBatch: BatchName, SerialNo: response[i].SerialNo, //MfgDate: MfgDate, ExpiryDate: ExprieyDate, Rate: Rate,
                        //SerialNo: Serial, Barcode: "", ViewBatch: Batch, //ViewMfgDate: MfgDate, ViewExpiryDate: ExprieyDate, ViewRate: Rate,
                        IsOutStatus: response[i].IsOutStatus, IsOutStatusMsg: "", LoopID: response[i].LoopID, Status: response[i].Status, ProductID: response[i].ProductID
                    }
                    StockOfProduct.push(ProductStock);
                }



            }
        }
    });
    }




    function HeaderLoadWarehouseList() {

        var ProductionIssueID = $('#ProductionReceiptID').val();
        $.ajax({
            type: "POST",
            url: "@Url.Action("HeaderGetWarehouseList", "FGReceived")",
            data: { ProductionIssueID: ProductionIssueID },
        success: function (response) {
            if (response.length > 0) {

              
               


                for (var i = 0; i < response.length; i++) {

                    var BatchName = '';
                    var MfgDate = '';
                    var ExpiryDate = '';
                    if (parseInt(response[i].ProductID) > 0 && parseInt(response[i].WarehouseID) > 0 && response[i].Batch != "" && response[i].Batch !=null)
                    {
                        $.ajax({
                            type: "POST",
                            url: "@Url.Action("HeadergetBatchRecordForFGFinishBatch", "FGReceived")",
                            data: { warehouseid: parseInt(response[i].WarehouseID), ProductID: parseInt(response[i].ProductID), BatchID: parseInt(response[i].Batch) },
                        async:false,
                        success: function (response1) {
                           
                            if (response1.length > 0) {
                                for (var j = 0; j < response1.length; j++) {
                                    if (response1[j].BatchName == response[i].Batch) {
                                        BatchName = response1[j].BatchName;
                                        MfgDate = response1[j].MfgDate;
                                        ExpiryDate = response1[j].ExpiryDate;
                                        break;
                                    }
                                }
                            }

                        }
                    });
                }




                    var ProductStock = {
                        Product_SrlNo: response[i].Product_SrlNo, SrlNo: response[i].SrlNo, WarehouseID: response[i].WarehouseID, WarehouseName: response[i].WarehouseName,
                        Quantity: response[i].Quantity, SalesQuantity: response[i].SalesQuantity, Batch: response[i].Batch, ViewBatch: BatchName, SerialNo: response[i].SerialNo, //MfgDate: MfgDate, ExpiryDate: ExprieyDate, Rate: Rate,
                        //SerialNo: Serial, Barcode: "", ViewBatch: Batch, 
                        ViewMfgDate: MfgDate, ViewExpiryDate: ExpiryDate,
                        //ViewRate: Rate,
                        IsOutStatus: response[i].IsOutStatus, IsOutStatusMsg: "", LoopID: response[i].LoopID, Status: response[i].Status, ProductID: response[i].ProductID
                    }
                    HeaderStockOfProduct.push(ProductStock);
                }




            }
        }
    });
    }

    function HeaderGetBatchName(WarehouseID, Batch, response) {
        var ProductsID =$("#hdnFinishedItem").val(); //gridProductionBOMProductList.batchEditApi.GetCellValue(globalrowindex, 'BOMProductsID');
        $.ajax({
            type: "POST",
            url: "@Url.Action("HeadergetBatchRecord", "FGReceived")",
            data: { warehouseid: WarehouseID, ProductID: ProductsID },
        success: function (response1) {
            var BatchName = '';
            if (response1.length > 0) {
                for (var i = 0; i < response1.length; i++) {
                    if (response1[i].BatchID == Batch) {
                        BatchName = response1[i].BatchName;
                    }
                }
            }

            for (var i = 0; i < response.length; i++) {
                var ProductStock = {
                    Product_SrlNo: response[i].Product_SrlNo, SrlNo: response[i].SrlNo, WarehouseID: response[i].WarehouseID, WarehouseName: response[i].WarehouseName,
                    Quantity: response[i].Quantity, SalesQuantity: response[i].SalesQuantity, Batch: response[i].Batch, ViewBatch: BatchName, SerialNo: response[i].SerialNo, //MfgDate: MfgDate, ExpiryDate: ExprieyDate, Rate: Rate,
                    //SerialNo: Serial, Barcode: "", ViewBatch: Batch, //ViewMfgDate: MfgDate, ViewExpiryDate: ExprieyDate, ViewRate: Rate,
                    IsOutStatus: response[i].IsOutStatus, IsOutStatusMsg: "", LoopID: response[i].LoopID, Status: response[i].Status, ProductID: response[i].ProductID
                }
                HeaderStockOfProduct.push(ProductStock);
            }
            //return BatchName;
        }
    });
    }

    function GetBatchName(WarehouseID, Batch, response) {
        var ProductsID = gridProductionBOMProductList.batchEditApi.GetCellValue(globalrowindex, 'BOMProductsID');
        $.ajax({
            type: "POST",
            url: "@Url.Action("getBatchRecord", "FGReceived")",
            data: { warehouseid: WarehouseID, ProductID: ProductsID },
        success: function (response1) {
            var BatchName = '';
            if (response1.length > 0) {
                for (var i = 0; i < response1.length; i++) {
                    if (response1[i].BatchID == Batch) {
                        BatchName = response1[i].BatchName;
                    }
                }
            }

            //for (var i = 0; i < response.length; i++) {
            //    var ProductStock = {
            //        Product_SrlNo: response[i].Product_SrlNo, SrlNo: response[i].SrlNo, WarehouseID: response[i].WarehouseID, WarehouseName: response[i].WarehouseName,
            //        Quantity: response[i].Quantity, SalesQuantity: response[i].SalesQuantity, Batch: response[i].Batch, ViewBatch: BatchName, SerialNo: response[i].SerialNo, //MfgDate: MfgDate, ExpiryDate: ExprieyDate, Rate: Rate,
            //        //SerialNo: Serial, Barcode: "", ViewBatch: Batch, //ViewMfgDate: MfgDate, ViewExpiryDate: ExprieyDate, ViewRate: Rate,
            //        IsOutStatus: response[i].IsOutStatus, IsOutStatusMsg: "", LoopID: response[i].LoopID, Status: response[i].Status, ProductID: response[i].ProductID
            //    }
            //    StockOfProduct.push(ProductStock);
            //}
            //return BatchName;
        }
    });
    }

    function PopulateDataInEditMode() {
        var ProductionReceiptID = $('#ProductionReceiptID').val();
        if (ProductionReceiptID > 0) {
            var order_schemaid = $('#Order_SchemaID').val();
            $('#hdnSchemaId').val(order_schemaid);
            $('#ddlSchema').attr("disabled", "disabled");
            OrderDate_dt.SetEnabled(false);
            $('#btnSaveAndNew').hide();
            $('#Order_Qty').focus();
            $('#Order_Qty').select();
            var ProductionOrderNo = $('#ProductionOrderNo').val();
            var ProductionIssueID = $('#ProductionIssueID').val();
            var ProductionIssueNo = $('#ProductionIssueNo').val();

            ProductionIssueGridLookup.SetEnabled(false);
            ProductionIssueGridLookup.SetValue(ProductionIssueID);
            ProductionIssueGridLookup.SetTextWithoutApply(ProductionIssueNo);

            var WorkCenterCode = $('#WorkCenterCode').val();
            var WorkCenterID = $('#WorkCenterID').val();

            var WorkCenterDesc = $('#WorkCenterDescription').val();

            $('#lblWorkCenterName').text(WorkCenterDesc);

            WorkCenterGridLookup.SetEnabled(false);
            WorkCenterGridLookup.SetValue(WorkCenterID);
            WorkCenterGridLookup.SetTextWithoutApply(WorkCenterCode);

            var TotalAm = $('#hdnBOMEntryProductsTotalAm').val();
            $('#txtGridProductEntryTotalAmount').val(TotalAm);
            LoadWarehouseList();
            HeaderLoadWarehouseList();
        }
        else {
            $('#ProductionReceiptID').val(0);
            $('#WorkOrderID').val(0);
            $('#btnSaveAndNew').show();
            $("#ddlSchema").removeAttr("disabled");
            $('#lblWorkCenterName').text('');
            $('#FinishedQty').removeAttr("disabled");
            $('#ddlWarehouse').removeAttr("disabled");
            OrderDate_dt.SetEnabled(true);
            ProductionIssueGridLookup.SetEnabled(true);
            WorkCenterGridLookup.SetEnabled(true);
           // $('#Order_Qty').val(parseFloat(0).toFixed(4));
            $('#ddlSchema').focus();
        }
        if ($('#RawTotalamt').val() == null || $('#RawTotalamt').val() == "" || $('#RawTotalamt').val() == undefined)
        {
            $('#RawTotalamt').val('0');
        }
        if ($('#FinishTotalQty').val() == null || $('#FinishTotalQty').val() == "" || $('#FinishTotalQty').val() == undefined) {
            $('#FinishTotalQty').val('0');
        }
      
        
        
        $('#lblAddlPrice').text(parseFloat($('#FinishAddlPrice').val()).toFixed(2));

        var value = (parseFloat($('#RawTotalamt').val()).toFixed(2) / parseFloat($('#FinishTotalQty').val()).toFixed(2));

        if (parseFloat($('#lblAddlPrice').text()).toFixed(2) != "NaN" && parseFloat($('#lblAddlPrice').text()).toFixed(2) != "0.00" && parseFloat($('#lblAddlPrice').text()).toFixed(2) != "" && parseFloat($('#lblAddlPrice').text()).toFixed(2) != undefined) {
            var ggg = parseFloat($('#lblAddlPrice').text()).toFixed(2);
            value = (parseFloat(ggg) + parseFloat(value)).toFixed(2)
            //value = parseFloat(value).toFixed(2) + parseFloat($('#lblAddlPrice').text()).toFixed(2);
        }

        if (parseFloat($('#RawTotalamt').val()).toFixed(2) == "0.00" || parseFloat($('#FinishTotalQty').val()).toFixed(2) == "0.00") {
            $('#lblFGPrice').text('0.00');
        }
        else {
            $('#lblFGPrice').text(parseFloat(value).toFixed(2));
        }


        if (parseFloat($('#lblFGPrice').text()).toFixed(2) == "NaN" || parseFloat($('#lblAddlPrice').text()).toFixed(2) == "NaN") {

            var lblConsumpPrice = "0.00";
            $('#lblConsumpPrice').text(parseFloat(lblConsumpPrice).toFixed(2));
        }
        else {
          //var updateLbblFGPrice = parseFloat($('#lblFGPrice').text()).toFixed(2) + parseFloat($('#lblAddlPrice').text()).toFixed(2);
          //$('#lblFGPrice').text(parseFloat(updateLbblFGPrice).toFixed(2));
          var lblConsumpPrice = parseFloat($('#lblFGPrice').text()).toFixed(2) - parseFloat($('#lblAddlPrice').text()).toFixed(2);
          $('#lblConsumpPrice').text(parseFloat(lblConsumpPrice).toFixed(2));
        }
    }

    var globalrowindex = 0;
    var Finishglobalrowindex = 0;
    var Message = "";
    function gridclick(s, e) {
        globalrowindex = e.visibleIndex;
    }
    function Finishgridclick(s, e) {
        Finishglobalrowindex = e.visibleIndex;
    }

    function WOBOMProductEndCallBack(s, e) {
        var TotalAm = $('#hdnBOMEntryProductsTotalAm').val();
        $('#txtGridProductEntryTotalAmount').val(TotalAm);
    }

    function GetServerDateFormat(today) {
        if (today != "" && today != null) {
            var dd = today.getDate();
            var mm = today.getMonth() + 1;
            var yyyy = today.getFullYear();

            if (dd < 10) {
                dd = '0' + dd;
            }
            if (mm < 10) {
                mm = '0' + mm;
            }
            today = yyyy + '-' + mm + '-' + dd;
        }
        else {
            today = "";
        }

        return today;
    }

    function BOMGridSetAmount(s, e) {

        gridProductionBOMProductList.batchEditApi.EndEdit();
        gridProductionBOMProductList.batchEditApi.StartEdit();
        var Price = gridProductionBOMProductList.batchEditApi.GetCellValue(globalrowindex, 'Price');
        var Qty = gridProductionBOMProductList.batchEditApi.GetCellValue(globalrowindex, 'ProductQty');
        if (Price != "" && Qty != "") {
            var amount = parseFloat((parseFloat(Qty).toFixed(4)) * (parseFloat(Price).toFixed(2))).toFixed(2);

            gridProductionBOMProductList.batchEditApi.StartEdit(globalrowindex, 9);
            gridProductionBOMProductList.GetEditor('Amount').SetText(amount);
            BOMGridSetTotalAmount("", "");
            RawitemTotalamount();
        }
    }

    function RawitemTotalamount()
    {
        var visiablerow=gridProductionBOMProductList.GetVisibleRowsOnPage();
        var totalamt = 0;
            for (var i = 0; i < visiablerow; i++) {
                if (gridProductionBOMProductList.GetRow(i)) {
                    var amt = gridProductionBOMProductList.batchEditApi.GetCellValue(i, 'Amount');
                   
                     totalamt = parseFloat(totalamt) + parseFloat(amt)
                   
                               
                }
            }
            $('#RawTotalamt').val(totalamt);
            if ($('#RawTotalamt').val() == null || $('#RawTotalamt').val() == "" || $('#RawTotalamt').val() == undefined) {
                $('#RawTotalamt').val('0');
            }
            if ($('#FinishTotalQty').val() == null || $('#FinishTotalQty').val() == "" || $('#FinishTotalQty').val() == undefined) {
                $('#FinishTotalQty').val('0');
            }


            $('#lblAddlPrice').text(parseFloat($('#FinishAddlPrice').val()).toFixed(2));

            var value = (parseFloat($('#RawTotalamt').val()).toFixed(2) / parseFloat($('#FinishTotalQty').val()).toFixed(2));
        
            if (parseFloat($('#lblAddlPrice').text()).toFixed(2) != "NaN" && parseFloat($('#lblAddlPrice').text()).toFixed(2) != "0.00" && parseFloat($('#lblAddlPrice').text()).toFixed(2) != "" && parseFloat($('#lblAddlPrice').text()).toFixed(2) != undefined) {
                var ggg = parseFloat($('#lblAddlPrice').text()).toFixed(2);
                value = (parseFloat(ggg) + parseFloat(value)).toFixed(2)
                //value = parseFloat(value).toFixed(2) + parseFloat($('#lblAddlPrice').text()).toFixed(2);
            }


            if (parseFloat($('#RawTotalamt').val()).toFixed(2) == "0.00" || parseFloat($('#FinishTotalQty').val()).toFixed(2) == "0.00") {
                $('#lblFGPrice').text('0.00');
            }
            else {
                $('#lblFGPrice').text(parseFloat(value).toFixed(2));
            }

          
            if (parseFloat($('#lblFGPrice').text()).toFixed(2) == "NaN" || parseFloat($('#lblAddlPrice').text()).toFixed(2) == "NaN") {

                var lblConsumpPrice = "0.00";
                $('#lblConsumpPrice').text(parseFloat(lblConsumpPrice).toFixed(2));
            }
            else {
                var lblConsumpPrice = parseFloat($('#lblFGPrice').text()).toFixed(2) - parseFloat($('#lblAddlPrice').text()).toFixed(2)
                $('#lblConsumpPrice').text(parseFloat(lblConsumpPrice).toFixed(2));
            }
            //var lblConsumpPrice = parseFloat($('#lblFGPrice').val()).toFixed(2) - parseFloat($('#lblAddlPrice').val()).toFixed(2)
            //$('#lblConsumpPrice').text(parseFloat(lblConsumpPrice).toFixed(2));
            //$('#lblFGPrice').val(parseFloat(TotalRawAMountqty).toFixed(2) / parseFloat(TotalGridFinishQty).toFixed(2));
    }

    function BOMGridSetTotalAmount(s, e) {
        gridProductionBOMProductList.batchEditApi.EndEdit();
        gridProductionBOMProductList.batchEditApi.StartEdit();
        var ToTalAmount = $('#txtGridProductEntryTotalAmount').val();

        var Amountval = gridProductionBOMProductList.batchEditApi.GetCellValue(globalrowindex, 'Amount');
        if (ToTalAmount != "" || ToTalAmount != undefined || ToTalAmount != null) {
            ToTalAmount = parseFloat(0).toFixed(2);
        }
        if (Amountval != "" && Amountval != null && Amountval != undefined) {
            ToTalAmount = parseFloat(0).toFixed(2);
            var calTotalAmount = parseFloat(parseFloat(ToTalAmount) + parseFloat(Amountval)).toFixed(2);
            $('#txtGridProductEntryTotalAmount').val(calTotalAmount);
        }

    }

    function OnStartCallback(s, e) {
        var ProductionReceiptID = $('#ProductionReceiptID').val();
        var orderno = $('#OrderNo').val();
        var OrderDate = GetServerDateFormat(OrderDate_dt.GetValue());
        var Production_ID = $('#Production_ID').val();
        var WorkCenterID = $('#WorkCenterID').val();
        var WorkOrderID = $('#WorkOrderID').val();

        var ProductionOrderID = Production_ID;
        var hdnProductionOrderID = $('#hdnProductionOrderID').val();
        var WarehouseID = $('#hddnWarehouseID').val();
        var Order_Qty = $('#Order_Qty').val();
        var Unit = $('#ddlBankBranch option:selected').val();
        var order_schemaid = $('#hdnSchemaId').val();
        var ProductionIssueID = $('#ProductionIssueID').val();
        var ProductionOrderID = $('#ProductionOrderID').val();
        var strRemarks = $('#strRemarks').val();
        var strRemarks = $('#strRemarks').val();
        var FGPrice = $('#lblFGPrice').text(); 
        var AddlPrice = $('#lblAddlPrice').text();
        var ConsumePrice = $('#lblConsumpPrice').text();
        var TotalAmount = $('#txtGridProductEntryTotalAmount').val();
        var strProjectId = $('#ProjectID').val();

        if (e != undefined) {
            e.customArgs["ProductionReceiptID"] = ProductionReceiptID;
            e.customArgs["ProductionOrderID"] = hdnProductionOrderID;
            e.customArgs["WorkOrderID"] = WorkOrderID;
            e.customArgs["OrderNo"] = orderno;
            e.customArgs["Order_SchemaID"] = order_schemaid;
            e.customArgs["WarehouseID"] = WarehouseID;
            e.customArgs["OrderDate"] = OrderDate;
            e.customArgs["Order_Qty"] = Order_Qty; //EmployeesCounterTargetList
            e.customArgs["ProductionIssueID"] = ProductionIssueID;
            e.customArgs["ProductionOrderID"] = ProductionOrderID;
            e.customArgs["FGPrice"] = FGPrice;
            e.customArgs["AddlPrice"] = AddlPrice;
            e.customArgs["ConsumePrice"] = ConsumePrice;
            e.customArgs["TotalAmount"] = TotalAmount;
            e.customArgs["Production_ID"] = ProductionOrderID;
            e.customArgs["WorkCenterID"] = WorkCenterID;
            e.customArgs["BRANCH_ID"] = Unit;
            e.customArgs["strRemarks"] = strRemarks;
            // Rev Sanchita
            e.customArgs["ProjectID"] = strProjectId;
            // End of Rev Sanchita
        }



    }

    function OnEndCallback(s, e) {

        var TotalAm = $('#hdnBOMEntryProductsTotalAm').val();
        $('#txtGridProductEntryTotalAmount').val(TotalAm);


        if ($('#RawTotalamt').val() == null || $('#RawTotalamt').val() == "" || $('#RawTotalamt').val() == undefined) {
            $('#RawTotalamt').val('0');
        }
        if ($('#FinishTotalQty').val() == null || $('#FinishTotalQty').val() == "" || $('#FinishTotalQty').val() == undefined) {
            $('#FinishTotalQty').val('0');
        }

        $('#lblAddlPrice').text(parseFloat($('#FinishAddlPrice').val()).toFixed(2));

        var value = (parseFloat($('#RawTotalamt').val()).toFixed(2) / parseFloat($('#FinishTotalQty').val()).toFixed(2));
       

        if (parseFloat($('#lblAddlPrice').text()).toFixed(2) != "NaN" && parseFloat($('#lblAddlPrice').text()).toFixed(2) != "0.00" && parseFloat($('#lblAddlPrice').text()).toFixed(2) != "" && parseFloat($('#lblAddlPrice').text()).toFixed(2) != undefined) {
            var ggg = parseFloat($('#lblAddlPrice').text()).toFixed(2);
            value=(parseFloat(ggg) + parseFloat(value)).toFixed(2)
            //value = parseFloat(value).toFixed(2) + parseFloat($('#lblAddlPrice').text()).toFixed(2);
        }

        if (parseFloat($('#RawTotalamt').val()).toFixed(2) == "0.00" || parseFloat($('#FinishTotalQty').val()).toFixed(2) == "0.00") {
            $('#lblFGPrice').text('0.00');
        }
        else {
            $('#lblFGPrice').text(parseFloat(value).toFixed(2));
        }
       
        if (parseFloat($('#lblFGPrice').text()).toFixed(2) == "NaN" || parseFloat($('#lblAddlPrice').text()).toFixed(2) == "NaN") {
            
            var lblConsumpPrice = "0.00";
            $('#lblConsumpPrice').text(parseFloat(lblConsumpPrice).toFixed(2));
        }
        else {
            var lblConsumpPrice = parseFloat($('#lblFGPrice').text()).toFixed(2) - parseFloat($('#lblAddlPrice').text()).toFixed(2)
            $('#lblConsumpPrice').text(parseFloat(lblConsumpPrice).toFixed(2));
        }
        //var lblConsumpPrice = parseFloat($('#lblFGPrice').val()).toFixed(2) - parseFloat($('#lblAddlPrice').val()).toFixed(2)
        //$('#lblConsumpPrice').text(parseFloat(lblConsumpPrice).toFixed(2));
        var orderno = s.cpOrderNo;
        Message = s.cpMessage;
        if (s.cpBatchUpdate == "1") {

            s.cpBatchUpdate = "0";

            $('#OrderNo').val('');
            $('#strRemarks').val('');
            $('#Production_ID').val(0);
            $('#WorkCenterID').val(0);
            $('#hdnDetails_ID').val(0);
            $('#Order_Qty').val(parseFloat(0).toFixed(4));
            $('#hdnSchemaId').val('');
            $('#hdnProductionOrderID').val(0);
            $('#ddlSchema').val($("#ddlSchema option:first").val());
            $('#ddlBankBranch').val($("#Unit option:first").val());
            $('#Warehouse').val('');
            cpSelectedKeys = "";
            cpSelectedKeys2 = "";
            $('#txtActualAdditionalCost').val(parseFloat(0).toFixed(4));
            $('#txtGridProductEntryTotalAmount').val(parseFloat(0).toFixed(2));
            $('#txtGridResourcesTotalAmount').val(parseFloat(0).toFixed(2));
            WorkCenterGridLookup.gridView.UnselectAllRowsOnPage();
            ProductionIssueGridLookup.gridView.UnselectAllRowsOnPage();
            $('#RevNo').val('');
            $('#FinishedItem').val('');
            $('#FinishedUom').val('');
            $('#ProductionIssueID').val(0);
            $('#ProductionOrderID').val(0);
            ProductionIssueGridLookup.OnClear();
            WorkCenterGridLookup.OnClear();
            gridProductionBOMProductList.Refresh();
            gridProductionBOMProductList.Refresh();

            if (orderno != "" && orderno != null) {

                jAlert('Order Number : ' + orderno + ' Successfully saved.', 'Alert!', function (r) {
                    if (r) {
                        if (savemode == "Exit") {
                            setTimeout(function () {
                                var url = $('#hdnWorkOrderListPage').val();
                                window.location.href = url;
                            }, 500);
                        }
                    }

                });
            }
            else {
                savemode = "";
                jAlert('Please try again later.');
                return false;
            }

        }

        if (Message == "duplicate") {
            jAlert('This Order no already present!');

            return false;
        }
    }

    function ChkMoneyDigitCount(e) {
        var data = $(e).val();
        $(e).val(parseFloat(data).toFixed(2));
    }


    function totalAmountSetLogic() {
        //Logic For Set Total Amount 22-08-2019
        var caltotalamount = 0;
        gridProductionBOMProductList.batchEditApi.EndEdit();
        for (var i = 500; i > -500; i--) {
            if (gridProductionBOMProductList.GetRow(i)) {
                var Amountval = gridProductionBOMProductList.batchEditApi.GetCellValue(i, 'Amount');
                if (Amountval != null && Amountval != "") {
                    caltotalamount = caltotalamount + parseFloat(Amountval);
                }
            }
            $('#txtGridProductEntryTotalAmount').val(caltotalamount.toFixed(2));
        }
        SetFGPrice();
        //Logic For Set Total Amount 22-08-2019
    }

    function changeQtyValue(e) {

        var newqty = $(e).val();
        var hdnproductqty = $('#hdnProductQty').val();
        var visiablerow = gridProductionBOMProductList.GetVisibleRowsOnPage();
        if (visiablerow > 0) {
            for (var i = 500; i > -500; i--) {
                if (gridProductionBOMProductList.GetRow(i)) {
                    gridProductionBOMProductList.batchEditApi.StartEdit(i, 3);
                    var Qty = 0;
                    Qty = gridProductionBOMProductList.batchEditApi.GetCellValue(i, 'OLDQty');
                    if (parseFloat(Qty) > 0) {
                        var calcqty = (parseFloat(Qty) * newqty) / hdnproductqty;
                        gridProductionBOMProductList.GetEditor('ProductQty').SetText(parseFloat(calcqty).toFixed(4));
                        globalrowindex = i;
                        BOMGridSetAmount("", "");
                    }
                }
            }
            totalAmountSetLogic();
        }

        SetFGPrice();
    }

    function setUpdateEditVlaueToGrid() {
        var visiablerow = gridProductionBOMProductList.GetVisibleRowsOnPage();
        if (visiablerow > 0) {
            for (var i = 0; i < 1000; i++) {
                if (gridProductionBOMProductList.GetRow(i)) {
                    if (gridProductionBOMProductList.GetRow(i).style.display != "none") {
                        gridProductionBOMProductList.batchEditApi.StartEdit(i, 11);
                        gridProductionBOMProductList.GetEditor("UpdateEdit").SetText(gridProductionBOMProductList.GetEditor("UpdateEdit").GetText() + i);
                    }
                }
            }

            for (i = -1; i > -1000; i--) {
                if (gridProductionBOMProductList.GetRow(i)) {
                    if (gridProductionBOMProductList.GetRow(i).style.display != "none") {
                        gridProductionBOMProductList.batchEditApi.StartEdit(i, 11);
                        gridProductionBOMProductList.GetEditor("UpdateEdit").SetText(gridProductionBOMProductList.GetEditor("UpdateEdit").GetText() + i);
                    }
                }
            }
        }
    }

    function SuffleRows() {

        for (var i = 0; i < 1000; i++) {
            if (gridProductionBOMProductList.GetRow(i)) {
                if (gridProductionBOMProductList.GetRow(i).style.display != "none") {
                    gridProductionBOMProductList.batchEditApi.StartEdit(i, 11);
                    gridProductionBOMProductList.GetEditor("UpdateEdit").SetText(gridProductionBOMProductList.GetEditor("UpdateEdit").GetText() + i);
                }
            }
        }

        for (i = -1; i > -1000; i--) {
            if (gridProductionBOMProductList.GetRow(i)) {
                if (gridProductionBOMProductList.GetRow(i).style.display != "none") {
                    gridProductionBOMProductList.batchEditApi.StartEdit(i, 11);
                    gridProductionBOMProductList.GetEditor("UpdateEdit").SetText(gridProductionBOMProductList.GetEditor("UpdateEdit").GetText() + i);
                }
            }
        }
    }

    var savemode = "";
    var hasmsg = 0;

    function ProductionReceiptSave(mode) {


        setUpdateEditVlaueToGrid();
        savemode = mode;
        hasmsg = 0;
        var ProductionReceiptIDd = $('#ProductionReceiptID').val();
        var WorkOrderID = $('#WorkOrderID').val()
        var orderno = $('#OrderNo').val();
        var OrderDate = GetServerDateFormat(OrderDate_dt.GetValue());
        var Production_ID = $('#Production_ID').val();
        //var Details_ID = $('#hdnDetails_ID').val();
        var Unit = $('#ddlBankBranch option:selected').val();
        var Order_Qty = $('#Order_Qty').val();
        var workcenter = $('#WorkCenterID').val();//WorkCenterGridLookup.gridView.currentSelectionState.InputText;

        var hdnBalQty = $('#hdnBalQty').val();

        var order_schemaid = $('#hdnSchemaId').val();
        //var ActualAdditionalCost = $('#txtActualAdditionalCost').val();
        //if (ActualAdditionalCost == '') {
        //    ActualAdditionalCost = parseFloat(0).toFixed(2);
        //    $('#txtActualAdditionalCost').val(ActualAdditionalCost);
        //}
        var pendingQty = $('#hdnOrder_QtyMax').val();
        var WarehouseID = $('#hddnWarehouseID').val();
        var ddlSchema = $('#ddlSchema option:selected').val();
        //var TotalCost = $('#txtGridProductEntryTotalAmount').val();
        SuffleRows();

        //if (parseFloat(pendingQty) < parseFloat(Order_Qty)) {
        //    jAlert("Receipt QTY not greater than balance qty");
        //    return false;
        //}

        //if (Warehouse.GetText() == "")
        //{
        //    jAlert("Please select warehouse.");
        //    return false;
        //}

        //if (parseFloat(Order_Qty) == "" || parseFloat(Order_Qty) == 0)
        //{
        //    jAlert("Please enter Receipt QTY.");
        //    return false;
        //}

        var visiablerowFinish = gridFGFinishItemList.GetVisibleRowsOnPage();
        if (visiablerowFinish ==0)
        {
            jAlert('Please add finished item.');
            return false;
        }

        var visiablerow = gridProductionBOMProductList.GetVisibleRowsOnPage();

        var requireddata = 0;
        var requireddataforwarehouse = 0;
        for (var i = 0; i <= visiablerow - 1; i++) {
            gridProductionBOMProductList.batchEditApi.EndEdit();

            var IsInventory;
            var invtory = gridProductionBOMProductList.batchEditApi.GetCellValue(i, 'InventoryType');
            if (invtory != "" && invtory != null && invtory != undefined) {
                IsInventory = 'yes';
            }
            else {
                IsInventory = 'No';
            }

            
            var SlNO = gridProductionBOMProductList.batchEditApi.GetCellValue(i, 'SlNO');
            var serialCriteria = [{ Field: "Product_SrlNo", Values: "" + SlNO + "" }];
            var tempStockOfProduct = flexFilter(StockOfProduct, serialCriteria);
            if (tempStockOfProduct == undefined || tempStockOfProduct.length == 0) {
                if (IsInventory != 'No' && IsInventory != undefined) {
                    requireddata = 1;
                    break;
                }

            }
        }

        //if (requireddata == 1) {
        //    jAlert("Please enter all stock warehouse details to process.");
        //    return false;
        //}



        for (var i = 0; i <= visiablerow - 1; i++) {
            gridProductionBOMProductList.batchEditApi.EndEdit();

            var warehouseTotalProductQty = 0;
            var warehouseProductQty = 0;

            var IsInventory;
            var invtory = gridProductionBOMProductList.batchEditApi.GetCellValue(i, 'InventoryType');
            if (invtory != "" && invtory != null && invtory != undefined) {
                IsInventory = 'yes';
            }
            else {
                IsInventory = 'No';
            }

           
            var GridProductQty = gridProductionBOMProductList.batchEditApi.GetCellValue(i, 'ProductQty');
            var SlNO = gridProductionBOMProductList.batchEditApi.GetCellValue(i, 'SlNO');
            var serialCriteria = [{ Field: "Product_SrlNo", Values: "" + SlNO + "" }];
            var tempStockOfProduct = flexFilter(StockOfProduct, serialCriteria);
            if (IsInventory != 'No' && IsInventory != undefined) {
                if (tempStockOfProduct == undefined || tempStockOfProduct.length == 0) {
                    requireddataforwarehouse = 1;
                    break;
                }
                else if (tempStockOfProduct.length > 0) {
                    for (var i = 0; i < tempStockOfProduct.length; i++) {
                        var objprod = {};
                        objprod = tempStockOfProduct[i];
                        if (objprod.Quantity != "") {
                            warehouseTotalProductQty = warehouseTotalProductQty + parseFloat(objprod.Quantity);
                        }
                    }
                }
                if (parseFloat(warehouseTotalProductQty) != parseFloat(GridProductQty)) {
                    requireddataforwarehouse = 1;
                    break;
                }
            }

        }


        //if (requireddataforwarehouse == 1) {
        //    jAlert("Product  Quantity must be equal to Warehouse Quantity.");
        //    return false;
        //}


        var visiablerow = gridProductionBOMProductList.GetVisibleRowsOnPage();
        if (visiablerow > 0) {
            if (orderno != '' && OrderDate != '' && Order_Qty != '' && workcenter > 0   && Unit != undefined) {

                //if (parseFloat(hdnBalQty) < parseFloat(Order_Qty) && WorkOrderID < 1) {
                //    $('#Order_Qty').focus();
                //    $('#Order_Qty').select();
                //    jAlert('Receipt Qty entered is greater than available quantity. Cannot proceed.');

                //    return false;
                //}
                //else {

                    var msgbalqty = '';
                    var msgbalqtyindex = 0;
                    if (parseInt(ProductionReceiptIDd) > 0) {
                        for (var i = 0; i < visiablerow; i++) {
                            if (gridProductionBOMProductList.GetRow(i)) {
                                var Qty = gridProductionBOMProductList.batchEditApi.GetCellValue(i, 'ProductQty');
                                var balQty = gridProductionBOMProductList.batchEditApi.GetCellValue(i, 'BalQty');
                                var OLDQty = gridProductionBOMProductList.batchEditApi.GetCellValue(i, 'OLDQty');
                                var TotaVal = parseFloat(balQty) + parseFloat(OLDQty)
                                if (parseFloat(Qty) > 0) {
                                    if (parseFloat(Qty) > parseFloat(TotaVal)) {
                                        msgbalqty = 'Qty entered is greater than available quantity. Cannot proceed.';
                                        msgbalqtyindex = i;
                                        break;
                                    }
                                }
                                else
                                {
                                    msgbalqty = 'Quantity Can not be zero.';
                                    msgbalqtyindex = i;
                                    break;
                                }
                               
                            }
                        }
                    }
                    else
                    {
                        for (var i = 0; i < visiablerow; i++) {
                            if (gridProductionBOMProductList.GetRow(i)) {
                                var Qty = gridProductionBOMProductList.batchEditApi.GetCellValue(i, 'ProductQty');
                                var balQty = gridProductionBOMProductList.batchEditApi.GetCellValue(i, 'BalQty');
                                if (parseFloat(Qty) > 0) {
                                    if (parseFloat(Qty) > parseFloat(balQty)) {
                                        msgbalqty = 'Qty entered is greater than available quantity. Cannot proceed.';
                                        msgbalqtyindex = i;
                                        break;
                                    }
                                }
                                else
                                {
                                    msgbalqty = 'Quantity Can not be zero.';
                                    msgbalqtyindex = i;
                                    break;
                                }
                            }
                        }
                    }
                    if (msgbalqty == '') {

                        if (parseInt(ProductionReceiptIDd) > 0) {
                            $.ajax({
                                type: "POST",
                                async: false,
                                url: "@Url.Action("EditModeWarehouseLiust", "FGReceived")",
                                data: { items: StockOfProduct, Finishitems: HeaderStockOfProduct },
                                async: false,
                                success: function (response) {

                                }
                            });
                        }

                        gridProductionBOMProductList.UpdateEdit();
                        gridProductionBOMProductList.UpdateEdit();
                        $('#EddlSchema').hide();
                        $('#EOrderNo').hide();
                        $('#EOrderDate_dt').hide();
                        $('#Eworkcenter').hide();
                    }
                    else {
                        setTimeout(function () {
                            gridProductionBOMProductList.batchEditApi.StartEdit(msgbalqtyindex, 3);
                        }, 800);

                        jAlert(msgbalqty);

                        return false;
                    }
               // }
            }
            else {
                savemode = "";
                if (ddlSchema == '') {
                    $('#EddlSchema').show();
                }
                else {
                    $('#EddlSchema').hide();
                }
                if (orderno == '') {
                    $('#EOrderNo').show();
                }
                else {
                    $('#EOrderNo').hide();
                }
                if (OrderDate == '') {
                    $('#EOrderDate_dt').show();
                }
                else {
                    $('#EOrderDate_dt').hide();
                }
                if (workcenter > 0) {
                    $('#Eworkcenter').hide();
                }
                else {
                    $('#Eworkcenter').show();
                }
                if (Unit == undefined || Unit == "") {
                    $('#Eunit').show();
                }
                else {
                    $('#Eunit').hide();
                }

                return false;
            }
        }
        else {
            jAlert('Please select Production who has products!');
            return false;
        }
    }

    function SetDefaultDate(s, e) {
        OrderDate_dt.SetValue(new Date());
    }

    function ProductionIssueGotFocus(s, e) {
        ProductionIssueGridLookup.ShowDropDownArea();
    }
    function RefreshIssueLookup(s,e)
    {
        var lookup = ASPxClientControl.GetControlCollection().GetByName("ProductionIssueGridLookup");
        lookup.GetGridView().Refresh();
        lookup.GetGridView().Refresh();
    }

</script>

<link href="~/Views/FGReceived/ProductionReceiptEntry.css" rel="stylesheet" />

<div class="panel-title clearfix" id="myDiv">
    <h3 class="pull-left">
        <label>FG Received</label>
    </h3>
    <div id="ApprovalCross" class="crossBtn"><a href="@Url.Action("FGReceivedList", "FGReceived")"><i class="fa fa-times"></i></a></div>
</div>
<input type="hidden" id="hdfIsRateExists" />
<input type="hidden" id="HeaderhdfIsRateExists" />
<input type="hidden" id="hdfIsBarcodeGenerator" value="@ViewBag.hdfIsBarcodeGenerator" />
<input type="hidden" id="hdnProductQuantity" />
<input type="hidden" id="HeaderhdnProductQuantity" />
<input type="hidden" id="hdfProductSerialID" />
<input type="hidden" id="HeaderhdfProductSerialID" />
<input type="hidden" id="hdfProductID" />'
<input type="hidden" id="HeaderhdfProductID" />
@*<input type="hidden" id="hdnRawTotalamt" value="@ViewBag.RawTotalamt" />
<input type="hidden" id="hdnFinishTotalQty" value="@ViewBag.FinishTotalQty" />*@
<input type="hidden" id="LastCompany" value="@ViewBag.LastCompany" />
<input type="hidden" id="LastFinancialYear" value="@ViewBag.LastFinancialYear" />
<input type="hidden" value="@Model.Order_SchemaID" id="hdnSchemaId" />
<input type="hidden" value="@Model.ProductionIssueQty" id="hdnOrder_QtyMax" />
@Html.HiddenFor(x => x.WorkOrderID)
@Html.HiddenFor(x => x.Production_ID)
@Html.HiddenFor(x => x.WorkCenterID)
@Html.HiddenFor(x => x.Order_SchemaID)
@Html.HiddenFor(x => x.ProductionIssueID)
@Html.HiddenFor(x => x.ProductionIssueNo)
@Html.HiddenFor(x => x.ProductionOrderID)
@Html.HiddenFor(x => x.WorkCenterCode)
@Html.HiddenFor(x => x.Details_ID)
@Html.HiddenFor(x => x.WorkCenterDescription)
@Html.HiddenFor(x => x.ProductionReceiptID)
<input type="hidden" value="@Model.WarehouseID" id="hddnWarehouseID" />
<input type="hidden" value="@Model.HeaderInventoryType" id="HeaderInventoryType" />
<input type="hidden" id="OldFGQuantity" />
<input type="hidden" id="MaxBalFGQuantity" />
<input type="hidden" id="hdnFinishedItem" />
<input type="hidden" id="hdnFinishedItemUOM" />
<input type="hidden" id="hddnProductionIssueID" />
@Html.HiddenFor(x => x.Finished_Qty, new { @id = "hdnProductQty" })
<input type="hidden" id="hdnBalQty" value="0" />
@*Rev Sanchita*@
<input type="hidden" id="ProjectID" value="0" />
@*End of rev Sanchita*@
<input type="hidden" value="@Url.Action("FGReceivedList", "FGReceived")" id="hdnWorkOrderListPage" />


<div class="boxBorder">
    <div class="styledBox">
        <div class="row">
            <div class="col-md-2 col-lg-2">
                <label class="mtop10">Numbering Scheme <span style="color:red">*</span></label>
                <div class="relative">
                    <select id="ddlSchema" class="form-control" onchange="Scheme_ValueChange()"></select>
                    <span id="EddlSchema" class="customerno pullleftClass fa fa-exclamation-circle iconRed " style="color: red; position: absolute; display: none" title="Mandatory"></span>
                </div>
            </div>

            <div class=" col-md-2 col-lg-2">
                <label class="mtop10">FG Received No. <span style="color:red">*</span></label>
                <div class="relative">
                    @Html.TextBoxFor(m => m.OrderNo, new { @class = "form-control", @disabled = "disabled" })
                    <span id="EOrderNo" class="customerno pullleftClass fa fa-exclamation-circle iconRed " style="color: red; position: absolute; display: none" title="Mandatory"></span>
                </div>
            </div>

            <div class=" col-md-3 col-lg-2">
                <label>FG Received Date <span style="color:red">*</span></label>
                <div class="relative">
                    @Html.DevExpress().DateEdit(
                                     settings =>
                                     {
                                         settings.Name = "OrderDate_dt";
                                         settings.Properties.DisplayFormatString = "dd-MM-yyyy";
                                         settings.Properties.EditFormatString = "dd-MM-yyyy";
                                         settings.Width = Unit.Percentage(100);
                                         //settings.Properties.ClientSideEvents.DateChanged = "datevalidateTo";
                                         settings.Date = Convert.ToDateTime(@Model.dtOrderDate);
                                         settings.Properties.ClientSideEvents.Init = "SetDefaultDate";
                                         settings.Properties.ClientSideEvents.LostFocus = "RefreshIssueLookup";
                                         settings.Properties.UseMaskBehavior = true;
                                     }
                            ).GetHtml()
                    <span id="EOrderDate_dt" class="customerno pullleftClass fa fa-exclamation-circle iconRed " style="color: red; position: absolute; display: none" title="Mandatory"></span>
                </div>
            </div>

            <div class=" col-md-3 col-lg-3">
                <label class="">Unit <span style="color:red">*</span></label>
                <div class="relative">
                    @Html.DropDownListFor(x => x.BRANCH_ID, new System.Web.Mvc.SelectList(Model.UnitList, "BranchID", "BankBranchName"), new { @id = "ddlBankBranch", @class = "form-control", @disabled = "disabled", @onchange = "PopulateWareHouseData();" })
                    @*@Html.TextBoxFor(m => m.Unit, new { @class = "form-control", @disabled = "disabled" })*@

                    <span id="Eunit" class="customerno pullleftClass fa fa-exclamation-circle iconRed " style="color: red; position: absolute; display: none" title="Mandatory"></span>
                </div>
                @*@Html.TextBoxFor(m => m.Unit, new { @class = "form-control" })*@
            </div>

        </div>
        <div class="row">
            <div class=" col-md-2 col-lg-2">
                <label class="mtop10">Ref. Issue No. <span style="color:red">*</span></label>
                <div class="relative">
                    <div class="lookupTdHide">
                        @Html.Action("GetPIList", "FGReceived", new { dtOrderDate = @Model.dtOrderDate })
                    </div>
                    <span id="EIssueNo" class="customerno pullleftClass fa fa-exclamation-circle iconRed " style="color: red; position: absolute; display: none" title="Mandatory"></span>
                </div>
            </div>





            <div class=" col-md-2 col-lg-2">
                <label class="mtop10">Ref. Issue Date <span style="color:red">*</span></label>
                <div class="relative">
                    @Html.TextBoxFor(m => m.IssueDate, new { @class = "form-control", @disabled = "disabled" })
                    <span id="EOrderNo" class="customerno pullleftClass fa fa-exclamation-circle iconRed " style="color: red; position: absolute; display: none" title="Mandatory"></span>
                </div>
            </div>

            <div class=" col-md-2 col-lg-2">
                <label class="mtop10">Job Work Order No. <span style="color:red">*</span></label>
                <div class="relative">
                    @Html.TextBoxFor(m => m.WorkOrderNo, new { @class = "form-control", @disabled = "disabled" })
                    <span id="EWorkOrderNo" class="customerno pullleftClass fa fa-exclamation-circle iconRed " style="color: red; position: absolute; display: none" title="Mandatory"></span>
                </div>
            </div>

            <div class=" col-md-3 col-lg-3">
                @*<label class="">Finished Item </label>
                <div class="relative">
                    @Html.TextBoxFor(m => m.FinishedItem, new { @class = "form-control", @disabled = "disabled" })
                </div>*@

                <label>Finished Item <span style="color:red">*</span></label>
                <div class="relative">
                    @*@Html.TextBoxFor(m => m.FinishedItem, new { @class = "form-control", @disabled = "disabled" })*@
                    @Html.DevExpress().ButtonEdit(
                         settings =>
                         {
                             settings.Name = "btnFinishedItem";
                             settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                             settings.Text = Model.FinishedItem;
                             settings.ReadOnly = true;
                             settings.Properties.Buttons.Add("...");
                             settings.Properties.ClientSideEvents.ButtonClick = "function(s,e){btnProductList_Click(s,e);}";
                             settings.Properties.ClientSideEvents.KeyDown = "function(s,e){btnPayStructure_KeyDown(s,e);}";

                         }).GetHtml()
                </div>

            </div>

        </div>
        <div class="row">
            <div class="col-md-3 col-lg-2">
                <label class="">Receipt Qty <span style="color:red">*</span></label>
                <div class="relative">
                    <table style="width:100%" class="finishedQttable">
                        <tr>
                            <td>@Html.TextBoxFor(m => m.Order_Qty, new { @class = "form-control decimalCheck", @onchange = "ChkDataDigitCount(this); checkMaxValue(this);", @PlaceHolder = "0.0000" })</td>
                            <td>@Html.TextBoxFor(m => m.FinishedUom, new { @class = "form-control", @disabled = "disabled" })</td>
                        </tr>
                    </table>
                    <span id="EFinishedQty" class="customerno pullleftClass fa fa-exclamation-circle iconRed " style="color: red; position: absolute; display: none" title="Mandatory"></span>
                </div>
            </div>





            <div class=" col-md-1 col-lg-1">
                <label class="mtop10">Rate</label>
                <div class="relative">
                    @Html.TextBoxFor(m => m.JobWorkRate, new { @class = "form-control decimalCheck", @onchange = "ChkJobworkrateDigitCount(this);", @PlaceHolder = "0.00" })
                </div>
            </div>

            <div class=" col-sm-3 lblmTop8">
                <label>Description</label>
                @Html.TextBoxFor(m => m.Description, new { @class = "form-control", @disabled = "disabled" })
            </div>
            <div class=" col-sm-3 lblmTop8" style="display:none">
                <label>Item No:</label>
                <div class="relative">
                    @Html.TextBoxFor(m => m.PartNoName, new { @class = "form-control", @disabled = "disabled" })
                </div>
            </div>
            <div class=" col-md-3 col-lg-3">
                <label>Warehouse <span style="color:red">*</span></label>
                <div class="relative">
                    @*@Html.TextBoxFor(m => m.Warehouse, new { @class = "form-control", @disabled = "disabled" })*@
                    @*@Html.DevExpress().ButtonEdit(
                                             settings =>
                                             {
                                                 settings.Name = "Warehouse";
                                                 settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                                                 settings.Text = Model.Warehouse;
                                                 settings.ReadOnly = true;
                                                 settings.Properties.Buttons.Add("...");
                                                 settings.ControlStyle.CssClass = "dateEditInput";
                                                 settings.Properties.ClientSideEvents.ButtonClick = "function(s,e){OpenWarehouseList(s,e);}";
                                                 settings.Properties.ClientSideEvents.KeyDown = "function(s,e){WarehouseKeyDown(s,e);}";

                                             }).GetHtml()*@
                    <i class="fa fa-home cdc" onclick="OpenWarehouseList()"></i>
                </div>
            </div>

            
         
           

        </div>
        <div class="row">
            <div class="col-sm-2">
                <label>Drawing No:</label>
                @Html.TextBoxFor(m => m.DesignNo, new { @class = "form-control", @disabled = "disabled" })
            </div>

            <div class="col-sm-2">
                <label>Drawing Rev. No:</label>
                @Html.TextBoxFor(m => m.ItemRevNo, new { @class = "form-control", @disabled = "disabled" })
            </div>

            <div class=" col-sm-1">
                <label class="">&nbsp; </label>
                <div class="relative" style="padding-top: 0px">
                    <button type="button" id="btnAdd" onclick="btnAdd_ProductClick()" class="btn btn-success">Add</button>
                </div>
            </div>

      </div>



        <div class="row">
            <div class="col-md-12">

                <div id="refreshgrid">
                    <div class=" ">
                        @*<span class="fullScreenTitle">Estimate</span>*@

                        @{
                            Html.RenderAction("GetWorkOrderFinishItemDetailsDetailsProductList", "FGReceived");
                        }
                    </div>
                </div>

            </div>


        </div>

            <div class="row">
                <div class=" col-md-2 col-lg-2">
                    <label class="">Work Center <span style="color:red">*</span></label>
                    <div class="relative">
                        <div class="lookupTdHide">
                            @Html.Action("GetWCList", "FGReceived")
                        </div>
                        <span id="Eworkcenter" class="customerno pullleftClass fa fa-exclamation-circle iconRed " style="color: red; position: absolute; display: none" title="Mandatory"></span>
                    </div>
                </div>

                <div class=" col-md-2 col-lg-2">
                    <label class="">Work Center Name </label>
                    <div class="relative">
                        <label id="lblWorkCenterName" style="width: 100%; background: #eee; height: 24px; border: 1px solid #bbb8b8; padding: 3px 5px; white-space: nowrap; overflow: hidden;">@Model.WorkCenterDescription</label>
                    </div>
                </div>

                <div class=" col-md-1 col-lg-1">
                    <label>FG Price </label>
                    <div class="relative">
                        <label id="lblFGPrice" style="width: 100%; background: #eee; height: 24px; border: 1px solid #bbb8b8; padding: 3px 5px; ">@Model.FGPrice</label>
                    </div>
                </div>
                <div class=" col-md-1 col-lg-1">
                    <label>Addl Price </label>
                    <div class="relative">
                        <label id="lblAddlPrice" style="width: 100%; background: #eee; height: 24px; border: 1px solid #bbb8b8; padding: 3px 5px; ">@Model.AddlPrice</label>
                    </div>
                </div>

                <div class=" col-md-1 col-lg-2">
                    <label>Consump. Price </label>
                    <div class="relative">
                        <label id="lblConsumpPrice" style="width: 100%; background: #eee; height: 24px; border: 1px solid #bbb8b8; padding: 3px 5px; ">@Model.ConsumePrice</label>
                    </div>
                </div>
                <div class=" col-sm-4">
                    <label class="">Remarks </label>
                    <div class="relative">
                        @Html.TextBoxFor(m => m.strRemarks, new { @class = "form-control" })
                    </div>
                </div>


            </div>
            <div class="row">

                <div class=" col-sm-2" id="divProj">
                    <label>Project Code:</label>
                    @Html.TextBoxFor(m => m.Proj_Code, new { @class = "form-control", @disabled = "disabled" })
                </div>
                <div class=" col-sm-2" id="divHierarchy">
                    <label>Hierarchy:</label>
                    @Html.TextBoxFor(m => m.Hierarchy, new { @class = "form-control", @disabled = "disabled" })
                </div>

            </div>

        
        </div>

    <div class="row">

        <div class="col-md-12">

            <div id="refreshgrid" class="mTop10">
                @{
                    Html.RenderAction("GetProductionReceiptDetailsProductList", "FGReceived", new { DetailsID = Model.Details_ID });
                }
            </div>
            <div class="clearfix footrGrider" style="display:none">
                <div class=" pull-left mTop5" style="margin-left:50%;">
                    <table>
                        <tr>
                            <td class="pdRight10"><label>Total Amount </label></td>
                            <td><input type="text" class="form-control" id="txtGridProductEntryTotalAmount" style=" width: 132px;" value="@Model.TotalAmount" placeholder="0.00" disabled /></td>
                        </tr>
                    </table>
                </div>
            </div>
        </div>


    </div>


    <div class="clearfix">
        @if (Convert.ToInt16(ViewBag.IsView) == 0)
        {
            <button type="button" class="inline-block addResourceBtn themeColor mRight5" id="btnSaveAndNew" onclick="ProductionReceiptSave('New');">
                <div class="addEdcircleBtn" id=""><i class="fa fa-floppy-o"></i></div>
                <span><u>S</u>ave and New</span>


            </button>
    <button type="button" class="inline-block addResourceBtn themeColor " id="saveandexit" onclick="ProductionReceiptSave('Exit');">
        <div class="addEdcircleBtn" id=""><i class="fa fa-reply"></i></div>
        <span>Save and E<u>x</u>it</span>
    </button>
             <label id="lbltaggedsms" style="color: red; display: none;font-size:medium">Already tagged in other module.</label>
        }

    </div>
    <input type="hidden" id="hdnPendqty" />
    <div class="row mTop10">

    </div>


    <div class="modal fade pmsModal w30" id="GridWarehouselistModel" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    @*<button type="button" class="close" data-dismiss="modal" onclick="SetWarehouseAfterProduct()">&times;</button>*@
                    <h4 class="modal-title">Select Warehouse</h4>
                </div>
                <div class="modal-body">
                    <div id="slcWarehouse">
                        <select id="ddlWarehouselist" class="form-control"></select>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-success btn-radius" id="setWarehousegrid" onclick="SetWarehouseInGrid()">Ok</button>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="ProductlistModel" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    @*<button type="button" class="close" data-dismiss="modal" onclick="SetFocusQty();">&times;</button>*@
                    <h4 class="modal-title">Select Product</h4>
                </div>
                <div class="modal-body">
                    <input type="text" onkeydown="ProductListkeydown(event)" id="txtProductName" autofocus width="100%" placeholder="Search By Product Name or Short Name" />
                    <div id="ProductTable">
                        <table border='1' width="100%" class="dynamicPopupTbl">
                            <tbody>
                                <tr class="HeaderStyle">
                                    <th class="hide">id</th>
                                    <th>Product Code</th>
                                    <th>Product Name</th>
                                    <th>UOM</th>
                                    <th>Inventory</th>
                                    <th>HSN/SAC</th>
                                    <th>Brand</th>
                                    <th>Class</th>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
    <!-- Warehouse Details Modal -->
    <div class="modal fade" id="WarehouseDetailsModal" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Warehouse Details</h4>
                </div>
                <div class="modal-body">
                    <div id="content-5" class="pull-right wrapHolder content horizontal-images" style="width: 100%; margin-right: 0px;">
                        <ul>
                            <li>
                                <div class="lblHolder">
                                    <table>
                                        <tbody>
                                            <tr>
                                                <td>Selected Product</td>
                                            </tr>
                                            <tr>
                                                <td>
                                                    <asp:Label ID="lblProductName" runat="server"></asp:Label>
                                                </td>
                                            </tr>
                                        </tbody>
                                    </table>
                                </div>
                            </li>
                            <li>
                                <div class="lblHolder">
                                    <table>
                                        <tbody>
                                            <tr>
                                                <td>Entered Quantity </td>
                                            </tr>
                                            <tr>
                                                <td>
                                                    <label id="txt_SalesAmount" />
                                                    <label id="txt_SalesUOM" />

                                                </td>
                                            </tr>
                                        </tbody>
                                    </table>
                                </div>
                            </li>
                            <li>
                                <div class="lblHolder" id="divpopupAvailableStock" style="display: none;">
                                    <table>
                                        <tbody>
                                            <tr>
                                                <td>Available Stock</td>
                                            </tr>
                                            <tr>
                                                <td>
                                                    <asp:Label ID="lblAvailableStock" runat="server"></asp:Label>
                                                    <asp:Label ID="lblAvailableStockUOM" runat="server"></asp:Label>

                                                </td>
                                            </tr>
                                        </tbody>
                                    </table>
                                </div>
                            </li>
                            <li style="display: none;">
                                <div class="lblHolder">
                                    <table>
                                        <tbody>
                                            <tr>
                                                <td>Stock Quantity </td>
                                            </tr>
                                            <tr>
                                                <td>
                                                    <asp:Label ID="txt_StockAmount" runat="server"></asp:Label>
                                                    <asp:Label ID="txt_StockUOM" runat="server"></asp:Label>
                                                </td>
                                            </tr>
                                        </tbody>
                                    </table>
                                </div>
                            </li>

                        </ul>
                    </div>
                    <div class="clear">
                    </div>
                    <div class="clearfix  modal-body" style="background: #fff; padding: 8px 0 8px 0; margin-bottom: 15px; margin-top: 15px; border-radius: 4px; border: 1px solid #ccc;">
                        <div class="col-md-12">
                            <div class="clearfix  row">
                                <div class="col-md-3" id="div_Warehouse">
                                    <div>
                                        Warehouse
                                    </div>
                                    <div class="Left_Content" style="">
                                        <select id="WHddlWarehouse" class="form-control" onchange="ddlWarehouse_ValueChange()"></select>

                                        @*<asp:DropDownList ID="ddlWarehouse" runat="server" Width="100%" DataTextField="WarehouseName" DataValueField="WarehouseID" onchange="ddlWarehouse_ValueChange()">
                                            </asp:DropDownList>*@
                                        <span id="spnCmbWarehouse" title="Mandatory" class="tp2 fa fa-exclamation-circle iconRed" style="display: none;"></span>
                                    </div>
                                </div>
                                <div class="col-md-3" id="div_Batch" style="display:none;">
                                    <div>
                                        Batch
                                    </div>
                                    <div class="Left_Content" style="">
                                        <select id="ddlBatch" class="form-control" onchange="UpdateSerialNo()"></select>
                                        @*<input type="text" id="ddlBatch" placeholder="Batch" />*@
                                        <span id="spnCmbBatch" title="Mandatory" class="tp2 fa fa-exclamation-circle iconRed" style="display: none;"></span>
                                    </div>

                                </div>
                                <div class="clear" id="_div_Break" style="display:none;"></div>
                                <div class="col-md-3" id="div_QtyMatch" style="display:none;">
                                    <div style="float:right;">
                                        Match Quantity
                                    </div>
                                    <div class="Left_Content" style="">
                                        <input type="text" class="form-control" style="text-align:right;" id="ctxtMatchQty" maxlength="99999999" />

                                        <span id="spntxtQuantity" class="pullleftClass fa fa-exclamation-circle iconRed" style="color: red; position: absolute; display: none" title="Mandatory"></span>

                                    </div>
                                </div>

                                @*<div class="col-md-3" id="div_Serial" style="display:none;">
                                        <div style="float:right;">
                                            Serial No
                                            &nbsp;&nbsp; (
                                            <input type="checkbox" id="myCheck" name="BarCode" onchange="AutoCalculateMandateOnChange(this)">Barcode )
                                        </div>
                                        <div class="Left_Content" style="">
                                            <div class="" id="divMultipleCombo">

                                                    @*<dxe:ASPxDropDownEdit ClientInstanceName="checkComboBox" ID="ASPxDropDownEdit1" Width="89%" CssClass="pull-left" runat="server" AnimationType="None">
                                                        <dropdownwindowstyle backcolor="#EDEDED" />
                                                        <dropdownwindowtemplate>
                                                            <dxe:ASPxListBox Width="100%" Height="150" ID="listBox" ClientInstanceName="checkListBox" SelectionMode="CheckColumn" OnCallback="CmbSerial_Callback"
                                                                                runat="server">
                                                                <border borderstyle="None" />
                                                                <borderbottom borderstyle="Solid" borderwidth="1px" bordercolor="#DCDCDC" />

                                                                <clientsideevents selectedindexchanged="OnListBoxSelectionChanged" endcallback="listBoxEndCall" />
                                                            </dxe:ASPxListBox>
                                                            <table style="width: 100%">
                                                                <tr>
                                                                    <td style="padding: 4px">
                                                                        <dxe:ASPxButton ID="ASPxButton6" AutoPostBack="False" runat="server" Text="Close" Style="float: right">
                                                                            <clientsideevents click="function(s, e){ checkComboBox.HideDropDown(); }" />
                                                                        </dxe:ASPxButton>
                                                                    </td>
                                                                </tr>
                                                            </table>
                                                        </dropdownwindowtemplate>
                                                        <clientsideevents textchanged="SynchronizeListBoxValues" dropdown="SynchronizeListBoxValues" gotfocus="function(s, e){ s.ShowDropDown(); }" />
                                                    </dxe:ASPxDropDownEdit>

                                                <select id="checkComboBox" style="background-color: #EDEDED;"></select>

                                                <span id="spncheckComboBox" class="pullleftClass fa fa-exclamation-circle iconRed" style="color: red; position: absolute; display: none" title="Mandatory"></span>
                                                <div class="pull-right">
                                                    <i class="fa fa-commenting" id="abpl" aria-hidden="true" style="font-size: 16px; cursor: pointer; margin: 3px 0 0 5px;" title="Serial No " data-container="body" data-toggle="popover" data-placement="right" data-content=""></i>
                                                </div>
                                            </div>
                                        </div>
                                    </div>*@

                                <div class="col-md-3" id="div_Quantity">
                                    <div style="float:right;">
                                        Quantity
                                    </div>
                                    <div class="Left_Content" style="">
                                        <input type="number" class="form-control" style="text-align:right;" id="ctxtQuantity" maxlength="9999999" />
                                        @*<dxe:ASPxTextBox ID="txtQty" runat="server" ClientInstanceName="ctxtQty" ClientSideEvents-GotFocus="QuantityGotFocus" HorizontalAlign="Right" Font-Size="12px"
                                                Width="100%" Height="15px">
                                                <masksettings mask="&lt;0..999999999&gt;.&lt;00..9999&gt;" includeliterals="DecimalSymbol" />
                                                <validationsettings display="None"></validationsettings>
                                            </dxe:ASPxTextBox>*@
                                        <span id="rfvQuantity" title="Mandatory" class="tp2 fa fa-exclamation-circle iconRed" style="display: none;"></span>
                                    </div>
                                </div>


                                <div class="col-md-3" id="div_Serial" style="display:none;">
                                    <div>
                                        Serial No
                                        &nbsp;&nbsp;
                                        @* ( <input type="checkbox" id="myCheck" name="BarCode" onchange="AutoCalculateMandateOnChange(this)">Barcode )*@
                                    </div>
                                    @*<div class="Left_Content" style="">
                                            <input type="text" id="txtSerial" placeholder="Serial No" onkeyup="Serialkeydown(event)" />
                                            <span id="rfvSerial" title="Mandatory" class="tp2 fa fa-exclamation-circle iconRed" style="display: none;"></span>
                                        </div>*@


                                    <div class="" id="divMultipleCombo">
                                        <select id="checkComboBox" class="form-control"></select>

                                        <span id="spncheckComboBox" class="pullleftClass fa fa-exclamation-circle iconRed" style="color: red; position: absolute; display: none" title="Mandatory"></span>
                                        @*<div class="pull-right">
                                                <i class="fa fa-commenting" id="abpl" aria-hidden="true" style="font-size: 16px; cursor: pointer; margin: 3px 0 0 5px;" title="Serial No " data-container="body" data-toggle="popover" data-placement="right" data-content=""></i>
                                            </div>*@
                                    </div>


                                </div>



                                <div class="col-md-3" id="_div_Upload" style="display:none;">
                                    <div class="col-md-3">
                                        <div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div>
                                    </div>
                                    <div class="Left_Content" style="padding-top: 12px">
                                        <input type="button" onclick="SaveStock()" value="Add" class="btn btn-primary" />
                                        @*<input id="btnSecondUOM" type="button" onclick="AlternateUOMDetails('POE')" value="2nd UOM" class="btn btn-success" />*@
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div id="showData" class="gridStatic">
                    </div>

                </div>
                <div class="modal-footer">
                    @if (Convert.ToInt16(ViewBag.IsView) == 0)
                    {
                        <input type="button" onclick="FullnFinalSave()" value="Save & Exit" class="btn btn-success btn-radius" />
                        <button type="button" class="btn btn-danger btn-radius" data-dismiss="modal" onclick="SetBOMFocusGrid()">Close</button>
                    }
                </div>
            </div>
        </div>
    </div>
    <!-- Warehouse Details Modal -->

    <!-- Warehouse Details Modal -->
    <div class="modal fade" id="HeaderWarehouseDetailsModal" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Warehouse Details</h4>
                </div>
                <div class="modal-body">
                    <div id="content-5" class="pull-right wrapHolder content horizontal-images" style="width: 100%; margin-right: 0px;">
                        <ul>
                            <li>
                                <div class="lblHolder">
                                    <table>
                                        <tbody>
                                            <tr>
                                                <td>Selected Product</td>
                                            </tr>
                                            <tr>
                                                <td>
                                                    <asp:Label ID="HeaderlblProductName" runat="server"></asp:Label>
                                                </td>
                                            </tr>
                                        </tbody>
                                    </table>
                                </div>
                            </li>
                            <li>
                                <div class="lblHolder">
                                    <table>
                                        <tbody>
                                            <tr>
                                                <td>Entered Quantity </td>
                                            </tr>
                                            <tr>
                                                <td>
                                                    <label id="Headertxt_SalesAmount" />
                                                    <label id="Headertxt_SalesUOM" />

                                                </td>
                                            </tr>
                                        </tbody>
                                    </table>
                                </div>
                            </li>
                            <li>
                                <div class="HeaderlblHolder" id="HeaderdivpopupAvailableStock" style="display: none;">
                                    <table>
                                        <tbody>
                                            <tr>
                                                <td>Available Stock</td>
                                            </tr>
                                            <tr>
                                                <td>
                                                    <asp:Label ID="HeaderlblAvailableStock" runat="server"></asp:Label>
                                                    <asp:Label ID="HeaderlblAvailableStockUOM" runat="server"></asp:Label>

                                                </td>
                                            </tr>
                                        </tbody>
                                    </table>
                                </div>
                            </li>
                            <li style="display: none;">
                                <div class="lblHolder">
                                    <table>
                                        <tbody>
                                            <tr>
                                                <td>Stock Quantity </td>
                                            </tr>
                                            <tr>
                                                <td>
                                                    <asp:Label ID="Headertxt_StockAmount" runat="server"></asp:Label>
                                                    <asp:Label ID="Headertxt_StockUOM" runat="server"></asp:Label>
                                                </td>
                                            </tr>
                                        </tbody>
                                    </table>
                                </div>
                            </li>

                        </ul>
                    </div>
                    <div class="clear">
                    </div>
                    <div class="clearfix  modal-body" style="background: #fff; padding: 8px 0 8px 0; margin-bottom: 15px; margin-top: 15px; border-radius: 4px; border: 1px solid #ccc;">
                        <div class="col-md-12">
                            <div class="clearfix  row">
                                <div class="col-md-3" id="Headerdiv_Warehouse">
                                    <div>
                                        Warehouse
                                    </div>
                                    <div class="Left_Content" style="">
                                        <select id="HeaderWHddlWarehouse" class="form-control" onchange="HeaderddlWarehouse_ValueChange()"></select>

                                        @*<asp:DropDownList ID="ddlWarehouse" runat="server" Width="100%" DataTextField="WarehouseName" DataValueField="WarehouseID" onchange="ddlWarehouse_ValueChange()">
                </asp:DropDownList>*@
                                        <span id="HeaderspnCmbWarehouse" title="Mandatory" class="tp2 fa fa-exclamation-circle iconRed" style="display: none;"></span>
                                    </div>
                                </div>
                                @*<div class="col-md-3" id="Headerdiv_Batch" style="display:none;">
                                    <div>
                                        Batch
                                    </div>
                                    <div class="Left_Content" style="">
                                        <select id="HeaderddlBatch" class="form-control" onchange="HeaderUpdateSerialNo()"></select>
                                        @*<input type="text" id="ddlBatch" placeholder="Batch" />*@
                                        @*<span id="HeaderspnCmbBatch" title="Mandatory" class="tp2 fa fa-exclamation-circle iconRed" style="display: none;"></span>
                                    </div>

                                </div>*@
                                <div class="col-md-3" id="Headerdiv_Batch" style="display:none;">
                                    <div>
                                        Batch
                                    </div>
                                    <div class="Left_Content" style="">
                                        <input type="text" id="HeadertxtBatch" placeholder="Batch" />
                                        <span id="HeaderspnCmbBatch" title="Mandatory" class="tp2 fa fa-exclamation-circle iconRed" style="display: none;"></span>
                                    </div>
                                </div>
                                <div class="col-md-3" id="Header_div_Manufacture">
                                    <div>
                                        Manufacture Date
                                    </div>
                                    <div class="Left_Content" style="">

                                        @Html.DevExpress().DateEdit(
                                     settings =>
                                     {
                                         settings.Name = "HeaderWareManufactureDate";
                                         settings.Properties.DisplayFormatString = "dd-MM-yyyy";
                                         settings.Properties.EditFormatString = "dd-MM-yyyy";
                                         settings.Width = Unit.Percentage(100);
                                         //settings.Properties.ClientSideEvents.DateChanged = "datevalidateTo";
                                         // settings.Date = Convert.ToDateTime(@Model.dtOrderDate);
                                         //settings.Properties.ClientSideEvents.Init = "SetDefaultDate";
                                         //settings.Properties.ClientSideEvents.LostFocus = "RefreshIssueLookup";
                                         settings.Properties.UseMaskBehavior = true;
                                     }
                            ).GetHtml()
                                    </div>
                                </div>
                                <div class="col-md-3" id="Header_div_Expiry">
                                    <div>
                                        Expiry Date
                                    </div>
                                    <div class="Left_Content" style="">

                                        @Html.DevExpress().DateEdit(
                                     settings =>
                                     {
                                         settings.Name = "HeaderWareExpiryDate";
                                         settings.Properties.DisplayFormatString = "dd-MM-yyyy";
                                         settings.Properties.EditFormatString = "dd-MM-yyyy";
                                         settings.Width = Unit.Percentage(100);
                                         //settings.Properties.ClientSideEvents.DateChanged = "datevalidateTo";
                                         // settings.Date = Convert.ToDateTime(@Model.dtOrderDate);
                                         //settings.Properties.ClientSideEvents.Init = "SetDefaultDate";
                                         //settings.Properties.ClientSideEvents.LostFocus = "RefreshIssueLookup";
                                         settings.Properties.UseMaskBehavior = true;
                                     }
                                  ).GetHtml()
                                    </div>
                                </div>

                                <div class="clear" id="Header_div_Break" style="display:none;"></div>
                                <div class="col-md-3" id="Headerdiv_QtyMatch" style="display:none;">
                                    <div style="float:right;">
                                        Match Quantity
                                    </div>
                                    <div class="Left_Content" style="">
                                        <input type="number" class="form-control" style="text-align:right;" id="HeaderctxtMatchQty" maxlength="99999999" />

                                        <span id="HeaderspntxtQuantity" class="pullleftClass fa fa-exclamation-circle iconRed" style="color: red; position: absolute; display: none" title="Mandatory"></span>

                                    </div>
                                </div>

                                @*<div class="col-md-3" id="div_Serial" style="display:none;">
                                        <div style="float:right;">
                                            Serial No
                                            &nbsp;&nbsp; (
                                            <input type="checkbox" id="myCheck" name="BarCode" onchange="AutoCalculateMandateOnChange(this)">Barcode )
                                        </div>
                                        <div class="Left_Content" style="">
                                            <div class="" id="divMultipleCombo">

                                                    @*<dxe:ASPxDropDownEdit ClientInstanceName="checkComboBox" ID="ASPxDropDownEdit1" Width="89%" CssClass="pull-left" runat="server" AnimationType="None">
                                                        <dropdownwindowstyle backcolor="#EDEDED" />
                                                        <dropdownwindowtemplate>
                                                            <dxe:ASPxListBox Width="100%" Height="150" ID="listBox" ClientInstanceName="checkListBox" SelectionMode="CheckColumn" OnCallback="CmbSerial_Callback"
                                                                                runat="server">
                                                                <border borderstyle="None" />
                                                                <borderbottom borderstyle="Solid" borderwidth="1px" bordercolor="#DCDCDC" />

                                                                <clientsideevents selectedindexchanged="OnListBoxSelectionChanged" endcallback="listBoxEndCall" />
                                                            </dxe:ASPxListBox>
                                                            <table style="width: 100%">
                                                                <tr>
                                                                    <td style="padding: 4px">
                                                                        <dxe:ASPxButton ID="ASPxButton6" AutoPostBack="False" runat="server" Text="Close" Style="float: right">
                                                                            <clientsideevents click="function(s, e){ checkComboBox.HideDropDown(); }" />
                                                                        </dxe:ASPxButton>
                                                                    </td>
                                                                </tr>
                                                            </table>
                                                        </dropdownwindowtemplate>
                                                        <clientsideevents textchanged="SynchronizeListBoxValues" dropdown="SynchronizeListBoxValues" gotfocus="function(s, e){ s.ShowDropDown(); }" />
                                                    </dxe:ASPxDropDownEdit>

                                                <select id="checkComboBox" style="background-color: #EDEDED;"></select>

                                                <span id="spncheckComboBox" class="pullleftClass fa fa-exclamation-circle iconRed" style="color: red; position: absolute; display: none" title="Mandatory"></span>
                                                <div class="pull-right">
                                                    <i class="fa fa-commenting" id="abpl" aria-hidden="true" style="font-size: 16px; cursor: pointer; margin: 3px 0 0 5px;" title="Serial No " data-container="body" data-toggle="popover" data-placement="right" data-content=""></i>
                                                </div>
                                            </div>
                                        </div>
                                    </div>*@

                                <div class="col-md-3" id="Headerdiv_Quantity">
                                    <div style="float:right;">
                                        Quantity
                                    </div>
                                    <div class="Left_Content" style="">
                                        <input type="number" class="form-control" style="text-align:right;" id="HeaderctxtQuantity" maxlength="9999999" />
                                        @*<dxe:ASPxTextBox ID="txtQty" runat="server" ClientInstanceName="ctxtQty" ClientSideEvents-GotFocus="QuantityGotFocus" HorizontalAlign="Right" Font-Size="12px"
                    Width="100%" Height="15px">
                    <masksettings mask="&lt;0..999999999&gt;.&lt;00..9999&gt;" includeliterals="DecimalSymbol" />
                    <validationsettings display="None"></validationsettings>
                </dxe:ASPxTextBox>*@
                                        <span id="HeaderrfvQuantity" title="Mandatory" class="tp2 fa fa-exclamation-circle iconRed" style="display: none;"></span>
                                    </div>
                                </div>


                                <div class="col-md-3" id="Headerdiv_Serial" style="display:none;">
                                    <div>
                                        Serial No
                                        &nbsp;&nbsp;
                                        @* ( <input type="checkbox" id="myCheck" name="BarCode" onchange="AutoCalculateMandateOnChange(this)">Barcode )*@
                                    </div>
                                    @*<div class="Left_Content" style="">
                <input type="text" id="txtSerial" placeholder="Serial No" onkeyup="Serialkeydown(event)" />
                <span id="rfvSerial" title="Mandatory" class="tp2 fa fa-exclamation-circle iconRed" style="display: none;"></span>
            </div>*@


                                    <div class="" id="HeaderdivMultipleCombo">
                                        <select id="HeadercheckComboBox" class="form-control"></select>

                                        <span id="HeaderspncheckComboBox" class="pullleftClass fa fa-exclamation-circle iconRed" style="color: red; position: absolute; display: none" title="Mandatory"></span>
                                        @*<div class="pull-right">
                <i class="fa fa-commenting" id="abpl" aria-hidden="true" style="font-size: 16px; cursor: pointer; margin: 3px 0 0 5px;" title="Serial No " data-container="body" data-toggle="popover" data-placement="right" data-content=""></i>
            </div>*@
                                    </div>


                                </div>



                                <div class="col-md-3" id="Header_div_Upload" style="display:none;">
                                    <div class="col-md-3">
                                        <div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div>
                                    </div>
                                    <div class="Left_Content" style="padding-top: 12px">
                                        <input type="button" id="btnheaderadd" onclick="HeaderSaveStock()" value="Add" class="btn btn-primary" />
                                        @*<input id="btnSecondUOM" type="button" onclick="AlternateUOMDetails('POE')" value="2nd UOM" class="btn btn-success" />*@
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div id="HeadershowData" class="gridStatic">
                    </div>

                </div>
                <div class="modal-footer">
                    @if (Convert.ToInt16(ViewBag.IsView) == 0)
                    {
                        <input type="button" id="btnheaderSave" onclick="HeaderFullnFinalSave()" value="Save & Exit" class="btn btn-success btn-radius" />
                        <button type="button" class="btn btn-danger btn-radius" data-dismiss="modal">Close</button>
                    }
                </div>
            </div>
        </div>
    </div>
    <!-- Warehouse Details Modal -->
    <input type="hidden" id="hdfUOM" />
   
    <input type="hidden" id="HeaderhdnSrlNo" />
    <input type="hidden" id="hdfProductType" />
    <input type="hidden" id="HeaderhdfProductType" />
    <input type="hidden" id="hddnConfigVariable_Val" />
    <input type="hidden" id="GuiIDS" />
    <input type="hidden" id="HdnFinishItemId" />
    <input type="hidden" id="hddnqunatityValue" />
    <input type="hidden" id="hddneditfinishedname" />
    <input type="hidden" id="hddneditUOM" />
</div>